//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GHVHugoLib {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("HugoDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class HugoDataSet : global::System.Data.DataSet {
        
        private p_get_open_taxlotsDataTable tablep_get_open_taxlots;
        
        private AccountsDataTable tableAccounts;
        
        private p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable tablep_get_taxlots_with_running_positions_and_unit_cost_basis;
        
        private SubAccountsDataTable tableSubAccounts;
        
        private TradersDataTable tableTraders;
        
        private p_get_stock_tradesDataTable tablep_get_stock_trades;
        
        private p_get_spinoff_infoDataTable tablep_get_spinoff_info;
        
        private RealizedStockGainsDataTable tableRealizedStockGains;
        
        private RealizedEquityOptionGainsDataTable tableRealizedEquityOptionGains;
        
        private RealizedIndexOptionGainsDataTable tableRealizedIndexOptionGains;
        
        private UnrealizedEquityOptionGainsDataTable tableUnrealizedEquityOptionGains;
        
        private UnrealizedIndexOptionGainsDataTable tableUnrealizedIndexOptionGains;
        
        private TaxlotSummaryReportDataTable tableTaxlotSummaryReport;
        
        private p_get_importable_trademediaDataTable tablep_get_importable_trademedia;
        
        private p_generate_stock_daily_returns_reportDataTable tablep_generate_stock_daily_returns_report;
        
        private p_generate_stock_monthly_returns_reportDataTable tablep_generate_stock_monthly_returns_report;
        
        private UnrealizedFuturesGainsDataTable tableUnrealizedFuturesGains;
        
        private RealizedFuturesGainsDataTable tableRealizedFuturesGains;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HugoDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
            this.InitExpressions();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected HugoDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.ExcludeSchema)) {
                    this.InitExpressions();
                }
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["p_get_open_taxlots"] != null)) {
                    base.Tables.Add(new p_get_open_taxlotsDataTable(ds.Tables["p_get_open_taxlots"]));
                }
                if ((ds.Tables["Accounts"] != null)) {
                    base.Tables.Add(new AccountsDataTable(ds.Tables["Accounts"]));
                }
                if ((ds.Tables["p_get_taxlots_with_running_positions_and_unit_cost_basis"] != null)) {
                    base.Tables.Add(new p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable(ds.Tables["p_get_taxlots_with_running_positions_and_unit_cost_basis"]));
                }
                if ((ds.Tables["SubAccounts"] != null)) {
                    base.Tables.Add(new SubAccountsDataTable(ds.Tables["SubAccounts"]));
                }
                if ((ds.Tables["Traders"] != null)) {
                    base.Tables.Add(new TradersDataTable(ds.Tables["Traders"]));
                }
                if ((ds.Tables["p_get_stock_trades"] != null)) {
                    base.Tables.Add(new p_get_stock_tradesDataTable(ds.Tables["p_get_stock_trades"]));
                }
                if ((ds.Tables["p_get_spinoff_info"] != null)) {
                    base.Tables.Add(new p_get_spinoff_infoDataTable(ds.Tables["p_get_spinoff_info"]));
                }
                if ((ds.Tables["RealizedStockGains"] != null)) {
                    base.Tables.Add(new RealizedStockGainsDataTable(ds.Tables["RealizedStockGains"]));
                }
                if ((ds.Tables["RealizedEquityOptionGains"] != null)) {
                    base.Tables.Add(new RealizedEquityOptionGainsDataTable(ds.Tables["RealizedEquityOptionGains"]));
                }
                if ((ds.Tables["RealizedIndexOptionGains"] != null)) {
                    base.Tables.Add(new RealizedIndexOptionGainsDataTable(ds.Tables["RealizedIndexOptionGains"]));
                }
                if ((ds.Tables["UnrealizedEquityOptionGains"] != null)) {
                    base.Tables.Add(new UnrealizedEquityOptionGainsDataTable(ds.Tables["UnrealizedEquityOptionGains"]));
                }
                if ((ds.Tables["UnrealizedIndexOptionGains"] != null)) {
                    base.Tables.Add(new UnrealizedIndexOptionGainsDataTable(ds.Tables["UnrealizedIndexOptionGains"]));
                }
                if ((ds.Tables["TaxlotSummaryReport"] != null)) {
                    base.Tables.Add(new TaxlotSummaryReportDataTable(ds.Tables["TaxlotSummaryReport"]));
                }
                if ((ds.Tables["p_get_importable_trademedia"] != null)) {
                    base.Tables.Add(new p_get_importable_trademediaDataTable(ds.Tables["p_get_importable_trademedia"]));
                }
                if ((ds.Tables["p_generate_stock_daily_returns_report"] != null)) {
                    base.Tables.Add(new p_generate_stock_daily_returns_reportDataTable(ds.Tables["p_generate_stock_daily_returns_report"]));
                }
                if ((ds.Tables["p_generate_stock_monthly_returns_report"] != null)) {
                    base.Tables.Add(new p_generate_stock_monthly_returns_reportDataTable(ds.Tables["p_generate_stock_monthly_returns_report"]));
                }
                if ((ds.Tables["UnrealizedFuturesGains"] != null)) {
                    base.Tables.Add(new UnrealizedFuturesGainsDataTable(ds.Tables["UnrealizedFuturesGains"]));
                }
                if ((ds.Tables["RealizedFuturesGains"] != null)) {
                    base.Tables.Add(new RealizedFuturesGainsDataTable(ds.Tables["RealizedFuturesGains"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                this.InitExpressions();
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public p_get_open_taxlotsDataTable p_get_open_taxlots {
            get {
                return this.tablep_get_open_taxlots;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AccountsDataTable Accounts {
            get {
                return this.tableAccounts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable p_get_taxlots_with_running_positions_and_unit_cost_basis {
            get {
                return this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SubAccountsDataTable SubAccounts {
            get {
                return this.tableSubAccounts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TradersDataTable Traders {
            get {
                return this.tableTraders;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public p_get_stock_tradesDataTable p_get_stock_trades {
            get {
                return this.tablep_get_stock_trades;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public p_get_spinoff_infoDataTable p_get_spinoff_info {
            get {
                return this.tablep_get_spinoff_info;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RealizedStockGainsDataTable RealizedStockGains {
            get {
                return this.tableRealizedStockGains;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RealizedEquityOptionGainsDataTable RealizedEquityOptionGains {
            get {
                return this.tableRealizedEquityOptionGains;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RealizedIndexOptionGainsDataTable RealizedIndexOptionGains {
            get {
                return this.tableRealizedIndexOptionGains;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UnrealizedEquityOptionGainsDataTable UnrealizedEquityOptionGains {
            get {
                return this.tableUnrealizedEquityOptionGains;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UnrealizedIndexOptionGainsDataTable UnrealizedIndexOptionGains {
            get {
                return this.tableUnrealizedIndexOptionGains;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TaxlotSummaryReportDataTable TaxlotSummaryReport {
            get {
                return this.tableTaxlotSummaryReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public p_get_importable_trademediaDataTable p_get_importable_trademedia {
            get {
                return this.tablep_get_importable_trademedia;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public p_generate_stock_daily_returns_reportDataTable p_generate_stock_daily_returns_report {
            get {
                return this.tablep_generate_stock_daily_returns_report;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public p_generate_stock_monthly_returns_reportDataTable p_generate_stock_monthly_returns_report {
            get {
                return this.tablep_generate_stock_monthly_returns_report;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UnrealizedFuturesGainsDataTable UnrealizedFuturesGains {
            get {
                return this.tableUnrealizedFuturesGains;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RealizedFuturesGainsDataTable RealizedFuturesGains {
            get {
                return this.tableRealizedFuturesGains;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            HugoDataSet cln = ((HugoDataSet)(base.Clone()));
            cln.InitVars();
            cln.InitExpressions();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["p_get_open_taxlots"] != null)) {
                    base.Tables.Add(new p_get_open_taxlotsDataTable(ds.Tables["p_get_open_taxlots"]));
                }
                if ((ds.Tables["Accounts"] != null)) {
                    base.Tables.Add(new AccountsDataTable(ds.Tables["Accounts"]));
                }
                if ((ds.Tables["p_get_taxlots_with_running_positions_and_unit_cost_basis"] != null)) {
                    base.Tables.Add(new p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable(ds.Tables["p_get_taxlots_with_running_positions_and_unit_cost_basis"]));
                }
                if ((ds.Tables["SubAccounts"] != null)) {
                    base.Tables.Add(new SubAccountsDataTable(ds.Tables["SubAccounts"]));
                }
                if ((ds.Tables["Traders"] != null)) {
                    base.Tables.Add(new TradersDataTable(ds.Tables["Traders"]));
                }
                if ((ds.Tables["p_get_stock_trades"] != null)) {
                    base.Tables.Add(new p_get_stock_tradesDataTable(ds.Tables["p_get_stock_trades"]));
                }
                if ((ds.Tables["p_get_spinoff_info"] != null)) {
                    base.Tables.Add(new p_get_spinoff_infoDataTable(ds.Tables["p_get_spinoff_info"]));
                }
                if ((ds.Tables["RealizedStockGains"] != null)) {
                    base.Tables.Add(new RealizedStockGainsDataTable(ds.Tables["RealizedStockGains"]));
                }
                if ((ds.Tables["RealizedEquityOptionGains"] != null)) {
                    base.Tables.Add(new RealizedEquityOptionGainsDataTable(ds.Tables["RealizedEquityOptionGains"]));
                }
                if ((ds.Tables["RealizedIndexOptionGains"] != null)) {
                    base.Tables.Add(new RealizedIndexOptionGainsDataTable(ds.Tables["RealizedIndexOptionGains"]));
                }
                if ((ds.Tables["UnrealizedEquityOptionGains"] != null)) {
                    base.Tables.Add(new UnrealizedEquityOptionGainsDataTable(ds.Tables["UnrealizedEquityOptionGains"]));
                }
                if ((ds.Tables["UnrealizedIndexOptionGains"] != null)) {
                    base.Tables.Add(new UnrealizedIndexOptionGainsDataTable(ds.Tables["UnrealizedIndexOptionGains"]));
                }
                if ((ds.Tables["TaxlotSummaryReport"] != null)) {
                    base.Tables.Add(new TaxlotSummaryReportDataTable(ds.Tables["TaxlotSummaryReport"]));
                }
                if ((ds.Tables["p_get_importable_trademedia"] != null)) {
                    base.Tables.Add(new p_get_importable_trademediaDataTable(ds.Tables["p_get_importable_trademedia"]));
                }
                if ((ds.Tables["p_generate_stock_daily_returns_report"] != null)) {
                    base.Tables.Add(new p_generate_stock_daily_returns_reportDataTable(ds.Tables["p_generate_stock_daily_returns_report"]));
                }
                if ((ds.Tables["p_generate_stock_monthly_returns_report"] != null)) {
                    base.Tables.Add(new p_generate_stock_monthly_returns_reportDataTable(ds.Tables["p_generate_stock_monthly_returns_report"]));
                }
                if ((ds.Tables["UnrealizedFuturesGains"] != null)) {
                    base.Tables.Add(new UnrealizedFuturesGainsDataTable(ds.Tables["UnrealizedFuturesGains"]));
                }
                if ((ds.Tables["RealizedFuturesGains"] != null)) {
                    base.Tables.Add(new RealizedFuturesGainsDataTable(ds.Tables["RealizedFuturesGains"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablep_get_open_taxlots = ((p_get_open_taxlotsDataTable)(base.Tables["p_get_open_taxlots"]));
            if ((initTable == true)) {
                if ((this.tablep_get_open_taxlots != null)) {
                    this.tablep_get_open_taxlots.InitVars();
                }
            }
            this.tableAccounts = ((AccountsDataTable)(base.Tables["Accounts"]));
            if ((initTable == true)) {
                if ((this.tableAccounts != null)) {
                    this.tableAccounts.InitVars();
                }
            }
            this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis = ((p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable)(base.Tables["p_get_taxlots_with_running_positions_and_unit_cost_basis"]));
            if ((initTable == true)) {
                if ((this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis != null)) {
                    this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.InitVars();
                }
            }
            this.tableSubAccounts = ((SubAccountsDataTable)(base.Tables["SubAccounts"]));
            if ((initTable == true)) {
                if ((this.tableSubAccounts != null)) {
                    this.tableSubAccounts.InitVars();
                }
            }
            this.tableTraders = ((TradersDataTable)(base.Tables["Traders"]));
            if ((initTable == true)) {
                if ((this.tableTraders != null)) {
                    this.tableTraders.InitVars();
                }
            }
            this.tablep_get_stock_trades = ((p_get_stock_tradesDataTable)(base.Tables["p_get_stock_trades"]));
            if ((initTable == true)) {
                if ((this.tablep_get_stock_trades != null)) {
                    this.tablep_get_stock_trades.InitVars();
                }
            }
            this.tablep_get_spinoff_info = ((p_get_spinoff_infoDataTable)(base.Tables["p_get_spinoff_info"]));
            if ((initTable == true)) {
                if ((this.tablep_get_spinoff_info != null)) {
                    this.tablep_get_spinoff_info.InitVars();
                }
            }
            this.tableRealizedStockGains = ((RealizedStockGainsDataTable)(base.Tables["RealizedStockGains"]));
            if ((initTable == true)) {
                if ((this.tableRealizedStockGains != null)) {
                    this.tableRealizedStockGains.InitVars();
                }
            }
            this.tableRealizedEquityOptionGains = ((RealizedEquityOptionGainsDataTable)(base.Tables["RealizedEquityOptionGains"]));
            if ((initTable == true)) {
                if ((this.tableRealizedEquityOptionGains != null)) {
                    this.tableRealizedEquityOptionGains.InitVars();
                }
            }
            this.tableRealizedIndexOptionGains = ((RealizedIndexOptionGainsDataTable)(base.Tables["RealizedIndexOptionGains"]));
            if ((initTable == true)) {
                if ((this.tableRealizedIndexOptionGains != null)) {
                    this.tableRealizedIndexOptionGains.InitVars();
                }
            }
            this.tableUnrealizedEquityOptionGains = ((UnrealizedEquityOptionGainsDataTable)(base.Tables["UnrealizedEquityOptionGains"]));
            if ((initTable == true)) {
                if ((this.tableUnrealizedEquityOptionGains != null)) {
                    this.tableUnrealizedEquityOptionGains.InitVars();
                }
            }
            this.tableUnrealizedIndexOptionGains = ((UnrealizedIndexOptionGainsDataTable)(base.Tables["UnrealizedIndexOptionGains"]));
            if ((initTable == true)) {
                if ((this.tableUnrealizedIndexOptionGains != null)) {
                    this.tableUnrealizedIndexOptionGains.InitVars();
                }
            }
            this.tableTaxlotSummaryReport = ((TaxlotSummaryReportDataTable)(base.Tables["TaxlotSummaryReport"]));
            if ((initTable == true)) {
                if ((this.tableTaxlotSummaryReport != null)) {
                    this.tableTaxlotSummaryReport.InitVars();
                }
            }
            this.tablep_get_importable_trademedia = ((p_get_importable_trademediaDataTable)(base.Tables["p_get_importable_trademedia"]));
            if ((initTable == true)) {
                if ((this.tablep_get_importable_trademedia != null)) {
                    this.tablep_get_importable_trademedia.InitVars();
                }
            }
            this.tablep_generate_stock_daily_returns_report = ((p_generate_stock_daily_returns_reportDataTable)(base.Tables["p_generate_stock_daily_returns_report"]));
            if ((initTable == true)) {
                if ((this.tablep_generate_stock_daily_returns_report != null)) {
                    this.tablep_generate_stock_daily_returns_report.InitVars();
                }
            }
            this.tablep_generate_stock_monthly_returns_report = ((p_generate_stock_monthly_returns_reportDataTable)(base.Tables["p_generate_stock_monthly_returns_report"]));
            if ((initTable == true)) {
                if ((this.tablep_generate_stock_monthly_returns_report != null)) {
                    this.tablep_generate_stock_monthly_returns_report.InitVars();
                }
            }
            this.tableUnrealizedFuturesGains = ((UnrealizedFuturesGainsDataTable)(base.Tables["UnrealizedFuturesGains"]));
            if ((initTable == true)) {
                if ((this.tableUnrealizedFuturesGains != null)) {
                    this.tableUnrealizedFuturesGains.InitVars();
                }
            }
            this.tableRealizedFuturesGains = ((RealizedFuturesGainsDataTable)(base.Tables["RealizedFuturesGains"]));
            if ((initTable == true)) {
                if ((this.tableRealizedFuturesGains != null)) {
                    this.tableRealizedFuturesGains.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "HugoDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/HugoDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablep_get_open_taxlots = new p_get_open_taxlotsDataTable(false);
            base.Tables.Add(this.tablep_get_open_taxlots);
            this.tableAccounts = new AccountsDataTable();
            base.Tables.Add(this.tableAccounts);
            this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis = new p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable();
            base.Tables.Add(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis);
            this.tableSubAccounts = new SubAccountsDataTable();
            base.Tables.Add(this.tableSubAccounts);
            this.tableTraders = new TradersDataTable();
            base.Tables.Add(this.tableTraders);
            this.tablep_get_stock_trades = new p_get_stock_tradesDataTable();
            base.Tables.Add(this.tablep_get_stock_trades);
            this.tablep_get_spinoff_info = new p_get_spinoff_infoDataTable();
            base.Tables.Add(this.tablep_get_spinoff_info);
            this.tableRealizedStockGains = new RealizedStockGainsDataTable();
            base.Tables.Add(this.tableRealizedStockGains);
            this.tableRealizedEquityOptionGains = new RealizedEquityOptionGainsDataTable();
            base.Tables.Add(this.tableRealizedEquityOptionGains);
            this.tableRealizedIndexOptionGains = new RealizedIndexOptionGainsDataTable();
            base.Tables.Add(this.tableRealizedIndexOptionGains);
            this.tableUnrealizedEquityOptionGains = new UnrealizedEquityOptionGainsDataTable(false);
            base.Tables.Add(this.tableUnrealizedEquityOptionGains);
            this.tableUnrealizedIndexOptionGains = new UnrealizedIndexOptionGainsDataTable(false);
            base.Tables.Add(this.tableUnrealizedIndexOptionGains);
            this.tableTaxlotSummaryReport = new TaxlotSummaryReportDataTable();
            base.Tables.Add(this.tableTaxlotSummaryReport);
            this.tablep_get_importable_trademedia = new p_get_importable_trademediaDataTable();
            base.Tables.Add(this.tablep_get_importable_trademedia);
            this.tablep_generate_stock_daily_returns_report = new p_generate_stock_daily_returns_reportDataTable();
            base.Tables.Add(this.tablep_generate_stock_daily_returns_report);
            this.tablep_generate_stock_monthly_returns_report = new p_generate_stock_monthly_returns_reportDataTable();
            base.Tables.Add(this.tablep_generate_stock_monthly_returns_report);
            this.tableUnrealizedFuturesGains = new UnrealizedFuturesGainsDataTable(false);
            base.Tables.Add(this.tableUnrealizedFuturesGains);
            this.tableRealizedFuturesGains = new RealizedFuturesGainsDataTable();
            base.Tables.Add(this.tableRealizedFuturesGains);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializep_get_open_taxlots() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAccounts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializep_get_taxlots_with_running_positions_and_unit_cost_basis() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSubAccounts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTraders() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializep_get_stock_trades() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializep_get_spinoff_info() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRealizedStockGains() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRealizedEquityOptionGains() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRealizedIndexOptionGains() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeUnrealizedEquityOptionGains() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeUnrealizedIndexOptionGains() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTaxlotSummaryReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializep_get_importable_trademedia() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializep_generate_stock_daily_returns_report() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializep_generate_stock_monthly_returns_report() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeUnrealizedFuturesGains() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRealizedFuturesGains() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            HugoDataSet ds = new HugoDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitExpressions() {
            this.p_get_open_taxlots.MarketValueColumn.Expression = "CurrentPrice*[Open Amount]";
            this.p_get_open_taxlots.GainOrLossColumn.Expression = "MarketValue-[Total Cost]";
            this.p_get_open_taxlots.PriceOverrideFlagColumn.Expression = "iif(PriceOverrideDate IS NULL,\'\',\'*\')";
            this.UnrealizedEquityOptionGains.PriceOverrideFlagColumn.Expression = "iif(PriceOverrideDate IS NULL,\'\',\'*\')";
            this.UnrealizedIndexOptionGains.PriceOverrideFlagColumn.Expression = "iif(PriceOverrideDate IS NULL,\'\',\'*\')";
            this.UnrealizedFuturesGains.PriceOverrideFlagColumn.Expression = "iif(PriceOverrideDate IS NULL,\'\',\'*\')";
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void p_get_open_taxlotsRowChangeEventHandler(object sender, p_get_open_taxlotsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AccountsRowChangeEventHandler(object sender, AccountsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void p_get_taxlots_with_running_positions_and_unit_cost_basisRowChangeEventHandler(object sender, p_get_taxlots_with_running_positions_and_unit_cost_basisRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SubAccountsRowChangeEventHandler(object sender, SubAccountsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TradersRowChangeEventHandler(object sender, TradersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void p_get_stock_tradesRowChangeEventHandler(object sender, p_get_stock_tradesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void p_get_spinoff_infoRowChangeEventHandler(object sender, p_get_spinoff_infoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RealizedStockGainsRowChangeEventHandler(object sender, RealizedStockGainsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RealizedEquityOptionGainsRowChangeEventHandler(object sender, RealizedEquityOptionGainsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RealizedIndexOptionGainsRowChangeEventHandler(object sender, RealizedIndexOptionGainsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void UnrealizedEquityOptionGainsRowChangeEventHandler(object sender, UnrealizedEquityOptionGainsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void UnrealizedIndexOptionGainsRowChangeEventHandler(object sender, UnrealizedIndexOptionGainsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TaxlotSummaryReportRowChangeEventHandler(object sender, TaxlotSummaryReportRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void p_get_importable_trademediaRowChangeEventHandler(object sender, p_get_importable_trademediaRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void p_generate_stock_daily_returns_reportRowChangeEventHandler(object sender, p_generate_stock_daily_returns_reportRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void p_generate_stock_monthly_returns_reportRowChangeEventHandler(object sender, p_generate_stock_monthly_returns_reportRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void UnrealizedFuturesGainsRowChangeEventHandler(object sender, UnrealizedFuturesGainsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RealizedFuturesGainsRowChangeEventHandler(object sender, RealizedFuturesGainsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class p_get_open_taxlotsDataTable : global::System.Data.TypedTableBase<p_get_open_taxlotsRow> {
            
            private global::System.Data.DataColumn columnAcctId;
            
            private global::System.Data.DataColumn columnTicker;
            
            private global::System.Data.DataColumn columnTaxLotId;
            
            private global::System.Data.DataColumn columnNum_Trades;
            
            private global::System.Data.DataColumn columnOpen_Date;
            
            private global::System.Data.DataColumn columnUnit_Cost;
            
            private global::System.Data.DataColumn columnOpen_Amount;
            
            private global::System.Data.DataColumn columnCurrentPrice;
            
            private global::System.Data.DataColumn columnScore;
            
            private global::System.Data.DataColumn columnLinkedTaxLotId;
            
            private global::System.Data.DataColumn columnTotal_Cost;
            
            private global::System.Data.DataColumn columnSubAcctId;
            
            private global::System.Data.DataColumn columnSubAcctName;
            
            private global::System.Data.DataColumn columnUnderlyingId;
            
            private global::System.Data.DataColumn columnMarketValue;
            
            private global::System.Data.DataColumn columnGainOrLoss;
            
            private global::System.Data.DataColumn columnPriceOverrideDate;
            
            private global::System.Data.DataColumn columnPriceOverrideUser;
            
            private global::System.Data.DataColumn columnPriceOverrideFlag;
            
            private global::System.Data.DataColumn columnOriginalPrice;
            
            private global::System.Data.DataColumn columnStrategy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_open_taxlotsDataTable() : 
                    this(false) {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_open_taxlotsDataTable(bool initExpressions) {
                this.TableName = "p_get_open_taxlots";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal p_get_open_taxlotsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected p_get_open_taxlotsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AcctIdColumn {
                get {
                    return this.columnAcctId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TickerColumn {
                get {
                    return this.columnTicker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxLotIdColumn {
                get {
                    return this.columnTaxLotId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Num_TradesColumn {
                get {
                    return this.columnNum_Trades;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Open_DateColumn {
                get {
                    return this.columnOpen_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Unit_CostColumn {
                get {
                    return this.columnUnit_Cost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Open_AmountColumn {
                get {
                    return this.columnOpen_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentPriceColumn {
                get {
                    return this.columnCurrentPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScoreColumn {
                get {
                    return this.columnScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LinkedTaxLotIdColumn {
                get {
                    return this.columnLinkedTaxLotId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Total_CostColumn {
                get {
                    return this.columnTotal_Cost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubAcctIdColumn {
                get {
                    return this.columnSubAcctId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubAcctNameColumn {
                get {
                    return this.columnSubAcctName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnderlyingIdColumn {
                get {
                    return this.columnUnderlyingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarketValueColumn {
                get {
                    return this.columnMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GainOrLossColumn {
                get {
                    return this.columnGainOrLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceOverrideDateColumn {
                get {
                    return this.columnPriceOverrideDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceOverrideUserColumn {
                get {
                    return this.columnPriceOverrideUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceOverrideFlagColumn {
                get {
                    return this.columnPriceOverrideFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalPriceColumn {
                get {
                    return this.columnOriginalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StrategyColumn {
                get {
                    return this.columnStrategy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_open_taxlotsRow this[int index] {
                get {
                    return ((p_get_open_taxlotsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_open_taxlotsRowChangeEventHandler p_get_open_taxlotsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_open_taxlotsRowChangeEventHandler p_get_open_taxlotsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_open_taxlotsRowChangeEventHandler p_get_open_taxlotsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_open_taxlotsRowChangeEventHandler p_get_open_taxlotsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addp_get_open_taxlotsRow(p_get_open_taxlotsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_open_taxlotsRow Addp_get_open_taxlotsRow(
                        short AcctId, 
                        string Ticker, 
                        string TaxLotId, 
                        int Num_Trades, 
                        System.DateTime Open_Date, 
                        double Unit_Cost, 
                        double Open_Amount, 
                        double CurrentPrice, 
                        int Score, 
                        string LinkedTaxLotId, 
                        double Total_Cost, 
                        short SubAcctId, 
                        string SubAcctName, 
                        short UnderlyingId, 
                        double MarketValue, 
                        double GainOrLoss, 
                        System.DateTime PriceOverrideDate, 
                        string PriceOverrideUser, 
                        string PriceOverrideFlag, 
                        double OriginalPrice, 
                        string Strategy) {
                p_get_open_taxlotsRow rowp_get_open_taxlotsRow = ((p_get_open_taxlotsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AcctId,
                        Ticker,
                        TaxLotId,
                        Num_Trades,
                        Open_Date,
                        Unit_Cost,
                        Open_Amount,
                        CurrentPrice,
                        Score,
                        LinkedTaxLotId,
                        Total_Cost,
                        SubAcctId,
                        SubAcctName,
                        UnderlyingId,
                        MarketValue,
                        GainOrLoss,
                        PriceOverrideDate,
                        PriceOverrideUser,
                        PriceOverrideFlag,
                        OriginalPrice,
                        Strategy};
                rowp_get_open_taxlotsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowp_get_open_taxlotsRow);
                return rowp_get_open_taxlotsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_open_taxlotsRow Addp_get_open_taxlotsRow(
                        short AcctId, 
                        string Ticker, 
                        string TaxLotId, 
                        int Num_Trades, 
                        System.DateTime Open_Date, 
                        double Unit_Cost, 
                        double Open_Amount, 
                        double CurrentPrice, 
                        int Score, 
                        string LinkedTaxLotId, 
                        double Total_Cost, 
                        short SubAcctId, 
                        string SubAcctName, 
                        short UnderlyingId, 
                        System.DateTime PriceOverrideDate, 
                        string PriceOverrideUser, 
                        double OriginalPrice, 
                        string Strategy) {
                p_get_open_taxlotsRow rowp_get_open_taxlotsRow = ((p_get_open_taxlotsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AcctId,
                        Ticker,
                        TaxLotId,
                        Num_Trades,
                        Open_Date,
                        Unit_Cost,
                        Open_Amount,
                        CurrentPrice,
                        Score,
                        LinkedTaxLotId,
                        Total_Cost,
                        SubAcctId,
                        SubAcctName,
                        UnderlyingId,
                        null,
                        null,
                        PriceOverrideDate,
                        PriceOverrideUser,
                        null,
                        OriginalPrice,
                        Strategy};
                rowp_get_open_taxlotsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowp_get_open_taxlotsRow);
                return rowp_get_open_taxlotsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_open_taxlotsRow FindByAcctIdTaxLotId(short AcctId, string TaxLotId) {
                return ((p_get_open_taxlotsRow)(this.Rows.Find(new object[] {
                            AcctId,
                            TaxLotId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                p_get_open_taxlotsDataTable cln = ((p_get_open_taxlotsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new p_get_open_taxlotsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAcctId = base.Columns["AcctId"];
                this.columnTicker = base.Columns["Ticker"];
                this.columnTaxLotId = base.Columns["TaxLotId"];
                this.columnNum_Trades = base.Columns["Num Trades"];
                this.columnOpen_Date = base.Columns["Open Date"];
                this.columnUnit_Cost = base.Columns["Unit Cost"];
                this.columnOpen_Amount = base.Columns["Open Amount"];
                this.columnCurrentPrice = base.Columns["CurrentPrice"];
                this.columnScore = base.Columns["Score"];
                this.columnLinkedTaxLotId = base.Columns["LinkedTaxLotId"];
                this.columnTotal_Cost = base.Columns["Total Cost"];
                this.columnSubAcctId = base.Columns["SubAcctId"];
                this.columnSubAcctName = base.Columns["SubAcctName"];
                this.columnUnderlyingId = base.Columns["UnderlyingId"];
                this.columnMarketValue = base.Columns["MarketValue"];
                this.columnGainOrLoss = base.Columns["GainOrLoss"];
                this.columnPriceOverrideDate = base.Columns["PriceOverrideDate"];
                this.columnPriceOverrideUser = base.Columns["PriceOverrideUser"];
                this.columnPriceOverrideFlag = base.Columns["PriceOverrideFlag"];
                this.columnOriginalPrice = base.Columns["OriginalPrice"];
                this.columnStrategy = base.Columns["Strategy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAcctId = new global::System.Data.DataColumn("AcctId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcctId);
                this.columnTicker = new global::System.Data.DataColumn("Ticker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTicker);
                this.columnTaxLotId = new global::System.Data.DataColumn("TaxLotId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxLotId);
                this.columnNum_Trades = new global::System.Data.DataColumn("Num Trades", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNum_Trades);
                this.columnOpen_Date = new global::System.Data.DataColumn("Open Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpen_Date);
                this.columnUnit_Cost = new global::System.Data.DataColumn("Unit Cost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Cost);
                this.columnOpen_Amount = new global::System.Data.DataColumn("Open Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpen_Amount);
                this.columnCurrentPrice = new global::System.Data.DataColumn("CurrentPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentPrice);
                this.columnScore = new global::System.Data.DataColumn("Score", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScore);
                this.columnLinkedTaxLotId = new global::System.Data.DataColumn("LinkedTaxLotId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkedTaxLotId);
                this.columnTotal_Cost = new global::System.Data.DataColumn("Total Cost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Cost);
                this.columnSubAcctId = new global::System.Data.DataColumn("SubAcctId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubAcctId);
                this.columnSubAcctName = new global::System.Data.DataColumn("SubAcctName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubAcctName);
                this.columnUnderlyingId = new global::System.Data.DataColumn("UnderlyingId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnderlyingId);
                this.columnMarketValue = new global::System.Data.DataColumn("MarketValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketValue);
                this.columnGainOrLoss = new global::System.Data.DataColumn("GainOrLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGainOrLoss);
                this.columnPriceOverrideDate = new global::System.Data.DataColumn("PriceOverrideDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceOverrideDate);
                this.columnPriceOverrideUser = new global::System.Data.DataColumn("PriceOverrideUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceOverrideUser);
                this.columnPriceOverrideFlag = new global::System.Data.DataColumn("PriceOverrideFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceOverrideFlag);
                this.columnOriginalPrice = new global::System.Data.DataColumn("OriginalPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalPrice);
                this.columnStrategy = new global::System.Data.DataColumn("Strategy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrategy);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAcctId,
                                this.columnTaxLotId}, true));
                this.columnAcctId.AllowDBNull = false;
                this.columnTicker.MaxLength = 10;
                this.columnTaxLotId.AllowDBNull = false;
                this.columnTaxLotId.MaxLength = 20;
                this.columnLinkedTaxLotId.ReadOnly = true;
                this.columnLinkedTaxLotId.MaxLength = 20;
                this.columnSubAcctName.MaxLength = 80;
                this.columnMarketValue.ReadOnly = true;
                this.columnGainOrLoss.ReadOnly = true;
                this.columnPriceOverrideUser.MaxLength = 50;
                this.columnPriceOverrideFlag.ReadOnly = true;
                this.columnPriceOverrideFlag.DefaultValue = ((string)("\'\'"));
                this.columnOriginalPrice.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_open_taxlotsRow Newp_get_open_taxlotsRow() {
                return ((p_get_open_taxlotsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new p_get_open_taxlotsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(p_get_open_taxlotsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitExpressions() {
                this.MarketValueColumn.Expression = "CurrentPrice*[Open Amount]";
                this.GainOrLossColumn.Expression = "MarketValue-[Total Cost]";
                this.PriceOverrideFlagColumn.Expression = "iif(PriceOverrideDate IS NULL,\'\',\'*\')";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.p_get_open_taxlotsRowChanged != null)) {
                    this.p_get_open_taxlotsRowChanged(this, new p_get_open_taxlotsRowChangeEvent(((p_get_open_taxlotsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.p_get_open_taxlotsRowChanging != null)) {
                    this.p_get_open_taxlotsRowChanging(this, new p_get_open_taxlotsRowChangeEvent(((p_get_open_taxlotsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.p_get_open_taxlotsRowDeleted != null)) {
                    this.p_get_open_taxlotsRowDeleted(this, new p_get_open_taxlotsRowChangeEvent(((p_get_open_taxlotsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.p_get_open_taxlotsRowDeleting != null)) {
                    this.p_get_open_taxlotsRowDeleting(this, new p_get_open_taxlotsRowChangeEvent(((p_get_open_taxlotsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removep_get_open_taxlotsRow(p_get_open_taxlotsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "p_get_open_taxlotsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AccountsDataTable : global::System.Data.TypedTableBase<AccountsRow> {
            
            private global::System.Data.DataColumn columnAcctName;
            
            private global::System.Data.DataColumn columnAcctId;
            
            private global::System.Data.DataColumn columnTaxId;
            
            private global::System.Data.DataColumn columnClientName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountsDataTable() {
                this.TableName = "Accounts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AccountsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AccountsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AcctNameColumn {
                get {
                    return this.columnAcctName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AcctIdColumn {
                get {
                    return this.columnAcctId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxIdColumn {
                get {
                    return this.columnTaxId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountsRow this[int index] {
                get {
                    return ((AccountsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccountsRowChangeEventHandler AccountsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccountsRowChangeEventHandler AccountsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccountsRowChangeEventHandler AccountsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccountsRowChangeEventHandler AccountsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAccountsRow(AccountsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountsRow AddAccountsRow(string AcctName, string TaxId, string ClientName) {
                AccountsRow rowAccountsRow = ((AccountsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AcctName,
                        null,
                        TaxId,
                        ClientName};
                rowAccountsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAccountsRow);
                return rowAccountsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountsRow FindByAcctId(short AcctId) {
                return ((AccountsRow)(this.Rows.Find(new object[] {
                            AcctId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AccountsDataTable cln = ((AccountsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AccountsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAcctName = base.Columns["AcctName"];
                this.columnAcctId = base.Columns["AcctId"];
                this.columnTaxId = base.Columns["TaxId"];
                this.columnClientName = base.Columns["ClientName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAcctName = new global::System.Data.DataColumn("AcctName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcctName);
                this.columnAcctId = new global::System.Data.DataColumn("AcctId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcctId);
                this.columnTaxId = new global::System.Data.DataColumn("TaxId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxId);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAcctId}, true));
                this.columnAcctName.AllowDBNull = false;
                this.columnAcctName.MaxLength = 80;
                this.columnAcctId.AutoIncrement = true;
                this.columnAcctId.AutoIncrementSeed = -1;
                this.columnAcctId.AutoIncrementStep = -1;
                this.columnAcctId.AllowDBNull = false;
                this.columnAcctId.ReadOnly = true;
                this.columnAcctId.Unique = true;
                this.columnTaxId.ReadOnly = true;
                this.columnTaxId.MaxLength = 9;
                this.columnClientName.ReadOnly = true;
                this.columnClientName.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountsRow NewAccountsRow() {
                return ((AccountsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AccountsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AccountsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AccountsRowChanged != null)) {
                    this.AccountsRowChanged(this, new AccountsRowChangeEvent(((AccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AccountsRowChanging != null)) {
                    this.AccountsRowChanging(this, new AccountsRowChangeEvent(((AccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AccountsRowDeleted != null)) {
                    this.AccountsRowDeleted(this, new AccountsRowChangeEvent(((AccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AccountsRowDeleting != null)) {
                    this.AccountsRowDeleting(this, new AccountsRowChangeEvent(((AccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAccountsRow(AccountsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AccountsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable : global::System.Data.TypedTableBase<p_get_taxlots_with_running_positions_and_unit_cost_basisRow> {
            
            private global::System.Data.DataColumn columnAcctId;
            
            private global::System.Data.DataColumn columnTaxLotId;
            
            private global::System.Data.DataColumn columnDateOpened;
            
            private global::System.Data.DataColumn columnDateClosed;
            
            private global::System.Data.DataColumn columnTradeNumber;
            
            private global::System.Data.DataColumn columnUnderlyingSymbol;
            
            private global::System.Data.DataColumn columnTradeId;
            
            private global::System.Data.DataColumn columnTradeDateTime;
            
            private global::System.Data.DataColumn columnTradeTypeName;
            
            private global::System.Data.DataColumn columnTradeVolume;
            
            private global::System.Data.DataColumn columnTradePrice;
            
            private global::System.Data.DataColumn columnNetTradePrice;
            
            private global::System.Data.DataColumn columnRunningPosition;
            
            private global::System.Data.DataColumn columnUnitCostBasis;
            
            private global::System.Data.DataColumn columnLinkedTaxLotId;
            
            private global::System.Data.DataColumn columnTotalCost;
            
            private global::System.Data.DataColumn columnSubAcctId;
            
            private global::System.Data.DataColumn columnSubAcctName;
            
            private global::System.Data.DataColumn columnUnderlyingId;
            
            private global::System.Data.DataColumn columnNetProceeds;
            
            private global::System.Data.DataColumn columnPreviousUnitCostBasis;
            
            private global::System.Data.DataColumn columnPreviousTotalCost;
            
            private global::System.Data.DataColumn columnTradeNote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable() {
                this.TableName = "p_get_taxlots_with_running_positions_and_unit_cost_basis";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AcctIdColumn {
                get {
                    return this.columnAcctId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxLotIdColumn {
                get {
                    return this.columnTaxLotId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateOpenedColumn {
                get {
                    return this.columnDateOpened;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateClosedColumn {
                get {
                    return this.columnDateClosed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeNumberColumn {
                get {
                    return this.columnTradeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnderlyingSymbolColumn {
                get {
                    return this.columnUnderlyingSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeIdColumn {
                get {
                    return this.columnTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeDateTimeColumn {
                get {
                    return this.columnTradeDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeTypeNameColumn {
                get {
                    return this.columnTradeTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeVolumeColumn {
                get {
                    return this.columnTradeVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradePriceColumn {
                get {
                    return this.columnTradePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetTradePriceColumn {
                get {
                    return this.columnNetTradePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RunningPositionColumn {
                get {
                    return this.columnRunningPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitCostBasisColumn {
                get {
                    return this.columnUnitCostBasis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LinkedTaxLotIdColumn {
                get {
                    return this.columnLinkedTaxLotId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalCostColumn {
                get {
                    return this.columnTotalCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubAcctIdColumn {
                get {
                    return this.columnSubAcctId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubAcctNameColumn {
                get {
                    return this.columnSubAcctName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnderlyingIdColumn {
                get {
                    return this.columnUnderlyingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetProceedsColumn {
                get {
                    return this.columnNetProceeds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PreviousUnitCostBasisColumn {
                get {
                    return this.columnPreviousUnitCostBasis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PreviousTotalCostColumn {
                get {
                    return this.columnPreviousTotalCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeNoteColumn {
                get {
                    return this.columnTradeNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_taxlots_with_running_positions_and_unit_cost_basisRow this[int index] {
                get {
                    return ((p_get_taxlots_with_running_positions_and_unit_cost_basisRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_taxlots_with_running_positions_and_unit_cost_basisRowChangeEventHandler p_get_taxlots_with_running_positions_and_unit_cost_basisRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_taxlots_with_running_positions_and_unit_cost_basisRowChangeEventHandler p_get_taxlots_with_running_positions_and_unit_cost_basisRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_taxlots_with_running_positions_and_unit_cost_basisRowChangeEventHandler p_get_taxlots_with_running_positions_and_unit_cost_basisRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_taxlots_with_running_positions_and_unit_cost_basisRowChangeEventHandler p_get_taxlots_with_running_positions_and_unit_cost_basisRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addp_get_taxlots_with_running_positions_and_unit_cost_basisRow(p_get_taxlots_with_running_positions_and_unit_cost_basisRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_taxlots_with_running_positions_and_unit_cost_basisRow Addp_get_taxlots_with_running_positions_and_unit_cost_basisRow(
                        short AcctId, 
                        string TaxLotId, 
                        System.DateTime DateOpened, 
                        System.DateTime DateClosed, 
                        int TradeNumber, 
                        string UnderlyingSymbol, 
                        int TradeId, 
                        System.DateTime TradeDateTime, 
                        string TradeTypeName, 
                        double TradeVolume, 
                        double TradePrice, 
                        double NetTradePrice, 
                        double RunningPosition, 
                        double UnitCostBasis, 
                        string LinkedTaxLotId, 
                        double TotalCost, 
                        short SubAcctId, 
                        string SubAcctName, 
                        short UnderlyingId, 
                        double NetProceeds, 
                        double PreviousUnitCostBasis, 
                        double PreviousTotalCost, 
                        string TradeNote) {
                p_get_taxlots_with_running_positions_and_unit_cost_basisRow rowp_get_taxlots_with_running_positions_and_unit_cost_basisRow = ((p_get_taxlots_with_running_positions_and_unit_cost_basisRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AcctId,
                        TaxLotId,
                        DateOpened,
                        DateClosed,
                        TradeNumber,
                        UnderlyingSymbol,
                        TradeId,
                        TradeDateTime,
                        TradeTypeName,
                        TradeVolume,
                        TradePrice,
                        NetTradePrice,
                        RunningPosition,
                        UnitCostBasis,
                        LinkedTaxLotId,
                        TotalCost,
                        SubAcctId,
                        SubAcctName,
                        UnderlyingId,
                        NetProceeds,
                        PreviousUnitCostBasis,
                        PreviousTotalCost,
                        TradeNote};
                rowp_get_taxlots_with_running_positions_and_unit_cost_basisRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowp_get_taxlots_with_running_positions_and_unit_cost_basisRow);
                return rowp_get_taxlots_with_running_positions_and_unit_cost_basisRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable cln = ((p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAcctId = base.Columns["AcctId"];
                this.columnTaxLotId = base.Columns["TaxLotId"];
                this.columnDateOpened = base.Columns["DateOpened"];
                this.columnDateClosed = base.Columns["DateClosed"];
                this.columnTradeNumber = base.Columns["TradeNumber"];
                this.columnUnderlyingSymbol = base.Columns["UnderlyingSymbol"];
                this.columnTradeId = base.Columns["TradeId"];
                this.columnTradeDateTime = base.Columns["TradeDateTime"];
                this.columnTradeTypeName = base.Columns["TradeTypeName"];
                this.columnTradeVolume = base.Columns["TradeVolume"];
                this.columnTradePrice = base.Columns["TradePrice"];
                this.columnNetTradePrice = base.Columns["NetTradePrice"];
                this.columnRunningPosition = base.Columns["RunningPosition"];
                this.columnUnitCostBasis = base.Columns["UnitCostBasis"];
                this.columnLinkedTaxLotId = base.Columns["LinkedTaxLotId"];
                this.columnTotalCost = base.Columns["TotalCost"];
                this.columnSubAcctId = base.Columns["SubAcctId"];
                this.columnSubAcctName = base.Columns["SubAcctName"];
                this.columnUnderlyingId = base.Columns["UnderlyingId"];
                this.columnNetProceeds = base.Columns["NetProceeds"];
                this.columnPreviousUnitCostBasis = base.Columns["PreviousUnitCostBasis"];
                this.columnPreviousTotalCost = base.Columns["PreviousTotalCost"];
                this.columnTradeNote = base.Columns["TradeNote"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAcctId = new global::System.Data.DataColumn("AcctId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcctId);
                this.columnTaxLotId = new global::System.Data.DataColumn("TaxLotId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxLotId);
                this.columnDateOpened = new global::System.Data.DataColumn("DateOpened", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOpened);
                this.columnDateClosed = new global::System.Data.DataColumn("DateClosed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateClosed);
                this.columnTradeNumber = new global::System.Data.DataColumn("TradeNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeNumber);
                this.columnUnderlyingSymbol = new global::System.Data.DataColumn("UnderlyingSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnderlyingSymbol);
                this.columnTradeId = new global::System.Data.DataColumn("TradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeId);
                this.columnTradeDateTime = new global::System.Data.DataColumn("TradeDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeDateTime);
                this.columnTradeTypeName = new global::System.Data.DataColumn("TradeTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeTypeName);
                this.columnTradeVolume = new global::System.Data.DataColumn("TradeVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeVolume);
                this.columnTradePrice = new global::System.Data.DataColumn("TradePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradePrice);
                this.columnNetTradePrice = new global::System.Data.DataColumn("NetTradePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetTradePrice);
                this.columnRunningPosition = new global::System.Data.DataColumn("RunningPosition", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunningPosition);
                this.columnUnitCostBasis = new global::System.Data.DataColumn("UnitCostBasis", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitCostBasis);
                this.columnLinkedTaxLotId = new global::System.Data.DataColumn("LinkedTaxLotId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkedTaxLotId);
                this.columnTotalCost = new global::System.Data.DataColumn("TotalCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCost);
                this.columnSubAcctId = new global::System.Data.DataColumn("SubAcctId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubAcctId);
                this.columnSubAcctName = new global::System.Data.DataColumn("SubAcctName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubAcctName);
                this.columnUnderlyingId = new global::System.Data.DataColumn("UnderlyingId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnderlyingId);
                this.columnNetProceeds = new global::System.Data.DataColumn("NetProceeds", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetProceeds);
                this.columnPreviousUnitCostBasis = new global::System.Data.DataColumn("PreviousUnitCostBasis", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousUnitCostBasis);
                this.columnPreviousTotalCost = new global::System.Data.DataColumn("PreviousTotalCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousTotalCost);
                this.columnTradeNote = new global::System.Data.DataColumn("TradeNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeNote);
                this.columnTaxLotId.MaxLength = 20;
                this.columnUnderlyingSymbol.MaxLength = 10;
                this.columnTradeTypeName.MaxLength = 80;
                this.columnLinkedTaxLotId.MaxLength = 20;
                this.columnSubAcctName.MaxLength = 80;
                this.columnTradeNote.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_taxlots_with_running_positions_and_unit_cost_basisRow Newp_get_taxlots_with_running_positions_and_unit_cost_basisRow() {
                return ((p_get_taxlots_with_running_positions_and_unit_cost_basisRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new p_get_taxlots_with_running_positions_and_unit_cost_basisRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(p_get_taxlots_with_running_positions_and_unit_cost_basisRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.p_get_taxlots_with_running_positions_and_unit_cost_basisRowChanged != null)) {
                    this.p_get_taxlots_with_running_positions_and_unit_cost_basisRowChanged(this, new p_get_taxlots_with_running_positions_and_unit_cost_basisRowChangeEvent(((p_get_taxlots_with_running_positions_and_unit_cost_basisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.p_get_taxlots_with_running_positions_and_unit_cost_basisRowChanging != null)) {
                    this.p_get_taxlots_with_running_positions_and_unit_cost_basisRowChanging(this, new p_get_taxlots_with_running_positions_and_unit_cost_basisRowChangeEvent(((p_get_taxlots_with_running_positions_and_unit_cost_basisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.p_get_taxlots_with_running_positions_and_unit_cost_basisRowDeleted != null)) {
                    this.p_get_taxlots_with_running_positions_and_unit_cost_basisRowDeleted(this, new p_get_taxlots_with_running_positions_and_unit_cost_basisRowChangeEvent(((p_get_taxlots_with_running_positions_and_unit_cost_basisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.p_get_taxlots_with_running_positions_and_unit_cost_basisRowDeleting != null)) {
                    this.p_get_taxlots_with_running_positions_and_unit_cost_basisRowDeleting(this, new p_get_taxlots_with_running_positions_and_unit_cost_basisRowChangeEvent(((p_get_taxlots_with_running_positions_and_unit_cost_basisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removep_get_taxlots_with_running_positions_and_unit_cost_basisRow(p_get_taxlots_with_running_positions_and_unit_cost_basisRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SubAccountsDataTable : global::System.Data.TypedTableBase<SubAccountsRow> {
            
            private global::System.Data.DataColumn columnSubAcctName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubAccountsDataTable() {
                this.TableName = "SubAccounts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SubAccountsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SubAccountsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubAcctNameColumn {
                get {
                    return this.columnSubAcctName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubAccountsRow this[int index] {
                get {
                    return ((SubAccountsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubAccountsRowChangeEventHandler SubAccountsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubAccountsRowChangeEventHandler SubAccountsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubAccountsRowChangeEventHandler SubAccountsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubAccountsRowChangeEventHandler SubAccountsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSubAccountsRow(SubAccountsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubAccountsRow AddSubAccountsRow(string SubAcctName) {
                SubAccountsRow rowSubAccountsRow = ((SubAccountsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SubAcctName};
                rowSubAccountsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSubAccountsRow);
                return rowSubAccountsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SubAccountsDataTable cln = ((SubAccountsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SubAccountsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSubAcctName = base.Columns["SubAcctName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSubAcctName = new global::System.Data.DataColumn("SubAcctName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubAcctName);
                this.columnSubAcctName.AllowDBNull = false;
                this.columnSubAcctName.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubAccountsRow NewSubAccountsRow() {
                return ((SubAccountsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SubAccountsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SubAccountsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SubAccountsRowChanged != null)) {
                    this.SubAccountsRowChanged(this, new SubAccountsRowChangeEvent(((SubAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SubAccountsRowChanging != null)) {
                    this.SubAccountsRowChanging(this, new SubAccountsRowChangeEvent(((SubAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SubAccountsRowDeleted != null)) {
                    this.SubAccountsRowDeleted(this, new SubAccountsRowChangeEvent(((SubAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SubAccountsRowDeleting != null)) {
                    this.SubAccountsRowDeleting(this, new SubAccountsRowChangeEvent(((SubAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSubAccountsRow(SubAccountsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SubAccountsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TradersDataTable : global::System.Data.TypedTableBase<TradersRow> {
            
            private global::System.Data.DataColumn columnTraderName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TradersDataTable() {
                this.TableName = "Traders";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TradersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TradersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TraderNameColumn {
                get {
                    return this.columnTraderName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TradersRow this[int index] {
                get {
                    return ((TradersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TradersRowChangeEventHandler TradersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TradersRowChangeEventHandler TradersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TradersRowChangeEventHandler TradersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TradersRowChangeEventHandler TradersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTradersRow(TradersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TradersRow AddTradersRow(string TraderName) {
                TradersRow rowTradersRow = ((TradersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TraderName};
                rowTradersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTradersRow);
                return rowTradersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TradersDataTable cln = ((TradersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TradersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTraderName = base.Columns["TraderName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTraderName = new global::System.Data.DataColumn("TraderName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTraderName);
                this.columnTraderName.AllowDBNull = false;
                this.columnTraderName.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TradersRow NewTradersRow() {
                return ((TradersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TradersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TradersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TradersRowChanged != null)) {
                    this.TradersRowChanged(this, new TradersRowChangeEvent(((TradersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TradersRowChanging != null)) {
                    this.TradersRowChanging(this, new TradersRowChangeEvent(((TradersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TradersRowDeleted != null)) {
                    this.TradersRowDeleted(this, new TradersRowChangeEvent(((TradersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TradersRowDeleting != null)) {
                    this.TradersRowDeleting(this, new TradersRowChangeEvent(((TradersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTradersRow(TradersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TradersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class p_get_stock_tradesDataTable : global::System.Data.TypedTableBase<p_get_stock_tradesRow> {
            
            private global::System.Data.DataColumn columnTaxLotId;
            
            private global::System.Data.DataColumn columnDateOpened;
            
            private global::System.Data.DataColumn columnDateClosed;
            
            private global::System.Data.DataColumn columnUnderlyingId;
            
            private global::System.Data.DataColumn columnAcctId;
            
            private global::System.Data.DataColumn columnSubacctId;
            
            private global::System.Data.DataColumn columnTradeId;
            
            private global::System.Data.DataColumn columnTradeDatetime;
            
            private global::System.Data.DataColumn columnUnderlyingSymbol;
            
            private global::System.Data.DataColumn columnSubAcctName;
            
            private global::System.Data.DataColumn columnTradeTypeName;
            
            private global::System.Data.DataColumn columnTradeVolume;
            
            private global::System.Data.DataColumn columnTradePrice;
            
            private global::System.Data.DataColumn columnTotalCost;
            
            private global::System.Data.DataColumn columnUnitCost;
            
            private global::System.Data.DataColumn columnLinkedTaxLotId;
            
            private global::System.Data.DataColumn columnTradeMediumName;
            
            private global::System.Data.DataColumn columnTradeNote;
            
            private global::System.Data.DataColumn columnClearingHouseTaxlotId;
            
            private global::System.Data.DataColumn columnConsolidationPackageId;
            
            private global::System.Data.DataColumn columnMerrillAccountNumber;
            
            private global::System.Data.DataColumn columnFullTradeVolume;
            
            private global::System.Data.DataColumn columnOpeningTradePrice;
            
            private global::System.Data.DataColumn columnOpeningTradeType;
            
            private global::System.Data.DataColumn columnNumberOfTrades;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_stock_tradesDataTable() {
                this.TableName = "p_get_stock_trades";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal p_get_stock_tradesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected p_get_stock_tradesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxLotIdColumn {
                get {
                    return this.columnTaxLotId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateOpenedColumn {
                get {
                    return this.columnDateOpened;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateClosedColumn {
                get {
                    return this.columnDateClosed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnderlyingIdColumn {
                get {
                    return this.columnUnderlyingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AcctIdColumn {
                get {
                    return this.columnAcctId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubacctIdColumn {
                get {
                    return this.columnSubacctId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeIdColumn {
                get {
                    return this.columnTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeDatetimeColumn {
                get {
                    return this.columnTradeDatetime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnderlyingSymbolColumn {
                get {
                    return this.columnUnderlyingSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubAcctNameColumn {
                get {
                    return this.columnSubAcctName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeTypeNameColumn {
                get {
                    return this.columnTradeTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeVolumeColumn {
                get {
                    return this.columnTradeVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradePriceColumn {
                get {
                    return this.columnTradePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalCostColumn {
                get {
                    return this.columnTotalCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitCostColumn {
                get {
                    return this.columnUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LinkedTaxLotIdColumn {
                get {
                    return this.columnLinkedTaxLotId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeMediumNameColumn {
                get {
                    return this.columnTradeMediumName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeNoteColumn {
                get {
                    return this.columnTradeNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClearingHouseTaxlotIdColumn {
                get {
                    return this.columnClearingHouseTaxlotId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConsolidationPackageIdColumn {
                get {
                    return this.columnConsolidationPackageId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MerrillAccountNumberColumn {
                get {
                    return this.columnMerrillAccountNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullTradeVolumeColumn {
                get {
                    return this.columnFullTradeVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradePriceColumn {
                get {
                    return this.columnOpeningTradePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeTypeColumn {
                get {
                    return this.columnOpeningTradeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfTradesColumn {
                get {
                    return this.columnNumberOfTrades;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_stock_tradesRow this[int index] {
                get {
                    return ((p_get_stock_tradesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_stock_tradesRowChangeEventHandler p_get_stock_tradesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_stock_tradesRowChangeEventHandler p_get_stock_tradesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_stock_tradesRowChangeEventHandler p_get_stock_tradesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_stock_tradesRowChangeEventHandler p_get_stock_tradesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addp_get_stock_tradesRow(p_get_stock_tradesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_stock_tradesRow Addp_get_stock_tradesRow(
                        string TaxLotId, 
                        System.DateTime DateOpened, 
                        System.DateTime DateClosed, 
                        short UnderlyingId, 
                        short AcctId, 
                        short SubacctId, 
                        int TradeId, 
                        System.DateTime TradeDatetime, 
                        string UnderlyingSymbol, 
                        string SubAcctName, 
                        string TradeTypeName, 
                        double TradeVolume, 
                        decimal TradePrice, 
                        double TotalCost, 
                        double UnitCost, 
                        string LinkedTaxLotId, 
                        string TradeMediumName, 
                        string TradeNote, 
                        string ClearingHouseTaxlotId, 
                        int ConsolidationPackageId, 
                        string MerrillAccountNumber, 
                        double FullTradeVolume, 
                        decimal OpeningTradePrice, 
                        string OpeningTradeType, 
                        int NumberOfTrades) {
                p_get_stock_tradesRow rowp_get_stock_tradesRow = ((p_get_stock_tradesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TaxLotId,
                        DateOpened,
                        DateClosed,
                        UnderlyingId,
                        AcctId,
                        SubacctId,
                        TradeId,
                        TradeDatetime,
                        UnderlyingSymbol,
                        SubAcctName,
                        TradeTypeName,
                        TradeVolume,
                        TradePrice,
                        TotalCost,
                        UnitCost,
                        LinkedTaxLotId,
                        TradeMediumName,
                        TradeNote,
                        ClearingHouseTaxlotId,
                        ConsolidationPackageId,
                        MerrillAccountNumber,
                        FullTradeVolume,
                        OpeningTradePrice,
                        OpeningTradeType,
                        NumberOfTrades};
                rowp_get_stock_tradesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowp_get_stock_tradesRow);
                return rowp_get_stock_tradesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                p_get_stock_tradesDataTable cln = ((p_get_stock_tradesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new p_get_stock_tradesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTaxLotId = base.Columns["TaxLotId"];
                this.columnDateOpened = base.Columns["DateOpened"];
                this.columnDateClosed = base.Columns["DateClosed"];
                this.columnUnderlyingId = base.Columns["UnderlyingId"];
                this.columnAcctId = base.Columns["AcctId"];
                this.columnSubacctId = base.Columns["SubacctId"];
                this.columnTradeId = base.Columns["TradeId"];
                this.columnTradeDatetime = base.Columns["TradeDatetime"];
                this.columnUnderlyingSymbol = base.Columns["UnderlyingSymbol"];
                this.columnSubAcctName = base.Columns["SubAcctName"];
                this.columnTradeTypeName = base.Columns["TradeTypeName"];
                this.columnTradeVolume = base.Columns["TradeVolume"];
                this.columnTradePrice = base.Columns["TradePrice"];
                this.columnTotalCost = base.Columns["TotalCost"];
                this.columnUnitCost = base.Columns["UnitCost"];
                this.columnLinkedTaxLotId = base.Columns["LinkedTaxLotId"];
                this.columnTradeMediumName = base.Columns["TradeMediumName"];
                this.columnTradeNote = base.Columns["TradeNote"];
                this.columnClearingHouseTaxlotId = base.Columns["ClearingHouseTaxlotId"];
                this.columnConsolidationPackageId = base.Columns["ConsolidationPackageId"];
                this.columnMerrillAccountNumber = base.Columns["MerrillAccountNumber"];
                this.columnFullTradeVolume = base.Columns["FullTradeVolume"];
                this.columnOpeningTradePrice = base.Columns["OpeningTradePrice"];
                this.columnOpeningTradeType = base.Columns["OpeningTradeType"];
                this.columnNumberOfTrades = base.Columns["NumberOfTrades"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTaxLotId = new global::System.Data.DataColumn("TaxLotId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxLotId);
                this.columnDateOpened = new global::System.Data.DataColumn("DateOpened", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOpened);
                this.columnDateClosed = new global::System.Data.DataColumn("DateClosed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateClosed);
                this.columnUnderlyingId = new global::System.Data.DataColumn("UnderlyingId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnderlyingId);
                this.columnAcctId = new global::System.Data.DataColumn("AcctId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcctId);
                this.columnSubacctId = new global::System.Data.DataColumn("SubacctId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubacctId);
                this.columnTradeId = new global::System.Data.DataColumn("TradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeId);
                this.columnTradeDatetime = new global::System.Data.DataColumn("TradeDatetime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeDatetime);
                this.columnUnderlyingSymbol = new global::System.Data.DataColumn("UnderlyingSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnderlyingSymbol);
                this.columnSubAcctName = new global::System.Data.DataColumn("SubAcctName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubAcctName);
                this.columnTradeTypeName = new global::System.Data.DataColumn("TradeTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeTypeName);
                this.columnTradeVolume = new global::System.Data.DataColumn("TradeVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeVolume);
                this.columnTradePrice = new global::System.Data.DataColumn("TradePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradePrice);
                this.columnTotalCost = new global::System.Data.DataColumn("TotalCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCost);
                this.columnUnitCost = new global::System.Data.DataColumn("UnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitCost);
                this.columnLinkedTaxLotId = new global::System.Data.DataColumn("LinkedTaxLotId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkedTaxLotId);
                this.columnTradeMediumName = new global::System.Data.DataColumn("TradeMediumName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeMediumName);
                this.columnTradeNote = new global::System.Data.DataColumn("TradeNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeNote);
                this.columnClearingHouseTaxlotId = new global::System.Data.DataColumn("ClearingHouseTaxlotId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClearingHouseTaxlotId);
                this.columnConsolidationPackageId = new global::System.Data.DataColumn("ConsolidationPackageId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsolidationPackageId);
                this.columnMerrillAccountNumber = new global::System.Data.DataColumn("MerrillAccountNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMerrillAccountNumber);
                this.columnFullTradeVolume = new global::System.Data.DataColumn("FullTradeVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullTradeVolume);
                this.columnOpeningTradePrice = new global::System.Data.DataColumn("OpeningTradePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradePrice);
                this.columnOpeningTradeType = new global::System.Data.DataColumn("OpeningTradeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeType);
                this.columnNumberOfTrades = new global::System.Data.DataColumn("NumberOfTrades", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfTrades);
                this.columnTaxLotId.MaxLength = 20;
                this.columnUnderlyingId.AllowDBNull = false;
                this.columnAcctId.AllowDBNull = false;
                this.columnSubacctId.AllowDBNull = false;
                this.columnTradeId.AllowDBNull = false;
                this.columnTradeDatetime.AllowDBNull = false;
                this.columnUnderlyingSymbol.AllowDBNull = false;
                this.columnUnderlyingSymbol.MaxLength = 10;
                this.columnSubAcctName.AllowDBNull = false;
                this.columnSubAcctName.MaxLength = 80;
                this.columnTradeTypeName.AllowDBNull = false;
                this.columnTradeTypeName.MaxLength = 80;
                this.columnTradeVolume.ReadOnly = true;
                this.columnTotalCost.ReadOnly = true;
                this.columnUnitCost.ReadOnly = true;
                this.columnLinkedTaxLotId.MaxLength = 20;
                this.columnTradeMediumName.MaxLength = 80;
                this.columnTradeNote.ReadOnly = true;
                this.columnTradeNote.MaxLength = 2147483647;
                this.columnClearingHouseTaxlotId.MaxLength = 40;
                this.columnMerrillAccountNumber.MaxLength = 100;
                this.columnFullTradeVolume.ReadOnly = true;
                this.columnOpeningTradeType.AllowDBNull = false;
                this.columnOpeningTradeType.MaxLength = 80;
                this.columnNumberOfTrades.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_stock_tradesRow Newp_get_stock_tradesRow() {
                return ((p_get_stock_tradesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new p_get_stock_tradesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(p_get_stock_tradesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.p_get_stock_tradesRowChanged != null)) {
                    this.p_get_stock_tradesRowChanged(this, new p_get_stock_tradesRowChangeEvent(((p_get_stock_tradesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.p_get_stock_tradesRowChanging != null)) {
                    this.p_get_stock_tradesRowChanging(this, new p_get_stock_tradesRowChangeEvent(((p_get_stock_tradesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.p_get_stock_tradesRowDeleted != null)) {
                    this.p_get_stock_tradesRowDeleted(this, new p_get_stock_tradesRowChangeEvent(((p_get_stock_tradesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.p_get_stock_tradesRowDeleting != null)) {
                    this.p_get_stock_tradesRowDeleting(this, new p_get_stock_tradesRowChangeEvent(((p_get_stock_tradesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removep_get_stock_tradesRow(p_get_stock_tradesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "p_get_stock_tradesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class p_get_spinoff_infoDataTable : global::System.Data.TypedTableBase<p_get_spinoff_infoRow> {
            
            private global::System.Data.DataColumn columnOriginalVolume;
            
            private global::System.Data.DataColumn columnOriginalCostBasis;
            
            private global::System.Data.DataColumn columnSpinoffVolume;
            
            private global::System.Data.DataColumn columnSpinoffCostBasis;
            
            private global::System.Data.DataColumn columnOriginalSymbol;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_spinoff_infoDataTable() {
                this.TableName = "p_get_spinoff_info";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal p_get_spinoff_infoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected p_get_spinoff_infoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalVolumeColumn {
                get {
                    return this.columnOriginalVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalCostBasisColumn {
                get {
                    return this.columnOriginalCostBasis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpinoffVolumeColumn {
                get {
                    return this.columnSpinoffVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpinoffCostBasisColumn {
                get {
                    return this.columnSpinoffCostBasis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalSymbolColumn {
                get {
                    return this.columnOriginalSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_spinoff_infoRow this[int index] {
                get {
                    return ((p_get_spinoff_infoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_spinoff_infoRowChangeEventHandler p_get_spinoff_infoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_spinoff_infoRowChangeEventHandler p_get_spinoff_infoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_spinoff_infoRowChangeEventHandler p_get_spinoff_infoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_spinoff_infoRowChangeEventHandler p_get_spinoff_infoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addp_get_spinoff_infoRow(p_get_spinoff_infoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_spinoff_infoRow Addp_get_spinoff_infoRow(double OriginalVolume, double OriginalCostBasis, double SpinoffVolume, double SpinoffCostBasis, string OriginalSymbol) {
                p_get_spinoff_infoRow rowp_get_spinoff_infoRow = ((p_get_spinoff_infoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OriginalVolume,
                        OriginalCostBasis,
                        SpinoffVolume,
                        SpinoffCostBasis,
                        OriginalSymbol};
                rowp_get_spinoff_infoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowp_get_spinoff_infoRow);
                return rowp_get_spinoff_infoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                p_get_spinoff_infoDataTable cln = ((p_get_spinoff_infoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new p_get_spinoff_infoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnOriginalVolume = base.Columns["OriginalVolume"];
                this.columnOriginalCostBasis = base.Columns["OriginalCostBasis"];
                this.columnSpinoffVolume = base.Columns["SpinoffVolume"];
                this.columnSpinoffCostBasis = base.Columns["SpinoffCostBasis"];
                this.columnOriginalSymbol = base.Columns["OriginalSymbol"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnOriginalVolume = new global::System.Data.DataColumn("OriginalVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalVolume);
                this.columnOriginalCostBasis = new global::System.Data.DataColumn("OriginalCostBasis", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalCostBasis);
                this.columnSpinoffVolume = new global::System.Data.DataColumn("SpinoffVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpinoffVolume);
                this.columnSpinoffCostBasis = new global::System.Data.DataColumn("SpinoffCostBasis", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpinoffCostBasis);
                this.columnOriginalSymbol = new global::System.Data.DataColumn("OriginalSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalSymbol);
                this.columnOriginalVolume.ReadOnly = true;
                this.columnOriginalCostBasis.ReadOnly = true;
                this.columnSpinoffVolume.ReadOnly = true;
                this.columnSpinoffCostBasis.ReadOnly = true;
                this.columnOriginalSymbol.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_spinoff_infoRow Newp_get_spinoff_infoRow() {
                return ((p_get_spinoff_infoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new p_get_spinoff_infoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(p_get_spinoff_infoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.p_get_spinoff_infoRowChanged != null)) {
                    this.p_get_spinoff_infoRowChanged(this, new p_get_spinoff_infoRowChangeEvent(((p_get_spinoff_infoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.p_get_spinoff_infoRowChanging != null)) {
                    this.p_get_spinoff_infoRowChanging(this, new p_get_spinoff_infoRowChangeEvent(((p_get_spinoff_infoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.p_get_spinoff_infoRowDeleted != null)) {
                    this.p_get_spinoff_infoRowDeleted(this, new p_get_spinoff_infoRowChangeEvent(((p_get_spinoff_infoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.p_get_spinoff_infoRowDeleting != null)) {
                    this.p_get_spinoff_infoRowDeleting(this, new p_get_spinoff_infoRowChangeEvent(((p_get_spinoff_infoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removep_get_spinoff_infoRow(p_get_spinoff_infoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "p_get_spinoff_infoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RealizedStockGainsDataTable : global::System.Data.TypedTableBase<RealizedStockGainsRow> {
            
            private global::System.Data.DataColumn columnUnderlyingSymbol;
            
            private global::System.Data.DataColumn columnTaxlotId;
            
            private global::System.Data.DataColumn columnTradeId;
            
            private global::System.Data.DataColumn columnSubAcctName;
            
            private global::System.Data.DataColumn columnTradeTypeName;
            
            private global::System.Data.DataColumn columnTradeVolume;
            
            private global::System.Data.DataColumn columnNetPrice;
            
            private global::System.Data.DataColumn columnUnitCost;
            
            private global::System.Data.DataColumn columnShortTermGainLoss;
            
            private global::System.Data.DataColumn columnLongTermGainLoss;
            
            private global::System.Data.DataColumn columnOpenDate;
            
            private global::System.Data.DataColumn columnCloseDate;
            
            private global::System.Data.DataColumn columnTradeNumber;
            
            private global::System.Data.DataColumn columnDaysHeld;
            
            private global::System.Data.DataColumn columnCostBasis;
            
            private global::System.Data.DataColumn columnNetProceeds;
            
            private global::System.Data.DataColumn columnStrategy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedStockGainsDataTable() {
                this.TableName = "RealizedStockGains";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RealizedStockGainsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RealizedStockGainsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnderlyingSymbolColumn {
                get {
                    return this.columnUnderlyingSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxlotIdColumn {
                get {
                    return this.columnTaxlotId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeIdColumn {
                get {
                    return this.columnTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubAcctNameColumn {
                get {
                    return this.columnSubAcctName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeTypeNameColumn {
                get {
                    return this.columnTradeTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeVolumeColumn {
                get {
                    return this.columnTradeVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetPriceColumn {
                get {
                    return this.columnNetPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitCostColumn {
                get {
                    return this.columnUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortTermGainLossColumn {
                get {
                    return this.columnShortTermGainLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LongTermGainLossColumn {
                get {
                    return this.columnLongTermGainLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpenDateColumn {
                get {
                    return this.columnOpenDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CloseDateColumn {
                get {
                    return this.columnCloseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeNumberColumn {
                get {
                    return this.columnTradeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DaysHeldColumn {
                get {
                    return this.columnDaysHeld;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostBasisColumn {
                get {
                    return this.columnCostBasis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetProceedsColumn {
                get {
                    return this.columnNetProceeds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StrategyColumn {
                get {
                    return this.columnStrategy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedStockGainsRow this[int index] {
                get {
                    return ((RealizedStockGainsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedStockGainsRowChangeEventHandler RealizedStockGainsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedStockGainsRowChangeEventHandler RealizedStockGainsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedStockGainsRowChangeEventHandler RealizedStockGainsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedStockGainsRowChangeEventHandler RealizedStockGainsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRealizedStockGainsRow(RealizedStockGainsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedStockGainsRow AddRealizedStockGainsRow(
                        string UnderlyingSymbol, 
                        string TaxlotId, 
                        int TradeId, 
                        string SubAcctName, 
                        string TradeTypeName, 
                        double TradeVolume, 
                        double NetPrice, 
                        double UnitCost, 
                        double ShortTermGainLoss, 
                        double LongTermGainLoss, 
                        System.DateTime OpenDate, 
                        System.DateTime CloseDate, 
                        int TradeNumber, 
                        int DaysHeld, 
                        double CostBasis, 
                        double NetProceeds, 
                        string Strategy) {
                RealizedStockGainsRow rowRealizedStockGainsRow = ((RealizedStockGainsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UnderlyingSymbol,
                        TaxlotId,
                        TradeId,
                        SubAcctName,
                        TradeTypeName,
                        TradeVolume,
                        NetPrice,
                        UnitCost,
                        ShortTermGainLoss,
                        LongTermGainLoss,
                        OpenDate,
                        CloseDate,
                        TradeNumber,
                        DaysHeld,
                        CostBasis,
                        NetProceeds,
                        Strategy};
                rowRealizedStockGainsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRealizedStockGainsRow);
                return rowRealizedStockGainsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RealizedStockGainsDataTable cln = ((RealizedStockGainsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RealizedStockGainsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnUnderlyingSymbol = base.Columns["UnderlyingSymbol"];
                this.columnTaxlotId = base.Columns["TaxlotId"];
                this.columnTradeId = base.Columns["TradeId"];
                this.columnSubAcctName = base.Columns["SubAcctName"];
                this.columnTradeTypeName = base.Columns["TradeTypeName"];
                this.columnTradeVolume = base.Columns["TradeVolume"];
                this.columnNetPrice = base.Columns["NetPrice"];
                this.columnUnitCost = base.Columns["UnitCost"];
                this.columnShortTermGainLoss = base.Columns["ShortTermGainLoss"];
                this.columnLongTermGainLoss = base.Columns["LongTermGainLoss"];
                this.columnOpenDate = base.Columns["OpenDate"];
                this.columnCloseDate = base.Columns["CloseDate"];
                this.columnTradeNumber = base.Columns["TradeNumber"];
                this.columnDaysHeld = base.Columns["DaysHeld"];
                this.columnCostBasis = base.Columns["CostBasis"];
                this.columnNetProceeds = base.Columns["NetProceeds"];
                this.columnStrategy = base.Columns["Strategy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnUnderlyingSymbol = new global::System.Data.DataColumn("UnderlyingSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnderlyingSymbol);
                this.columnTaxlotId = new global::System.Data.DataColumn("TaxlotId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxlotId);
                this.columnTradeId = new global::System.Data.DataColumn("TradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeId);
                this.columnSubAcctName = new global::System.Data.DataColumn("SubAcctName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubAcctName);
                this.columnTradeTypeName = new global::System.Data.DataColumn("TradeTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeTypeName);
                this.columnTradeVolume = new global::System.Data.DataColumn("TradeVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeVolume);
                this.columnNetPrice = new global::System.Data.DataColumn("NetPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetPrice);
                this.columnUnitCost = new global::System.Data.DataColumn("UnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitCost);
                this.columnShortTermGainLoss = new global::System.Data.DataColumn("ShortTermGainLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortTermGainLoss);
                this.columnLongTermGainLoss = new global::System.Data.DataColumn("LongTermGainLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongTermGainLoss);
                this.columnOpenDate = new global::System.Data.DataColumn("OpenDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpenDate);
                this.columnCloseDate = new global::System.Data.DataColumn("CloseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCloseDate);
                this.columnTradeNumber = new global::System.Data.DataColumn("TradeNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeNumber);
                this.columnDaysHeld = new global::System.Data.DataColumn("DaysHeld", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaysHeld);
                this.columnCostBasis = new global::System.Data.DataColumn("CostBasis", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostBasis);
                this.columnNetProceeds = new global::System.Data.DataColumn("NetProceeds", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetProceeds);
                this.columnStrategy = new global::System.Data.DataColumn("Strategy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrategy);
                this.columnUnderlyingSymbol.MaxLength = 10;
                this.columnTaxlotId.MaxLength = 20;
                this.columnSubAcctName.MaxLength = 80;
                this.columnTradeTypeName.MaxLength = 80;
                this.columnDaysHeld.ReadOnly = true;
                this.columnCostBasis.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedStockGainsRow NewRealizedStockGainsRow() {
                return ((RealizedStockGainsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RealizedStockGainsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RealizedStockGainsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RealizedStockGainsRowChanged != null)) {
                    this.RealizedStockGainsRowChanged(this, new RealizedStockGainsRowChangeEvent(((RealizedStockGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RealizedStockGainsRowChanging != null)) {
                    this.RealizedStockGainsRowChanging(this, new RealizedStockGainsRowChangeEvent(((RealizedStockGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RealizedStockGainsRowDeleted != null)) {
                    this.RealizedStockGainsRowDeleted(this, new RealizedStockGainsRowChangeEvent(((RealizedStockGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RealizedStockGainsRowDeleting != null)) {
                    this.RealizedStockGainsRowDeleting(this, new RealizedStockGainsRowChangeEvent(((RealizedStockGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRealizedStockGainsRow(RealizedStockGainsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RealizedStockGainsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RealizedEquityOptionGainsDataTable : global::System.Data.TypedTableBase<RealizedEquityOptionGainsRow> {
            
            private global::System.Data.DataColumn columnUnderlyingSymbol;
            
            private global::System.Data.DataColumn columnOptionSymbol;
            
            private global::System.Data.DataColumn columnExpirationDate;
            
            private global::System.Data.DataColumn columnStrikePrice;
            
            private global::System.Data.DataColumn columnOptionTypeName;
            
            private global::System.Data.DataColumn columnTradeNumber;
            
            private global::System.Data.DataColumn columnSubAcctName;
            
            private global::System.Data.DataColumn columnTradeVolume;
            
            private global::System.Data.DataColumn columnOpeningTradeDate;
            
            private global::System.Data.DataColumn columnOpeningTradeId;
            
            private global::System.Data.DataColumn columnOpeningTradeTypeName;
            
            private global::System.Data.DataColumn columnOpeningTradePrice;
            
            private global::System.Data.DataColumn columnOpeningTotalPrice;
            
            private global::System.Data.DataColumn columnOpeningTradeMediumName;
            
            private global::System.Data.DataColumn columnClosingTradeDate;
            
            private global::System.Data.DataColumn columnClosingTradeId;
            
            private global::System.Data.DataColumn columnClosingTradeTypeName;
            
            private global::System.Data.DataColumn columnClosingTradePrice;
            
            private global::System.Data.DataColumn columnClosingTotalPrice;
            
            private global::System.Data.DataColumn columnClosingTradeMediumName;
            
            private global::System.Data.DataColumn columnDaysHeld;
            
            private global::System.Data.DataColumn columnShortTermGainLoss;
            
            private global::System.Data.DataColumn columnLongTermGainLoss;
            
            private global::System.Data.DataColumn columnCostBasis;
            
            private global::System.Data.DataColumn columnNetProceeds;
            
            private global::System.Data.DataColumn columnOptionId;
            
            private global::System.Data.DataColumn columnOptionTypeId;
            
            private global::System.Data.DataColumn columnOpeningUnitCost;
            
            private global::System.Data.DataColumn columnClosingUnitCost;
            
            private global::System.Data.DataColumn columnUnitCostBasis;
            
            private global::System.Data.DataColumn columnUnitNetProceeds;
            
            private global::System.Data.DataColumn columnBloombergSymbol;
            
            private global::System.Data.DataColumn columnSharesPerContract;
            
            private global::System.Data.DataColumn columnOpeningStrategy;
            
            private global::System.Data.DataColumn columnClosingStrategy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedEquityOptionGainsDataTable() {
                this.TableName = "RealizedEquityOptionGains";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RealizedEquityOptionGainsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RealizedEquityOptionGainsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnderlyingSymbolColumn {
                get {
                    return this.columnUnderlyingSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionSymbolColumn {
                get {
                    return this.columnOptionSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpirationDateColumn {
                get {
                    return this.columnExpirationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StrikePriceColumn {
                get {
                    return this.columnStrikePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionTypeNameColumn {
                get {
                    return this.columnOptionTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeNumberColumn {
                get {
                    return this.columnTradeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubAcctNameColumn {
                get {
                    return this.columnSubAcctName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeVolumeColumn {
                get {
                    return this.columnTradeVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeDateColumn {
                get {
                    return this.columnOpeningTradeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeIdColumn {
                get {
                    return this.columnOpeningTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeTypeNameColumn {
                get {
                    return this.columnOpeningTradeTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradePriceColumn {
                get {
                    return this.columnOpeningTradePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTotalPriceColumn {
                get {
                    return this.columnOpeningTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeMediumNameColumn {
                get {
                    return this.columnOpeningTradeMediumName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTradeDateColumn {
                get {
                    return this.columnClosingTradeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTradeIdColumn {
                get {
                    return this.columnClosingTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTradeTypeNameColumn {
                get {
                    return this.columnClosingTradeTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTradePriceColumn {
                get {
                    return this.columnClosingTradePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTotalPriceColumn {
                get {
                    return this.columnClosingTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTradeMediumNameColumn {
                get {
                    return this.columnClosingTradeMediumName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DaysHeldColumn {
                get {
                    return this.columnDaysHeld;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortTermGainLossColumn {
                get {
                    return this.columnShortTermGainLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LongTermGainLossColumn {
                get {
                    return this.columnLongTermGainLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostBasisColumn {
                get {
                    return this.columnCostBasis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetProceedsColumn {
                get {
                    return this.columnNetProceeds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionIdColumn {
                get {
                    return this.columnOptionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionTypeIdColumn {
                get {
                    return this.columnOptionTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningUnitCostColumn {
                get {
                    return this.columnOpeningUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingUnitCostColumn {
                get {
                    return this.columnClosingUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitCostBasisColumn {
                get {
                    return this.columnUnitCostBasis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitNetProceedsColumn {
                get {
                    return this.columnUnitNetProceeds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BloombergSymbolColumn {
                get {
                    return this.columnBloombergSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SharesPerContractColumn {
                get {
                    return this.columnSharesPerContract;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningStrategyColumn {
                get {
                    return this.columnOpeningStrategy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingStrategyColumn {
                get {
                    return this.columnClosingStrategy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedEquityOptionGainsRow this[int index] {
                get {
                    return ((RealizedEquityOptionGainsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedEquityOptionGainsRowChangeEventHandler RealizedEquityOptionGainsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedEquityOptionGainsRowChangeEventHandler RealizedEquityOptionGainsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedEquityOptionGainsRowChangeEventHandler RealizedEquityOptionGainsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedEquityOptionGainsRowChangeEventHandler RealizedEquityOptionGainsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRealizedEquityOptionGainsRow(RealizedEquityOptionGainsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedEquityOptionGainsRow AddRealizedEquityOptionGainsRow(
                        string UnderlyingSymbol, 
                        string OptionSymbol, 
                        System.DateTime ExpirationDate, 
                        double StrikePrice, 
                        string OptionTypeName, 
                        short TradeNumber, 
                        string SubAcctName, 
                        double TradeVolume, 
                        System.DateTime OpeningTradeDate, 
                        int OpeningTradeId, 
                        string OpeningTradeTypeName, 
                        double OpeningTradePrice, 
                        double OpeningTotalPrice, 
                        string OpeningTradeMediumName, 
                        System.DateTime ClosingTradeDate, 
                        int ClosingTradeId, 
                        string ClosingTradeTypeName, 
                        double ClosingTradePrice, 
                        double ClosingTotalPrice, 
                        string ClosingTradeMediumName, 
                        int DaysHeld, 
                        double ShortTermGainLoss, 
                        double LongTermGainLoss, 
                        double CostBasis, 
                        double NetProceeds, 
                        int OptionId, 
                        short OptionTypeId, 
                        double OpeningUnitCost, 
                        double ClosingUnitCost, 
                        double UnitCostBasis, 
                        double UnitNetProceeds, 
                        string BloombergSymbol, 
                        short SharesPerContract, 
                        string OpeningStrategy, 
                        string ClosingStrategy) {
                RealizedEquityOptionGainsRow rowRealizedEquityOptionGainsRow = ((RealizedEquityOptionGainsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UnderlyingSymbol,
                        OptionSymbol,
                        ExpirationDate,
                        StrikePrice,
                        OptionTypeName,
                        TradeNumber,
                        SubAcctName,
                        TradeVolume,
                        OpeningTradeDate,
                        OpeningTradeId,
                        OpeningTradeTypeName,
                        OpeningTradePrice,
                        OpeningTotalPrice,
                        OpeningTradeMediumName,
                        ClosingTradeDate,
                        ClosingTradeId,
                        ClosingTradeTypeName,
                        ClosingTradePrice,
                        ClosingTotalPrice,
                        ClosingTradeMediumName,
                        DaysHeld,
                        ShortTermGainLoss,
                        LongTermGainLoss,
                        CostBasis,
                        NetProceeds,
                        OptionId,
                        OptionTypeId,
                        OpeningUnitCost,
                        ClosingUnitCost,
                        UnitCostBasis,
                        UnitNetProceeds,
                        BloombergSymbol,
                        SharesPerContract,
                        OpeningStrategy,
                        ClosingStrategy};
                rowRealizedEquityOptionGainsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRealizedEquityOptionGainsRow);
                return rowRealizedEquityOptionGainsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RealizedEquityOptionGainsDataTable cln = ((RealizedEquityOptionGainsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RealizedEquityOptionGainsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnUnderlyingSymbol = base.Columns["UnderlyingSymbol"];
                this.columnOptionSymbol = base.Columns["OptionSymbol"];
                this.columnExpirationDate = base.Columns["ExpirationDate"];
                this.columnStrikePrice = base.Columns["StrikePrice"];
                this.columnOptionTypeName = base.Columns["OptionTypeName"];
                this.columnTradeNumber = base.Columns["TradeNumber"];
                this.columnSubAcctName = base.Columns["SubAcctName"];
                this.columnTradeVolume = base.Columns["TradeVolume"];
                this.columnOpeningTradeDate = base.Columns["OpeningTradeDate"];
                this.columnOpeningTradeId = base.Columns["OpeningTradeId"];
                this.columnOpeningTradeTypeName = base.Columns["OpeningTradeTypeName"];
                this.columnOpeningTradePrice = base.Columns["OpeningTradePrice"];
                this.columnOpeningTotalPrice = base.Columns["OpeningTotalPrice"];
                this.columnOpeningTradeMediumName = base.Columns["OpeningTradeMediumName"];
                this.columnClosingTradeDate = base.Columns["ClosingTradeDate"];
                this.columnClosingTradeId = base.Columns["ClosingTradeId"];
                this.columnClosingTradeTypeName = base.Columns["ClosingTradeTypeName"];
                this.columnClosingTradePrice = base.Columns["ClosingTradePrice"];
                this.columnClosingTotalPrice = base.Columns["ClosingTotalPrice"];
                this.columnClosingTradeMediumName = base.Columns["ClosingTradeMediumName"];
                this.columnDaysHeld = base.Columns["DaysHeld"];
                this.columnShortTermGainLoss = base.Columns["ShortTermGainLoss"];
                this.columnLongTermGainLoss = base.Columns["LongTermGainLoss"];
                this.columnCostBasis = base.Columns["CostBasis"];
                this.columnNetProceeds = base.Columns["NetProceeds"];
                this.columnOptionId = base.Columns["OptionId"];
                this.columnOptionTypeId = base.Columns["OptionTypeId"];
                this.columnOpeningUnitCost = base.Columns["OpeningUnitCost"];
                this.columnClosingUnitCost = base.Columns["ClosingUnitCost"];
                this.columnUnitCostBasis = base.Columns["UnitCostBasis"];
                this.columnUnitNetProceeds = base.Columns["UnitNetProceeds"];
                this.columnBloombergSymbol = base.Columns["BloombergSymbol"];
                this.columnSharesPerContract = base.Columns["SharesPerContract"];
                this.columnOpeningStrategy = base.Columns["OpeningStrategy"];
                this.columnClosingStrategy = base.Columns["ClosingStrategy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnUnderlyingSymbol = new global::System.Data.DataColumn("UnderlyingSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnderlyingSymbol);
                this.columnOptionSymbol = new global::System.Data.DataColumn("OptionSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionSymbol);
                this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirationDate);
                this.columnStrikePrice = new global::System.Data.DataColumn("StrikePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrikePrice);
                this.columnOptionTypeName = new global::System.Data.DataColumn("OptionTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionTypeName);
                this.columnTradeNumber = new global::System.Data.DataColumn("TradeNumber", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeNumber);
                this.columnSubAcctName = new global::System.Data.DataColumn("SubAcctName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubAcctName);
                this.columnTradeVolume = new global::System.Data.DataColumn("TradeVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeVolume);
                this.columnOpeningTradeDate = new global::System.Data.DataColumn("OpeningTradeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeDate);
                this.columnOpeningTradeId = new global::System.Data.DataColumn("OpeningTradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeId);
                this.columnOpeningTradeTypeName = new global::System.Data.DataColumn("OpeningTradeTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeTypeName);
                this.columnOpeningTradePrice = new global::System.Data.DataColumn("OpeningTradePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradePrice);
                this.columnOpeningTotalPrice = new global::System.Data.DataColumn("OpeningTotalPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTotalPrice);
                this.columnOpeningTradeMediumName = new global::System.Data.DataColumn("OpeningTradeMediumName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeMediumName);
                this.columnClosingTradeDate = new global::System.Data.DataColumn("ClosingTradeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTradeDate);
                this.columnClosingTradeId = new global::System.Data.DataColumn("ClosingTradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTradeId);
                this.columnClosingTradeTypeName = new global::System.Data.DataColumn("ClosingTradeTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTradeTypeName);
                this.columnClosingTradePrice = new global::System.Data.DataColumn("ClosingTradePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTradePrice);
                this.columnClosingTotalPrice = new global::System.Data.DataColumn("ClosingTotalPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTotalPrice);
                this.columnClosingTradeMediumName = new global::System.Data.DataColumn("ClosingTradeMediumName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTradeMediumName);
                this.columnDaysHeld = new global::System.Data.DataColumn("DaysHeld", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaysHeld);
                this.columnShortTermGainLoss = new global::System.Data.DataColumn("ShortTermGainLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortTermGainLoss);
                this.columnLongTermGainLoss = new global::System.Data.DataColumn("LongTermGainLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongTermGainLoss);
                this.columnCostBasis = new global::System.Data.DataColumn("CostBasis", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostBasis);
                this.columnNetProceeds = new global::System.Data.DataColumn("NetProceeds", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetProceeds);
                this.columnOptionId = new global::System.Data.DataColumn("OptionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionId);
                this.columnOptionTypeId = new global::System.Data.DataColumn("OptionTypeId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionTypeId);
                this.columnOpeningUnitCost = new global::System.Data.DataColumn("OpeningUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningUnitCost);
                this.columnClosingUnitCost = new global::System.Data.DataColumn("ClosingUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingUnitCost);
                this.columnUnitCostBasis = new global::System.Data.DataColumn("UnitCostBasis", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitCostBasis);
                this.columnUnitNetProceeds = new global::System.Data.DataColumn("UnitNetProceeds", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitNetProceeds);
                this.columnBloombergSymbol = new global::System.Data.DataColumn("BloombergSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloombergSymbol);
                this.columnSharesPerContract = new global::System.Data.DataColumn("SharesPerContract", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSharesPerContract);
                this.columnOpeningStrategy = new global::System.Data.DataColumn("OpeningStrategy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningStrategy);
                this.columnClosingStrategy = new global::System.Data.DataColumn("ClosingStrategy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingStrategy);
                this.columnUnderlyingSymbol.MaxLength = 10;
                this.columnOptionSymbol.MaxLength = 10;
                this.columnOptionTypeName.MaxLength = 10;
                this.columnSubAcctName.MaxLength = 80;
                this.columnOpeningTradeTypeName.MaxLength = 80;
                this.columnOpeningTradeMediumName.MaxLength = 80;
                this.columnClosingTradeTypeName.MaxLength = 80;
                this.columnClosingTradeMediumName.MaxLength = 80;
                this.columnDaysHeld.ReadOnly = true;
                this.columnShortTermGainLoss.ReadOnly = true;
                this.columnLongTermGainLoss.ReadOnly = true;
                this.columnCostBasis.ReadOnly = true;
                this.columnUnitCostBasis.ReadOnly = true;
                this.columnUnitNetProceeds.ReadOnly = true;
                this.columnBloombergSymbol.ReadOnly = true;
                this.columnBloombergSymbol.MaxLength = 80;
                this.columnOpeningStrategy.MaxLength = 80;
                this.columnClosingStrategy.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedEquityOptionGainsRow NewRealizedEquityOptionGainsRow() {
                return ((RealizedEquityOptionGainsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RealizedEquityOptionGainsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RealizedEquityOptionGainsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RealizedEquityOptionGainsRowChanged != null)) {
                    this.RealizedEquityOptionGainsRowChanged(this, new RealizedEquityOptionGainsRowChangeEvent(((RealizedEquityOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RealizedEquityOptionGainsRowChanging != null)) {
                    this.RealizedEquityOptionGainsRowChanging(this, new RealizedEquityOptionGainsRowChangeEvent(((RealizedEquityOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RealizedEquityOptionGainsRowDeleted != null)) {
                    this.RealizedEquityOptionGainsRowDeleted(this, new RealizedEquityOptionGainsRowChangeEvent(((RealizedEquityOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RealizedEquityOptionGainsRowDeleting != null)) {
                    this.RealizedEquityOptionGainsRowDeleting(this, new RealizedEquityOptionGainsRowChangeEvent(((RealizedEquityOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRealizedEquityOptionGainsRow(RealizedEquityOptionGainsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RealizedEquityOptionGainsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RealizedIndexOptionGainsDataTable : global::System.Data.TypedTableBase<RealizedIndexOptionGainsRow> {
            
            private global::System.Data.DataColumn columnUnderlyingSymbol;
            
            private global::System.Data.DataColumn columnOptionSymbol;
            
            private global::System.Data.DataColumn columnExpirationDate;
            
            private global::System.Data.DataColumn columnStrikePrice;
            
            private global::System.Data.DataColumn columnOptionTypeName;
            
            private global::System.Data.DataColumn columnTradeNumber;
            
            private global::System.Data.DataColumn columnSubAcctName;
            
            private global::System.Data.DataColumn columnTradeVolume;
            
            private global::System.Data.DataColumn columnOpeningTradeDate;
            
            private global::System.Data.DataColumn columnOpeningTradeId;
            
            private global::System.Data.DataColumn columnOpeningTradeTypeName;
            
            private global::System.Data.DataColumn columnOpeningTradePrice;
            
            private global::System.Data.DataColumn columnOpeningTotalPrice;
            
            private global::System.Data.DataColumn columnOpeningTradeMediumName;
            
            private global::System.Data.DataColumn columnClosingTradeDate;
            
            private global::System.Data.DataColumn columnClosingTradeId;
            
            private global::System.Data.DataColumn columnClosingTradeTypeName;
            
            private global::System.Data.DataColumn columnClosingTradePrice;
            
            private global::System.Data.DataColumn columnClosingTotalPrice;
            
            private global::System.Data.DataColumn columnClosingTradeMediumName;
            
            private global::System.Data.DataColumn columnDaysHeld;
            
            private global::System.Data.DataColumn columnShortTermGainLoss;
            
            private global::System.Data.DataColumn columnLongTermGainLoss;
            
            private global::System.Data.DataColumn columnCostBasis;
            
            private global::System.Data.DataColumn columnNetProceeds;
            
            private global::System.Data.DataColumn columnOptionId;
            
            private global::System.Data.DataColumn columnOptionTypeId;
            
            private global::System.Data.DataColumn columnOpeningUnitCost;
            
            private global::System.Data.DataColumn columnClosingUnitCost;
            
            private global::System.Data.DataColumn columnUnitCostBasis;
            
            private global::System.Data.DataColumn columnUnitNetProceeds;
            
            private global::System.Data.DataColumn columnBloombergSymbol;
            
            private global::System.Data.DataColumn columnSharesPerContract;
            
            private global::System.Data.DataColumn columnOpeningStrategy;
            
            private global::System.Data.DataColumn columnClosingStrategy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedIndexOptionGainsDataTable() {
                this.TableName = "RealizedIndexOptionGains";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RealizedIndexOptionGainsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RealizedIndexOptionGainsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnderlyingSymbolColumn {
                get {
                    return this.columnUnderlyingSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionSymbolColumn {
                get {
                    return this.columnOptionSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpirationDateColumn {
                get {
                    return this.columnExpirationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StrikePriceColumn {
                get {
                    return this.columnStrikePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionTypeNameColumn {
                get {
                    return this.columnOptionTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeNumberColumn {
                get {
                    return this.columnTradeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubAcctNameColumn {
                get {
                    return this.columnSubAcctName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeVolumeColumn {
                get {
                    return this.columnTradeVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeDateColumn {
                get {
                    return this.columnOpeningTradeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeIdColumn {
                get {
                    return this.columnOpeningTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeTypeNameColumn {
                get {
                    return this.columnOpeningTradeTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradePriceColumn {
                get {
                    return this.columnOpeningTradePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTotalPriceColumn {
                get {
                    return this.columnOpeningTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeMediumNameColumn {
                get {
                    return this.columnOpeningTradeMediumName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTradeDateColumn {
                get {
                    return this.columnClosingTradeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTradeIdColumn {
                get {
                    return this.columnClosingTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTradeTypeNameColumn {
                get {
                    return this.columnClosingTradeTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTradePriceColumn {
                get {
                    return this.columnClosingTradePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTotalPriceColumn {
                get {
                    return this.columnClosingTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTradeMediumNameColumn {
                get {
                    return this.columnClosingTradeMediumName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DaysHeldColumn {
                get {
                    return this.columnDaysHeld;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortTermGainLossColumn {
                get {
                    return this.columnShortTermGainLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LongTermGainLossColumn {
                get {
                    return this.columnLongTermGainLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostBasisColumn {
                get {
                    return this.columnCostBasis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetProceedsColumn {
                get {
                    return this.columnNetProceeds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionIdColumn {
                get {
                    return this.columnOptionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionTypeIdColumn {
                get {
                    return this.columnOptionTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningUnitCostColumn {
                get {
                    return this.columnOpeningUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingUnitCostColumn {
                get {
                    return this.columnClosingUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitCostBasisColumn {
                get {
                    return this.columnUnitCostBasis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitNetProceedsColumn {
                get {
                    return this.columnUnitNetProceeds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BloombergSymbolColumn {
                get {
                    return this.columnBloombergSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SharesPerContractColumn {
                get {
                    return this.columnSharesPerContract;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningStrategyColumn {
                get {
                    return this.columnOpeningStrategy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingStrategyColumn {
                get {
                    return this.columnClosingStrategy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedIndexOptionGainsRow this[int index] {
                get {
                    return ((RealizedIndexOptionGainsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedIndexOptionGainsRowChangeEventHandler RealizedIndexOptionGainsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedIndexOptionGainsRowChangeEventHandler RealizedIndexOptionGainsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedIndexOptionGainsRowChangeEventHandler RealizedIndexOptionGainsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedIndexOptionGainsRowChangeEventHandler RealizedIndexOptionGainsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRealizedIndexOptionGainsRow(RealizedIndexOptionGainsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedIndexOptionGainsRow AddRealizedIndexOptionGainsRow(
                        string UnderlyingSymbol, 
                        string OptionSymbol, 
                        System.DateTime ExpirationDate, 
                        double StrikePrice, 
                        string OptionTypeName, 
                        short TradeNumber, 
                        string SubAcctName, 
                        double TradeVolume, 
                        System.DateTime OpeningTradeDate, 
                        int OpeningTradeId, 
                        string OpeningTradeTypeName, 
                        double OpeningTradePrice, 
                        double OpeningTotalPrice, 
                        string OpeningTradeMediumName, 
                        System.DateTime ClosingTradeDate, 
                        int ClosingTradeId, 
                        string ClosingTradeTypeName, 
                        double ClosingTradePrice, 
                        double ClosingTotalPrice, 
                        string ClosingTradeMediumName, 
                        int DaysHeld, 
                        double ShortTermGainLoss, 
                        double LongTermGainLoss, 
                        double CostBasis, 
                        double NetProceeds, 
                        int OptionId, 
                        short OptionTypeId, 
                        double OpeningUnitCost, 
                        double ClosingUnitCost, 
                        double UnitCostBasis, 
                        double UnitNetProceeds, 
                        string BloombergSymbol, 
                        short SharesPerContract, 
                        string OpeningStrategy, 
                        string ClosingStrategy) {
                RealizedIndexOptionGainsRow rowRealizedIndexOptionGainsRow = ((RealizedIndexOptionGainsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UnderlyingSymbol,
                        OptionSymbol,
                        ExpirationDate,
                        StrikePrice,
                        OptionTypeName,
                        TradeNumber,
                        SubAcctName,
                        TradeVolume,
                        OpeningTradeDate,
                        OpeningTradeId,
                        OpeningTradeTypeName,
                        OpeningTradePrice,
                        OpeningTotalPrice,
                        OpeningTradeMediumName,
                        ClosingTradeDate,
                        ClosingTradeId,
                        ClosingTradeTypeName,
                        ClosingTradePrice,
                        ClosingTotalPrice,
                        ClosingTradeMediumName,
                        DaysHeld,
                        ShortTermGainLoss,
                        LongTermGainLoss,
                        CostBasis,
                        NetProceeds,
                        OptionId,
                        OptionTypeId,
                        OpeningUnitCost,
                        ClosingUnitCost,
                        UnitCostBasis,
                        UnitNetProceeds,
                        BloombergSymbol,
                        SharesPerContract,
                        OpeningStrategy,
                        ClosingStrategy};
                rowRealizedIndexOptionGainsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRealizedIndexOptionGainsRow);
                return rowRealizedIndexOptionGainsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RealizedIndexOptionGainsDataTable cln = ((RealizedIndexOptionGainsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RealizedIndexOptionGainsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnUnderlyingSymbol = base.Columns["UnderlyingSymbol"];
                this.columnOptionSymbol = base.Columns["OptionSymbol"];
                this.columnExpirationDate = base.Columns["ExpirationDate"];
                this.columnStrikePrice = base.Columns["StrikePrice"];
                this.columnOptionTypeName = base.Columns["OptionTypeName"];
                this.columnTradeNumber = base.Columns["TradeNumber"];
                this.columnSubAcctName = base.Columns["SubAcctName"];
                this.columnTradeVolume = base.Columns["TradeVolume"];
                this.columnOpeningTradeDate = base.Columns["OpeningTradeDate"];
                this.columnOpeningTradeId = base.Columns["OpeningTradeId"];
                this.columnOpeningTradeTypeName = base.Columns["OpeningTradeTypeName"];
                this.columnOpeningTradePrice = base.Columns["OpeningTradePrice"];
                this.columnOpeningTotalPrice = base.Columns["OpeningTotalPrice"];
                this.columnOpeningTradeMediumName = base.Columns["OpeningTradeMediumName"];
                this.columnClosingTradeDate = base.Columns["ClosingTradeDate"];
                this.columnClosingTradeId = base.Columns["ClosingTradeId"];
                this.columnClosingTradeTypeName = base.Columns["ClosingTradeTypeName"];
                this.columnClosingTradePrice = base.Columns["ClosingTradePrice"];
                this.columnClosingTotalPrice = base.Columns["ClosingTotalPrice"];
                this.columnClosingTradeMediumName = base.Columns["ClosingTradeMediumName"];
                this.columnDaysHeld = base.Columns["DaysHeld"];
                this.columnShortTermGainLoss = base.Columns["ShortTermGainLoss"];
                this.columnLongTermGainLoss = base.Columns["LongTermGainLoss"];
                this.columnCostBasis = base.Columns["CostBasis"];
                this.columnNetProceeds = base.Columns["NetProceeds"];
                this.columnOptionId = base.Columns["OptionId"];
                this.columnOptionTypeId = base.Columns["OptionTypeId"];
                this.columnOpeningUnitCost = base.Columns["OpeningUnitCost"];
                this.columnClosingUnitCost = base.Columns["ClosingUnitCost"];
                this.columnUnitCostBasis = base.Columns["UnitCostBasis"];
                this.columnUnitNetProceeds = base.Columns["UnitNetProceeds"];
                this.columnBloombergSymbol = base.Columns["BloombergSymbol"];
                this.columnSharesPerContract = base.Columns["SharesPerContract"];
                this.columnOpeningStrategy = base.Columns["OpeningStrategy"];
                this.columnClosingStrategy = base.Columns["ClosingStrategy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnUnderlyingSymbol = new global::System.Data.DataColumn("UnderlyingSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnderlyingSymbol);
                this.columnOptionSymbol = new global::System.Data.DataColumn("OptionSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionSymbol);
                this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirationDate);
                this.columnStrikePrice = new global::System.Data.DataColumn("StrikePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrikePrice);
                this.columnOptionTypeName = new global::System.Data.DataColumn("OptionTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionTypeName);
                this.columnTradeNumber = new global::System.Data.DataColumn("TradeNumber", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeNumber);
                this.columnSubAcctName = new global::System.Data.DataColumn("SubAcctName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubAcctName);
                this.columnTradeVolume = new global::System.Data.DataColumn("TradeVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeVolume);
                this.columnOpeningTradeDate = new global::System.Data.DataColumn("OpeningTradeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeDate);
                this.columnOpeningTradeId = new global::System.Data.DataColumn("OpeningTradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeId);
                this.columnOpeningTradeTypeName = new global::System.Data.DataColumn("OpeningTradeTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeTypeName);
                this.columnOpeningTradePrice = new global::System.Data.DataColumn("OpeningTradePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradePrice);
                this.columnOpeningTotalPrice = new global::System.Data.DataColumn("OpeningTotalPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTotalPrice);
                this.columnOpeningTradeMediumName = new global::System.Data.DataColumn("OpeningTradeMediumName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeMediumName);
                this.columnClosingTradeDate = new global::System.Data.DataColumn("ClosingTradeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTradeDate);
                this.columnClosingTradeId = new global::System.Data.DataColumn("ClosingTradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTradeId);
                this.columnClosingTradeTypeName = new global::System.Data.DataColumn("ClosingTradeTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTradeTypeName);
                this.columnClosingTradePrice = new global::System.Data.DataColumn("ClosingTradePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTradePrice);
                this.columnClosingTotalPrice = new global::System.Data.DataColumn("ClosingTotalPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTotalPrice);
                this.columnClosingTradeMediumName = new global::System.Data.DataColumn("ClosingTradeMediumName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTradeMediumName);
                this.columnDaysHeld = new global::System.Data.DataColumn("DaysHeld", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaysHeld);
                this.columnShortTermGainLoss = new global::System.Data.DataColumn("ShortTermGainLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortTermGainLoss);
                this.columnLongTermGainLoss = new global::System.Data.DataColumn("LongTermGainLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongTermGainLoss);
                this.columnCostBasis = new global::System.Data.DataColumn("CostBasis", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostBasis);
                this.columnNetProceeds = new global::System.Data.DataColumn("NetProceeds", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetProceeds);
                this.columnOptionId = new global::System.Data.DataColumn("OptionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionId);
                this.columnOptionTypeId = new global::System.Data.DataColumn("OptionTypeId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionTypeId);
                this.columnOpeningUnitCost = new global::System.Data.DataColumn("OpeningUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningUnitCost);
                this.columnClosingUnitCost = new global::System.Data.DataColumn("ClosingUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingUnitCost);
                this.columnUnitCostBasis = new global::System.Data.DataColumn("UnitCostBasis", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitCostBasis);
                this.columnUnitNetProceeds = new global::System.Data.DataColumn("UnitNetProceeds", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitNetProceeds);
                this.columnBloombergSymbol = new global::System.Data.DataColumn("BloombergSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloombergSymbol);
                this.columnSharesPerContract = new global::System.Data.DataColumn("SharesPerContract", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSharesPerContract);
                this.columnOpeningStrategy = new global::System.Data.DataColumn("OpeningStrategy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningStrategy);
                this.columnClosingStrategy = new global::System.Data.DataColumn("ClosingStrategy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingStrategy);
                this.columnUnderlyingSymbol.MaxLength = 10;
                this.columnOptionSymbol.MaxLength = 10;
                this.columnOptionTypeName.MaxLength = 10;
                this.columnSubAcctName.MaxLength = 80;
                this.columnOpeningTradeTypeName.MaxLength = 80;
                this.columnOpeningTradeMediumName.MaxLength = 80;
                this.columnClosingTradeTypeName.MaxLength = 80;
                this.columnClosingTradeMediumName.MaxLength = 80;
                this.columnDaysHeld.ReadOnly = true;
                this.columnShortTermGainLoss.ReadOnly = true;
                this.columnLongTermGainLoss.ReadOnly = true;
                this.columnCostBasis.ReadOnly = true;
                this.columnUnitCostBasis.ReadOnly = true;
                this.columnUnitNetProceeds.ReadOnly = true;
                this.columnBloombergSymbol.ReadOnly = true;
                this.columnBloombergSymbol.MaxLength = 80;
                this.columnOpeningStrategy.MaxLength = 80;
                this.columnClosingStrategy.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedIndexOptionGainsRow NewRealizedIndexOptionGainsRow() {
                return ((RealizedIndexOptionGainsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RealizedIndexOptionGainsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RealizedIndexOptionGainsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RealizedIndexOptionGainsRowChanged != null)) {
                    this.RealizedIndexOptionGainsRowChanged(this, new RealizedIndexOptionGainsRowChangeEvent(((RealizedIndexOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RealizedIndexOptionGainsRowChanging != null)) {
                    this.RealizedIndexOptionGainsRowChanging(this, new RealizedIndexOptionGainsRowChangeEvent(((RealizedIndexOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RealizedIndexOptionGainsRowDeleted != null)) {
                    this.RealizedIndexOptionGainsRowDeleted(this, new RealizedIndexOptionGainsRowChangeEvent(((RealizedIndexOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RealizedIndexOptionGainsRowDeleting != null)) {
                    this.RealizedIndexOptionGainsRowDeleting(this, new RealizedIndexOptionGainsRowChangeEvent(((RealizedIndexOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRealizedIndexOptionGainsRow(RealizedIndexOptionGainsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RealizedIndexOptionGainsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UnrealizedEquityOptionGainsDataTable : global::System.Data.TypedTableBase<UnrealizedEquityOptionGainsRow> {
            
            private global::System.Data.DataColumn columnUnderlyingSymbol;
            
            private global::System.Data.DataColumn columnOptionSymbol;
            
            private global::System.Data.DataColumn columnExpirationDate;
            
            private global::System.Data.DataColumn columnStrikePrice;
            
            private global::System.Data.DataColumn columnOptionTypeName;
            
            private global::System.Data.DataColumn columnOptionTypeId;
            
            private global::System.Data.DataColumn columnTradeNumber;
            
            private global::System.Data.DataColumn columnSubAcctName;
            
            private global::System.Data.DataColumn columnTradeVolume;
            
            private global::System.Data.DataColumn columnOpeningTradeDate;
            
            private global::System.Data.DataColumn columnOpeningTradeId;
            
            private global::System.Data.DataColumn columnOpeningTradeTypeName;
            
            private global::System.Data.DataColumn columnOpeningTradePrice;
            
            private global::System.Data.DataColumn columnOpeningTotalPrice;
            
            private global::System.Data.DataColumn columnOpeningTradeMediumName;
            
            private global::System.Data.DataColumn columnCurrentPrice;
            
            private global::System.Data.DataColumn columnMarketValue;
            
            private global::System.Data.DataColumn columnGainOrLoss;
            
            private global::System.Data.DataColumn columnPriceOverrideDate;
            
            private global::System.Data.DataColumn columnPriceOverrideUser;
            
            private global::System.Data.DataColumn columnPriceOverrideFlag;
            
            private global::System.Data.DataColumn columnOriginalPrice;
            
            private global::System.Data.DataColumn columnOptionId;
            
            private global::System.Data.DataColumn columnBloombergSymbol;
            
            private global::System.Data.DataColumn columnOpeningUnitCost;
            
            private global::System.Data.DataColumn columnOpeningStrategy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedEquityOptionGainsDataTable() : 
                    this(false) {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedEquityOptionGainsDataTable(bool initExpressions) {
                this.TableName = "UnrealizedEquityOptionGains";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UnrealizedEquityOptionGainsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected UnrealizedEquityOptionGainsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnderlyingSymbolColumn {
                get {
                    return this.columnUnderlyingSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionSymbolColumn {
                get {
                    return this.columnOptionSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpirationDateColumn {
                get {
                    return this.columnExpirationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StrikePriceColumn {
                get {
                    return this.columnStrikePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionTypeNameColumn {
                get {
                    return this.columnOptionTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionTypeIdColumn {
                get {
                    return this.columnOptionTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeNumberColumn {
                get {
                    return this.columnTradeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubAcctNameColumn {
                get {
                    return this.columnSubAcctName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeVolumeColumn {
                get {
                    return this.columnTradeVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeDateColumn {
                get {
                    return this.columnOpeningTradeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeIdColumn {
                get {
                    return this.columnOpeningTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeTypeNameColumn {
                get {
                    return this.columnOpeningTradeTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradePriceColumn {
                get {
                    return this.columnOpeningTradePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTotalPriceColumn {
                get {
                    return this.columnOpeningTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeMediumNameColumn {
                get {
                    return this.columnOpeningTradeMediumName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentPriceColumn {
                get {
                    return this.columnCurrentPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarketValueColumn {
                get {
                    return this.columnMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GainOrLossColumn {
                get {
                    return this.columnGainOrLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceOverrideDateColumn {
                get {
                    return this.columnPriceOverrideDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceOverrideUserColumn {
                get {
                    return this.columnPriceOverrideUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceOverrideFlagColumn {
                get {
                    return this.columnPriceOverrideFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalPriceColumn {
                get {
                    return this.columnOriginalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionIdColumn {
                get {
                    return this.columnOptionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BloombergSymbolColumn {
                get {
                    return this.columnBloombergSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningUnitCostColumn {
                get {
                    return this.columnOpeningUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningStrategyColumn {
                get {
                    return this.columnOpeningStrategy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedEquityOptionGainsRow this[int index] {
                get {
                    return ((UnrealizedEquityOptionGainsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UnrealizedEquityOptionGainsRowChangeEventHandler UnrealizedEquityOptionGainsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UnrealizedEquityOptionGainsRowChangeEventHandler UnrealizedEquityOptionGainsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UnrealizedEquityOptionGainsRowChangeEventHandler UnrealizedEquityOptionGainsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UnrealizedEquityOptionGainsRowChangeEventHandler UnrealizedEquityOptionGainsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddUnrealizedEquityOptionGainsRow(UnrealizedEquityOptionGainsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedEquityOptionGainsRow AddUnrealizedEquityOptionGainsRow(
                        string UnderlyingSymbol, 
                        string OptionSymbol, 
                        System.DateTime ExpirationDate, 
                        double StrikePrice, 
                        string OptionTypeName, 
                        short OptionTypeId, 
                        short TradeNumber, 
                        string SubAcctName, 
                        double TradeVolume, 
                        System.DateTime OpeningTradeDate, 
                        int OpeningTradeId, 
                        string OpeningTradeTypeName, 
                        double OpeningTradePrice, 
                        double OpeningTotalPrice, 
                        string OpeningTradeMediumName, 
                        double CurrentPrice, 
                        double MarketValue, 
                        double GainOrLoss, 
                        System.DateTime PriceOverrideDate, 
                        string PriceOverrideUser, 
                        string PriceOverrideFlag, 
                        double OriginalPrice, 
                        int OptionId, 
                        string BloombergSymbol, 
                        double OpeningUnitCost, 
                        string OpeningStrategy) {
                UnrealizedEquityOptionGainsRow rowUnrealizedEquityOptionGainsRow = ((UnrealizedEquityOptionGainsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UnderlyingSymbol,
                        OptionSymbol,
                        ExpirationDate,
                        StrikePrice,
                        OptionTypeName,
                        OptionTypeId,
                        TradeNumber,
                        SubAcctName,
                        TradeVolume,
                        OpeningTradeDate,
                        OpeningTradeId,
                        OpeningTradeTypeName,
                        OpeningTradePrice,
                        OpeningTotalPrice,
                        OpeningTradeMediumName,
                        CurrentPrice,
                        MarketValue,
                        GainOrLoss,
                        PriceOverrideDate,
                        PriceOverrideUser,
                        PriceOverrideFlag,
                        OriginalPrice,
                        OptionId,
                        BloombergSymbol,
                        OpeningUnitCost,
                        OpeningStrategy};
                rowUnrealizedEquityOptionGainsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUnrealizedEquityOptionGainsRow);
                return rowUnrealizedEquityOptionGainsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedEquityOptionGainsRow AddUnrealizedEquityOptionGainsRow(
                        string UnderlyingSymbol, 
                        string OptionSymbol, 
                        System.DateTime ExpirationDate, 
                        double StrikePrice, 
                        string OptionTypeName, 
                        short OptionTypeId, 
                        short TradeNumber, 
                        string SubAcctName, 
                        double TradeVolume, 
                        System.DateTime OpeningTradeDate, 
                        int OpeningTradeId, 
                        string OpeningTradeTypeName, 
                        double OpeningTradePrice, 
                        double OpeningTotalPrice, 
                        string OpeningTradeMediumName, 
                        double CurrentPrice, 
                        double MarketValue, 
                        double GainOrLoss, 
                        System.DateTime PriceOverrideDate, 
                        string PriceOverrideUser, 
                        double OriginalPrice, 
                        int OptionId, 
                        string BloombergSymbol, 
                        double OpeningUnitCost, 
                        string OpeningStrategy) {
                UnrealizedEquityOptionGainsRow rowUnrealizedEquityOptionGainsRow = ((UnrealizedEquityOptionGainsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UnderlyingSymbol,
                        OptionSymbol,
                        ExpirationDate,
                        StrikePrice,
                        OptionTypeName,
                        OptionTypeId,
                        TradeNumber,
                        SubAcctName,
                        TradeVolume,
                        OpeningTradeDate,
                        OpeningTradeId,
                        OpeningTradeTypeName,
                        OpeningTradePrice,
                        OpeningTotalPrice,
                        OpeningTradeMediumName,
                        CurrentPrice,
                        MarketValue,
                        GainOrLoss,
                        PriceOverrideDate,
                        PriceOverrideUser,
                        null,
                        OriginalPrice,
                        OptionId,
                        BloombergSymbol,
                        OpeningUnitCost,
                        OpeningStrategy};
                rowUnrealizedEquityOptionGainsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUnrealizedEquityOptionGainsRow);
                return rowUnrealizedEquityOptionGainsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UnrealizedEquityOptionGainsDataTable cln = ((UnrealizedEquityOptionGainsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UnrealizedEquityOptionGainsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnUnderlyingSymbol = base.Columns["UnderlyingSymbol"];
                this.columnOptionSymbol = base.Columns["OptionSymbol"];
                this.columnExpirationDate = base.Columns["ExpirationDate"];
                this.columnStrikePrice = base.Columns["StrikePrice"];
                this.columnOptionTypeName = base.Columns["OptionTypeName"];
                this.columnOptionTypeId = base.Columns["OptionTypeId"];
                this.columnTradeNumber = base.Columns["TradeNumber"];
                this.columnSubAcctName = base.Columns["SubAcctName"];
                this.columnTradeVolume = base.Columns["TradeVolume"];
                this.columnOpeningTradeDate = base.Columns["OpeningTradeDate"];
                this.columnOpeningTradeId = base.Columns["OpeningTradeId"];
                this.columnOpeningTradeTypeName = base.Columns["OpeningTradeTypeName"];
                this.columnOpeningTradePrice = base.Columns["OpeningTradePrice"];
                this.columnOpeningTotalPrice = base.Columns["OpeningTotalPrice"];
                this.columnOpeningTradeMediumName = base.Columns["OpeningTradeMediumName"];
                this.columnCurrentPrice = base.Columns["CurrentPrice"];
                this.columnMarketValue = base.Columns["MarketValue"];
                this.columnGainOrLoss = base.Columns["GainOrLoss"];
                this.columnPriceOverrideDate = base.Columns["PriceOverrideDate"];
                this.columnPriceOverrideUser = base.Columns["PriceOverrideUser"];
                this.columnPriceOverrideFlag = base.Columns["PriceOverrideFlag"];
                this.columnOriginalPrice = base.Columns["OriginalPrice"];
                this.columnOptionId = base.Columns["OptionId"];
                this.columnBloombergSymbol = base.Columns["BloombergSymbol"];
                this.columnOpeningUnitCost = base.Columns["OpeningUnitCost"];
                this.columnOpeningStrategy = base.Columns["OpeningStrategy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnUnderlyingSymbol = new global::System.Data.DataColumn("UnderlyingSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnderlyingSymbol);
                this.columnOptionSymbol = new global::System.Data.DataColumn("OptionSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionSymbol);
                this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirationDate);
                this.columnStrikePrice = new global::System.Data.DataColumn("StrikePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrikePrice);
                this.columnOptionTypeName = new global::System.Data.DataColumn("OptionTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionTypeName);
                this.columnOptionTypeId = new global::System.Data.DataColumn("OptionTypeId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionTypeId);
                this.columnTradeNumber = new global::System.Data.DataColumn("TradeNumber", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeNumber);
                this.columnSubAcctName = new global::System.Data.DataColumn("SubAcctName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubAcctName);
                this.columnTradeVolume = new global::System.Data.DataColumn("TradeVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeVolume);
                this.columnOpeningTradeDate = new global::System.Data.DataColumn("OpeningTradeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeDate);
                this.columnOpeningTradeId = new global::System.Data.DataColumn("OpeningTradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeId);
                this.columnOpeningTradeTypeName = new global::System.Data.DataColumn("OpeningTradeTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeTypeName);
                this.columnOpeningTradePrice = new global::System.Data.DataColumn("OpeningTradePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradePrice);
                this.columnOpeningTotalPrice = new global::System.Data.DataColumn("OpeningTotalPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTotalPrice);
                this.columnOpeningTradeMediumName = new global::System.Data.DataColumn("OpeningTradeMediumName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeMediumName);
                this.columnCurrentPrice = new global::System.Data.DataColumn("CurrentPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentPrice);
                this.columnMarketValue = new global::System.Data.DataColumn("MarketValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketValue);
                this.columnGainOrLoss = new global::System.Data.DataColumn("GainOrLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGainOrLoss);
                this.columnPriceOverrideDate = new global::System.Data.DataColumn("PriceOverrideDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceOverrideDate);
                this.columnPriceOverrideUser = new global::System.Data.DataColumn("PriceOverrideUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceOverrideUser);
                this.columnPriceOverrideFlag = new global::System.Data.DataColumn("PriceOverrideFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceOverrideFlag);
                this.columnOriginalPrice = new global::System.Data.DataColumn("OriginalPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalPrice);
                this.columnOptionId = new global::System.Data.DataColumn("OptionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionId);
                this.columnBloombergSymbol = new global::System.Data.DataColumn("BloombergSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloombergSymbol);
                this.columnOpeningUnitCost = new global::System.Data.DataColumn("OpeningUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningUnitCost);
                this.columnOpeningStrategy = new global::System.Data.DataColumn("OpeningStrategy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningStrategy);
                this.columnUnderlyingSymbol.MaxLength = 10;
                this.columnOptionSymbol.MaxLength = 10;
                this.columnOptionTypeName.MaxLength = 10;
                this.columnSubAcctName.MaxLength = 80;
                this.columnOpeningTradeTypeName.MaxLength = 80;
                this.columnOpeningTradeMediumName.MaxLength = 80;
                this.columnMarketValue.ReadOnly = true;
                this.columnGainOrLoss.ReadOnly = true;
                this.columnPriceOverrideUser.MaxLength = 50;
                this.columnPriceOverrideFlag.ReadOnly = true;
                this.columnPriceOverrideFlag.DefaultValue = ((string)("\'\'"));
                this.columnOriginalPrice.ReadOnly = true;
                this.columnBloombergSymbol.ReadOnly = true;
                this.columnBloombergSymbol.MaxLength = 80;
                this.columnOpeningStrategy.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedEquityOptionGainsRow NewUnrealizedEquityOptionGainsRow() {
                return ((UnrealizedEquityOptionGainsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UnrealizedEquityOptionGainsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UnrealizedEquityOptionGainsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitExpressions() {
                this.PriceOverrideFlagColumn.Expression = "iif(PriceOverrideDate IS NULL,\'\',\'*\')";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UnrealizedEquityOptionGainsRowChanged != null)) {
                    this.UnrealizedEquityOptionGainsRowChanged(this, new UnrealizedEquityOptionGainsRowChangeEvent(((UnrealizedEquityOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UnrealizedEquityOptionGainsRowChanging != null)) {
                    this.UnrealizedEquityOptionGainsRowChanging(this, new UnrealizedEquityOptionGainsRowChangeEvent(((UnrealizedEquityOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UnrealizedEquityOptionGainsRowDeleted != null)) {
                    this.UnrealizedEquityOptionGainsRowDeleted(this, new UnrealizedEquityOptionGainsRowChangeEvent(((UnrealizedEquityOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UnrealizedEquityOptionGainsRowDeleting != null)) {
                    this.UnrealizedEquityOptionGainsRowDeleting(this, new UnrealizedEquityOptionGainsRowChangeEvent(((UnrealizedEquityOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveUnrealizedEquityOptionGainsRow(UnrealizedEquityOptionGainsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UnrealizedEquityOptionGainsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UnrealizedIndexOptionGainsDataTable : global::System.Data.TypedTableBase<UnrealizedIndexOptionGainsRow> {
            
            private global::System.Data.DataColumn columnUnderlyingSymbol;
            
            private global::System.Data.DataColumn columnOptionSymbol;
            
            private global::System.Data.DataColumn columnExpirationDate;
            
            private global::System.Data.DataColumn columnStrikePrice;
            
            private global::System.Data.DataColumn columnOptionTypeName;
            
            private global::System.Data.DataColumn columnOptionTypeId;
            
            private global::System.Data.DataColumn columnTradeNumber;
            
            private global::System.Data.DataColumn columnSubAcctName;
            
            private global::System.Data.DataColumn columnTradeVolume;
            
            private global::System.Data.DataColumn columnOpeningTradeDate;
            
            private global::System.Data.DataColumn columnOpeningTradeId;
            
            private global::System.Data.DataColumn columnOpeningTradeTypeName;
            
            private global::System.Data.DataColumn columnOpeningTradePrice;
            
            private global::System.Data.DataColumn columnOpeningTotalPrice;
            
            private global::System.Data.DataColumn columnOpeningTradeMediumName;
            
            private global::System.Data.DataColumn columnCurrentPrice;
            
            private global::System.Data.DataColumn columnMarketValue;
            
            private global::System.Data.DataColumn columnGainOrLoss;
            
            private global::System.Data.DataColumn columnPriceOverrideDate;
            
            private global::System.Data.DataColumn columnPriceOverrideUser;
            
            private global::System.Data.DataColumn columnPriceOverrideFlag;
            
            private global::System.Data.DataColumn columnOriginalPrice;
            
            private global::System.Data.DataColumn columnOptionId;
            
            private global::System.Data.DataColumn columnBloombergSymbol;
            
            private global::System.Data.DataColumn columnOpeningUnitCost;
            
            private global::System.Data.DataColumn columnOpeningStrategy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedIndexOptionGainsDataTable() : 
                    this(false) {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedIndexOptionGainsDataTable(bool initExpressions) {
                this.TableName = "UnrealizedIndexOptionGains";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UnrealizedIndexOptionGainsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected UnrealizedIndexOptionGainsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnderlyingSymbolColumn {
                get {
                    return this.columnUnderlyingSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionSymbolColumn {
                get {
                    return this.columnOptionSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpirationDateColumn {
                get {
                    return this.columnExpirationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StrikePriceColumn {
                get {
                    return this.columnStrikePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionTypeNameColumn {
                get {
                    return this.columnOptionTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionTypeIdColumn {
                get {
                    return this.columnOptionTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeNumberColumn {
                get {
                    return this.columnTradeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubAcctNameColumn {
                get {
                    return this.columnSubAcctName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeVolumeColumn {
                get {
                    return this.columnTradeVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeDateColumn {
                get {
                    return this.columnOpeningTradeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeIdColumn {
                get {
                    return this.columnOpeningTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeTypeNameColumn {
                get {
                    return this.columnOpeningTradeTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradePriceColumn {
                get {
                    return this.columnOpeningTradePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTotalPriceColumn {
                get {
                    return this.columnOpeningTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeMediumNameColumn {
                get {
                    return this.columnOpeningTradeMediumName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentPriceColumn {
                get {
                    return this.columnCurrentPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarketValueColumn {
                get {
                    return this.columnMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GainOrLossColumn {
                get {
                    return this.columnGainOrLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceOverrideDateColumn {
                get {
                    return this.columnPriceOverrideDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceOverrideUserColumn {
                get {
                    return this.columnPriceOverrideUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceOverrideFlagColumn {
                get {
                    return this.columnPriceOverrideFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalPriceColumn {
                get {
                    return this.columnOriginalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionIdColumn {
                get {
                    return this.columnOptionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BloombergSymbolColumn {
                get {
                    return this.columnBloombergSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningUnitCostColumn {
                get {
                    return this.columnOpeningUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningStrategyColumn {
                get {
                    return this.columnOpeningStrategy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedIndexOptionGainsRow this[int index] {
                get {
                    return ((UnrealizedIndexOptionGainsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UnrealizedIndexOptionGainsRowChangeEventHandler UnrealizedIndexOptionGainsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UnrealizedIndexOptionGainsRowChangeEventHandler UnrealizedIndexOptionGainsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UnrealizedIndexOptionGainsRowChangeEventHandler UnrealizedIndexOptionGainsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UnrealizedIndexOptionGainsRowChangeEventHandler UnrealizedIndexOptionGainsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddUnrealizedIndexOptionGainsRow(UnrealizedIndexOptionGainsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedIndexOptionGainsRow AddUnrealizedIndexOptionGainsRow(
                        string UnderlyingSymbol, 
                        string OptionSymbol, 
                        System.DateTime ExpirationDate, 
                        double StrikePrice, 
                        string OptionTypeName, 
                        short OptionTypeId, 
                        short TradeNumber, 
                        string SubAcctName, 
                        double TradeVolume, 
                        System.DateTime OpeningTradeDate, 
                        int OpeningTradeId, 
                        string OpeningTradeTypeName, 
                        double OpeningTradePrice, 
                        double OpeningTotalPrice, 
                        string OpeningTradeMediumName, 
                        double CurrentPrice, 
                        double MarketValue, 
                        double GainOrLoss, 
                        System.DateTime PriceOverrideDate, 
                        string PriceOverrideUser, 
                        string PriceOverrideFlag, 
                        double OriginalPrice, 
                        int OptionId, 
                        string BloombergSymbol, 
                        double OpeningUnitCost, 
                        string OpeningStrategy) {
                UnrealizedIndexOptionGainsRow rowUnrealizedIndexOptionGainsRow = ((UnrealizedIndexOptionGainsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UnderlyingSymbol,
                        OptionSymbol,
                        ExpirationDate,
                        StrikePrice,
                        OptionTypeName,
                        OptionTypeId,
                        TradeNumber,
                        SubAcctName,
                        TradeVolume,
                        OpeningTradeDate,
                        OpeningTradeId,
                        OpeningTradeTypeName,
                        OpeningTradePrice,
                        OpeningTotalPrice,
                        OpeningTradeMediumName,
                        CurrentPrice,
                        MarketValue,
                        GainOrLoss,
                        PriceOverrideDate,
                        PriceOverrideUser,
                        PriceOverrideFlag,
                        OriginalPrice,
                        OptionId,
                        BloombergSymbol,
                        OpeningUnitCost,
                        OpeningStrategy};
                rowUnrealizedIndexOptionGainsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUnrealizedIndexOptionGainsRow);
                return rowUnrealizedIndexOptionGainsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedIndexOptionGainsRow AddUnrealizedIndexOptionGainsRow(
                        string UnderlyingSymbol, 
                        string OptionSymbol, 
                        System.DateTime ExpirationDate, 
                        double StrikePrice, 
                        string OptionTypeName, 
                        short OptionTypeId, 
                        short TradeNumber, 
                        string SubAcctName, 
                        double TradeVolume, 
                        System.DateTime OpeningTradeDate, 
                        int OpeningTradeId, 
                        string OpeningTradeTypeName, 
                        double OpeningTradePrice, 
                        double OpeningTotalPrice, 
                        string OpeningTradeMediumName, 
                        double CurrentPrice, 
                        double MarketValue, 
                        double GainOrLoss, 
                        System.DateTime PriceOverrideDate, 
                        string PriceOverrideUser, 
                        double OriginalPrice, 
                        int OptionId, 
                        string BloombergSymbol, 
                        double OpeningUnitCost, 
                        string OpeningStrategy) {
                UnrealizedIndexOptionGainsRow rowUnrealizedIndexOptionGainsRow = ((UnrealizedIndexOptionGainsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UnderlyingSymbol,
                        OptionSymbol,
                        ExpirationDate,
                        StrikePrice,
                        OptionTypeName,
                        OptionTypeId,
                        TradeNumber,
                        SubAcctName,
                        TradeVolume,
                        OpeningTradeDate,
                        OpeningTradeId,
                        OpeningTradeTypeName,
                        OpeningTradePrice,
                        OpeningTotalPrice,
                        OpeningTradeMediumName,
                        CurrentPrice,
                        MarketValue,
                        GainOrLoss,
                        PriceOverrideDate,
                        PriceOverrideUser,
                        null,
                        OriginalPrice,
                        OptionId,
                        BloombergSymbol,
                        OpeningUnitCost,
                        OpeningStrategy};
                rowUnrealizedIndexOptionGainsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUnrealizedIndexOptionGainsRow);
                return rowUnrealizedIndexOptionGainsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UnrealizedIndexOptionGainsDataTable cln = ((UnrealizedIndexOptionGainsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UnrealizedIndexOptionGainsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnUnderlyingSymbol = base.Columns["UnderlyingSymbol"];
                this.columnOptionSymbol = base.Columns["OptionSymbol"];
                this.columnExpirationDate = base.Columns["ExpirationDate"];
                this.columnStrikePrice = base.Columns["StrikePrice"];
                this.columnOptionTypeName = base.Columns["OptionTypeName"];
                this.columnOptionTypeId = base.Columns["OptionTypeId"];
                this.columnTradeNumber = base.Columns["TradeNumber"];
                this.columnSubAcctName = base.Columns["SubAcctName"];
                this.columnTradeVolume = base.Columns["TradeVolume"];
                this.columnOpeningTradeDate = base.Columns["OpeningTradeDate"];
                this.columnOpeningTradeId = base.Columns["OpeningTradeId"];
                this.columnOpeningTradeTypeName = base.Columns["OpeningTradeTypeName"];
                this.columnOpeningTradePrice = base.Columns["OpeningTradePrice"];
                this.columnOpeningTotalPrice = base.Columns["OpeningTotalPrice"];
                this.columnOpeningTradeMediumName = base.Columns["OpeningTradeMediumName"];
                this.columnCurrentPrice = base.Columns["CurrentPrice"];
                this.columnMarketValue = base.Columns["MarketValue"];
                this.columnGainOrLoss = base.Columns["GainOrLoss"];
                this.columnPriceOverrideDate = base.Columns["PriceOverrideDate"];
                this.columnPriceOverrideUser = base.Columns["PriceOverrideUser"];
                this.columnPriceOverrideFlag = base.Columns["PriceOverrideFlag"];
                this.columnOriginalPrice = base.Columns["OriginalPrice"];
                this.columnOptionId = base.Columns["OptionId"];
                this.columnBloombergSymbol = base.Columns["BloombergSymbol"];
                this.columnOpeningUnitCost = base.Columns["OpeningUnitCost"];
                this.columnOpeningStrategy = base.Columns["OpeningStrategy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnUnderlyingSymbol = new global::System.Data.DataColumn("UnderlyingSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnderlyingSymbol);
                this.columnOptionSymbol = new global::System.Data.DataColumn("OptionSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionSymbol);
                this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirationDate);
                this.columnStrikePrice = new global::System.Data.DataColumn("StrikePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrikePrice);
                this.columnOptionTypeName = new global::System.Data.DataColumn("OptionTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionTypeName);
                this.columnOptionTypeId = new global::System.Data.DataColumn("OptionTypeId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionTypeId);
                this.columnTradeNumber = new global::System.Data.DataColumn("TradeNumber", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeNumber);
                this.columnSubAcctName = new global::System.Data.DataColumn("SubAcctName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubAcctName);
                this.columnTradeVolume = new global::System.Data.DataColumn("TradeVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeVolume);
                this.columnOpeningTradeDate = new global::System.Data.DataColumn("OpeningTradeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeDate);
                this.columnOpeningTradeId = new global::System.Data.DataColumn("OpeningTradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeId);
                this.columnOpeningTradeTypeName = new global::System.Data.DataColumn("OpeningTradeTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeTypeName);
                this.columnOpeningTradePrice = new global::System.Data.DataColumn("OpeningTradePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradePrice);
                this.columnOpeningTotalPrice = new global::System.Data.DataColumn("OpeningTotalPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTotalPrice);
                this.columnOpeningTradeMediumName = new global::System.Data.DataColumn("OpeningTradeMediumName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeMediumName);
                this.columnCurrentPrice = new global::System.Data.DataColumn("CurrentPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentPrice);
                this.columnMarketValue = new global::System.Data.DataColumn("MarketValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketValue);
                this.columnGainOrLoss = new global::System.Data.DataColumn("GainOrLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGainOrLoss);
                this.columnPriceOverrideDate = new global::System.Data.DataColumn("PriceOverrideDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceOverrideDate);
                this.columnPriceOverrideUser = new global::System.Data.DataColumn("PriceOverrideUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceOverrideUser);
                this.columnPriceOverrideFlag = new global::System.Data.DataColumn("PriceOverrideFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceOverrideFlag);
                this.columnOriginalPrice = new global::System.Data.DataColumn("OriginalPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalPrice);
                this.columnOptionId = new global::System.Data.DataColumn("OptionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionId);
                this.columnBloombergSymbol = new global::System.Data.DataColumn("BloombergSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloombergSymbol);
                this.columnOpeningUnitCost = new global::System.Data.DataColumn("OpeningUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningUnitCost);
                this.columnOpeningStrategy = new global::System.Data.DataColumn("OpeningStrategy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningStrategy);
                this.columnUnderlyingSymbol.MaxLength = 10;
                this.columnOptionSymbol.MaxLength = 10;
                this.columnOptionTypeName.MaxLength = 10;
                this.columnSubAcctName.MaxLength = 80;
                this.columnOpeningTradeTypeName.MaxLength = 80;
                this.columnOpeningTradeMediumName.MaxLength = 80;
                this.columnMarketValue.ReadOnly = true;
                this.columnGainOrLoss.ReadOnly = true;
                this.columnPriceOverrideUser.MaxLength = 50;
                this.columnPriceOverrideFlag.ReadOnly = true;
                this.columnPriceOverrideFlag.DefaultValue = ((string)("\'\'"));
                this.columnOriginalPrice.ReadOnly = true;
                this.columnBloombergSymbol.ReadOnly = true;
                this.columnBloombergSymbol.MaxLength = 80;
                this.columnOpeningStrategy.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedIndexOptionGainsRow NewUnrealizedIndexOptionGainsRow() {
                return ((UnrealizedIndexOptionGainsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UnrealizedIndexOptionGainsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UnrealizedIndexOptionGainsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitExpressions() {
                this.PriceOverrideFlagColumn.Expression = "iif(PriceOverrideDate IS NULL,\'\',\'*\')";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UnrealizedIndexOptionGainsRowChanged != null)) {
                    this.UnrealizedIndexOptionGainsRowChanged(this, new UnrealizedIndexOptionGainsRowChangeEvent(((UnrealizedIndexOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UnrealizedIndexOptionGainsRowChanging != null)) {
                    this.UnrealizedIndexOptionGainsRowChanging(this, new UnrealizedIndexOptionGainsRowChangeEvent(((UnrealizedIndexOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UnrealizedIndexOptionGainsRowDeleted != null)) {
                    this.UnrealizedIndexOptionGainsRowDeleted(this, new UnrealizedIndexOptionGainsRowChangeEvent(((UnrealizedIndexOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UnrealizedIndexOptionGainsRowDeleting != null)) {
                    this.UnrealizedIndexOptionGainsRowDeleting(this, new UnrealizedIndexOptionGainsRowChangeEvent(((UnrealizedIndexOptionGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveUnrealizedIndexOptionGainsRow(UnrealizedIndexOptionGainsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UnrealizedIndexOptionGainsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TaxlotSummaryReportDataTable : global::System.Data.TypedTableBase<TaxlotSummaryReportRow> {
            
            private global::System.Data.DataColumn columnInstrumentType;
            
            private global::System.Data.DataColumn columnSubAcctName;
            
            private global::System.Data.DataColumn columnSymbol;
            
            private global::System.Data.DataColumn columnExpirationDate;
            
            private global::System.Data.DataColumn columnStrikePrice;
            
            private global::System.Data.DataColumn columnOptionTypeName;
            
            private global::System.Data.DataColumn columnStartingUnrealizedGainLoss;
            
            private global::System.Data.DataColumn columnEndingUnrealizedGainLoss;
            
            private global::System.Data.DataColumn columnChangeInUnrealizedGainLoss;
            
            private global::System.Data.DataColumn columnRealizedGainLoss;
            
            private global::System.Data.DataColumn columnTotalGainLoss;
            
            private global::System.Data.DataColumn columnExpirationDateString;
            
            private global::System.Data.DataColumn columnStrikePriceString;
            
            private global::System.Data.DataColumn columnUnderlying;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxlotSummaryReportDataTable() {
                this.TableName = "TaxlotSummaryReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TaxlotSummaryReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TaxlotSummaryReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InstrumentTypeColumn {
                get {
                    return this.columnInstrumentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubAcctNameColumn {
                get {
                    return this.columnSubAcctName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SymbolColumn {
                get {
                    return this.columnSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpirationDateColumn {
                get {
                    return this.columnExpirationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StrikePriceColumn {
                get {
                    return this.columnStrikePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionTypeNameColumn {
                get {
                    return this.columnOptionTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StartingUnrealizedGainLossColumn {
                get {
                    return this.columnStartingUnrealizedGainLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EndingUnrealizedGainLossColumn {
                get {
                    return this.columnEndingUnrealizedGainLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChangeInUnrealizedGainLossColumn {
                get {
                    return this.columnChangeInUnrealizedGainLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RealizedGainLossColumn {
                get {
                    return this.columnRealizedGainLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalGainLossColumn {
                get {
                    return this.columnTotalGainLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpirationDateStringColumn {
                get {
                    return this.columnExpirationDateString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StrikePriceStringColumn {
                get {
                    return this.columnStrikePriceString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnderlyingColumn {
                get {
                    return this.columnUnderlying;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxlotSummaryReportRow this[int index] {
                get {
                    return ((TaxlotSummaryReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TaxlotSummaryReportRowChangeEventHandler TaxlotSummaryReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TaxlotSummaryReportRowChangeEventHandler TaxlotSummaryReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TaxlotSummaryReportRowChangeEventHandler TaxlotSummaryReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TaxlotSummaryReportRowChangeEventHandler TaxlotSummaryReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTaxlotSummaryReportRow(TaxlotSummaryReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxlotSummaryReportRow AddTaxlotSummaryReportRow(int InstrumentType, string SubAcctName, string Symbol, System.DateTime ExpirationDate, double StrikePrice, string OptionTypeName, double StartingUnrealizedGainLoss, double EndingUnrealizedGainLoss, double ChangeInUnrealizedGainLoss, double RealizedGainLoss, double TotalGainLoss, string ExpirationDateString, string StrikePriceString, string Underlying) {
                TaxlotSummaryReportRow rowTaxlotSummaryReportRow = ((TaxlotSummaryReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        InstrumentType,
                        SubAcctName,
                        Symbol,
                        ExpirationDate,
                        StrikePrice,
                        OptionTypeName,
                        StartingUnrealizedGainLoss,
                        EndingUnrealizedGainLoss,
                        ChangeInUnrealizedGainLoss,
                        RealizedGainLoss,
                        TotalGainLoss,
                        ExpirationDateString,
                        StrikePriceString,
                        Underlying};
                rowTaxlotSummaryReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTaxlotSummaryReportRow);
                return rowTaxlotSummaryReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TaxlotSummaryReportDataTable cln = ((TaxlotSummaryReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TaxlotSummaryReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnInstrumentType = base.Columns["InstrumentType"];
                this.columnSubAcctName = base.Columns["SubAcctName"];
                this.columnSymbol = base.Columns["Symbol"];
                this.columnExpirationDate = base.Columns["ExpirationDate"];
                this.columnStrikePrice = base.Columns["StrikePrice"];
                this.columnOptionTypeName = base.Columns["OptionTypeName"];
                this.columnStartingUnrealizedGainLoss = base.Columns["StartingUnrealizedGainLoss"];
                this.columnEndingUnrealizedGainLoss = base.Columns["EndingUnrealizedGainLoss"];
                this.columnChangeInUnrealizedGainLoss = base.Columns["ChangeInUnrealizedGainLoss"];
                this.columnRealizedGainLoss = base.Columns["RealizedGainLoss"];
                this.columnTotalGainLoss = base.Columns["TotalGainLoss"];
                this.columnExpirationDateString = base.Columns["ExpirationDateString"];
                this.columnStrikePriceString = base.Columns["StrikePriceString"];
                this.columnUnderlying = base.Columns["Underlying"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnInstrumentType = new global::System.Data.DataColumn("InstrumentType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstrumentType);
                this.columnSubAcctName = new global::System.Data.DataColumn("SubAcctName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubAcctName);
                this.columnSymbol = new global::System.Data.DataColumn("Symbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSymbol);
                this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirationDate);
                this.columnStrikePrice = new global::System.Data.DataColumn("StrikePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrikePrice);
                this.columnOptionTypeName = new global::System.Data.DataColumn("OptionTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionTypeName);
                this.columnStartingUnrealizedGainLoss = new global::System.Data.DataColumn("StartingUnrealizedGainLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartingUnrealizedGainLoss);
                this.columnEndingUnrealizedGainLoss = new global::System.Data.DataColumn("EndingUnrealizedGainLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndingUnrealizedGainLoss);
                this.columnChangeInUnrealizedGainLoss = new global::System.Data.DataColumn("ChangeInUnrealizedGainLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangeInUnrealizedGainLoss);
                this.columnRealizedGainLoss = new global::System.Data.DataColumn("RealizedGainLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealizedGainLoss);
                this.columnTotalGainLoss = new global::System.Data.DataColumn("TotalGainLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalGainLoss);
                this.columnExpirationDateString = new global::System.Data.DataColumn("ExpirationDateString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirationDateString);
                this.columnStrikePriceString = new global::System.Data.DataColumn("StrikePriceString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrikePriceString);
                this.columnUnderlying = new global::System.Data.DataColumn("Underlying", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnderlying);
                this.columnInstrumentType.ReadOnly = true;
                this.columnSubAcctName.ReadOnly = true;
                this.columnSubAcctName.MaxLength = 80;
                this.columnSymbol.ReadOnly = true;
                this.columnSymbol.MaxLength = 10;
                this.columnExpirationDate.ReadOnly = true;
                this.columnStrikePrice.ReadOnly = true;
                this.columnOptionTypeName.ReadOnly = true;
                this.columnOptionTypeName.MaxLength = 10;
                this.columnStartingUnrealizedGainLoss.ReadOnly = true;
                this.columnEndingUnrealizedGainLoss.ReadOnly = true;
                this.columnChangeInUnrealizedGainLoss.ReadOnly = true;
                this.columnRealizedGainLoss.ReadOnly = true;
                this.columnTotalGainLoss.ReadOnly = true;
                this.columnExpirationDateString.ReadOnly = true;
                this.columnExpirationDateString.MaxLength = 30;
                this.columnStrikePriceString.ReadOnly = true;
                this.columnStrikePriceString.MaxLength = 30;
                this.columnUnderlying.ReadOnly = true;
                this.columnUnderlying.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxlotSummaryReportRow NewTaxlotSummaryReportRow() {
                return ((TaxlotSummaryReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TaxlotSummaryReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TaxlotSummaryReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TaxlotSummaryReportRowChanged != null)) {
                    this.TaxlotSummaryReportRowChanged(this, new TaxlotSummaryReportRowChangeEvent(((TaxlotSummaryReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TaxlotSummaryReportRowChanging != null)) {
                    this.TaxlotSummaryReportRowChanging(this, new TaxlotSummaryReportRowChangeEvent(((TaxlotSummaryReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TaxlotSummaryReportRowDeleted != null)) {
                    this.TaxlotSummaryReportRowDeleted(this, new TaxlotSummaryReportRowChangeEvent(((TaxlotSummaryReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TaxlotSummaryReportRowDeleting != null)) {
                    this.TaxlotSummaryReportRowDeleting(this, new TaxlotSummaryReportRowChangeEvent(((TaxlotSummaryReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTaxlotSummaryReportRow(TaxlotSummaryReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TaxlotSummaryReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class p_get_importable_trademediaDataTable : global::System.Data.TypedTableBase<p_get_importable_trademediaRow> {
            
            private global::System.Data.DataColumn columnTradeMediumName;
            
            private global::System.Data.DataColumn columnTicketChargeApplied;
            
            private global::System.Data.DataColumn columnCommissionPerShare;
            
            private global::System.Data.DataColumn columnSECFeePerDollar;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_importable_trademediaDataTable() {
                this.TableName = "p_get_importable_trademedia";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal p_get_importable_trademediaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected p_get_importable_trademediaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeMediumNameColumn {
                get {
                    return this.columnTradeMediumName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TicketChargeAppliedColumn {
                get {
                    return this.columnTicketChargeApplied;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommissionPerShareColumn {
                get {
                    return this.columnCommissionPerShare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SECFeePerDollarColumn {
                get {
                    return this.columnSECFeePerDollar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_importable_trademediaRow this[int index] {
                get {
                    return ((p_get_importable_trademediaRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_importable_trademediaRowChangeEventHandler p_get_importable_trademediaRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_importable_trademediaRowChangeEventHandler p_get_importable_trademediaRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_importable_trademediaRowChangeEventHandler p_get_importable_trademediaRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_get_importable_trademediaRowChangeEventHandler p_get_importable_trademediaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addp_get_importable_trademediaRow(p_get_importable_trademediaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_importable_trademediaRow Addp_get_importable_trademediaRow(string TradeMediumName, bool TicketChargeApplied, double CommissionPerShare, double SECFeePerDollar) {
                p_get_importable_trademediaRow rowp_get_importable_trademediaRow = ((p_get_importable_trademediaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TradeMediumName,
                        TicketChargeApplied,
                        CommissionPerShare,
                        SECFeePerDollar};
                rowp_get_importable_trademediaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowp_get_importable_trademediaRow);
                return rowp_get_importable_trademediaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                p_get_importable_trademediaDataTable cln = ((p_get_importable_trademediaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new p_get_importable_trademediaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTradeMediumName = base.Columns["TradeMediumName"];
                this.columnTicketChargeApplied = base.Columns["TicketChargeApplied"];
                this.columnCommissionPerShare = base.Columns["CommissionPerShare"];
                this.columnSECFeePerDollar = base.Columns["SECFeePerDollar"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTradeMediumName = new global::System.Data.DataColumn("TradeMediumName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeMediumName);
                this.columnTicketChargeApplied = new global::System.Data.DataColumn("TicketChargeApplied", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTicketChargeApplied);
                this.columnCommissionPerShare = new global::System.Data.DataColumn("CommissionPerShare", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommissionPerShare);
                this.columnSECFeePerDollar = new global::System.Data.DataColumn("SECFeePerDollar", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECFeePerDollar);
                this.columnTradeMediumName.AllowDBNull = false;
                this.columnTradeMediumName.MaxLength = 80;
                this.columnTicketChargeApplied.AllowDBNull = false;
                this.columnCommissionPerShare.ReadOnly = true;
                this.columnSECFeePerDollar.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_importable_trademediaRow Newp_get_importable_trademediaRow() {
                return ((p_get_importable_trademediaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new p_get_importable_trademediaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(p_get_importable_trademediaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.p_get_importable_trademediaRowChanged != null)) {
                    this.p_get_importable_trademediaRowChanged(this, new p_get_importable_trademediaRowChangeEvent(((p_get_importable_trademediaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.p_get_importable_trademediaRowChanging != null)) {
                    this.p_get_importable_trademediaRowChanging(this, new p_get_importable_trademediaRowChangeEvent(((p_get_importable_trademediaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.p_get_importable_trademediaRowDeleted != null)) {
                    this.p_get_importable_trademediaRowDeleted(this, new p_get_importable_trademediaRowChangeEvent(((p_get_importable_trademediaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.p_get_importable_trademediaRowDeleting != null)) {
                    this.p_get_importable_trademediaRowDeleting(this, new p_get_importable_trademediaRowChangeEvent(((p_get_importable_trademediaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removep_get_importable_trademediaRow(p_get_importable_trademediaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "p_get_importable_trademediaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class p_generate_stock_daily_returns_reportDataTable : global::System.Data.TypedTableBase<p_generate_stock_daily_returns_reportRow> {
            
            private global::System.Data.DataColumn columnTRADE_DATE;
            
            private global::System.Data.DataColumn columnColumn1;
            
            private global::System.Data.DataColumn columnSTARTING_STOCK_PORTFOLIO_MARKET_VALUE;
            
            private global::System.Data.DataColumn _columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_;
            
            private global::System.Data.DataColumn _columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL;
            
            private global::System.Data.DataColumn _columnSTOCK_PORTFOLIO_SALES__INCL__COMM_;
            
            private global::System.Data.DataColumn columnENDING_STOCK_PORTFOLIO_MARKET_VALUE;
            
            private global::System.Data.DataColumn columnColumn2;
            
            private global::System.Data.DataColumn columnSTOCK_PORTFOLIO_RETURN;
            
            private global::System.Data.DataColumn columnColumn3;
            
            private global::System.Data.DataColumn _columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM;
            
            private global::System.Data.DataColumn _columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM;
            
            private global::System.Data.DataColumn _columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED;
            
            private global::System.Data.DataColumn _columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_;
            
            private global::System.Data.DataColumn columnDIVIDENDS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_generate_stock_daily_returns_reportDataTable() {
                this.TableName = "p_generate_stock_daily_returns_report";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal p_generate_stock_daily_returns_reportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected p_generate_stock_daily_returns_reportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRADE_DATEColumn {
                get {
                    return this.columnTRADE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Column1Column {
                get {
                    return this.columnColumn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STARTING_STOCK_PORTFOLIO_MARKET_VALUEColumn {
                get {
                    return this.columnSTARTING_STOCK_PORTFOLIO_MARKET_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _STOCK_PORTFOLIO_PURCHASES__INCL__COMM_Column {
                get {
                    return this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _STOCK_PORTFOLIO_GAIN_LOSS__TOTALColumn {
                get {
                    return this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _STOCK_PORTFOLIO_SALES__INCL__COMM_Column {
                get {
                    return this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENDING_STOCK_PORTFOLIO_MARKET_VALUEColumn {
                get {
                    return this.columnENDING_STOCK_PORTFOLIO_MARKET_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Column2Column {
                get {
                    return this.columnColumn2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STOCK_PORTFOLIO_RETURNColumn {
                get {
                    return this.columnSTOCK_PORTFOLIO_RETURN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Column3Column {
                get {
                    return this.columnColumn3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERMColumn {
                get {
                    return this._columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERMColumn {
                get {
                    return this._columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZEDColumn {
                get {
                    return this._columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_Column {
                get {
                    return this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIVIDENDSColumn {
                get {
                    return this.columnDIVIDENDS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_generate_stock_daily_returns_reportRow this[int index] {
                get {
                    return ((p_generate_stock_daily_returns_reportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_generate_stock_daily_returns_reportRowChangeEventHandler p_generate_stock_daily_returns_reportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_generate_stock_daily_returns_reportRowChangeEventHandler p_generate_stock_daily_returns_reportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_generate_stock_daily_returns_reportRowChangeEventHandler p_generate_stock_daily_returns_reportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_generate_stock_daily_returns_reportRowChangeEventHandler p_generate_stock_daily_returns_reportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addp_generate_stock_daily_returns_reportRow(p_generate_stock_daily_returns_reportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_generate_stock_daily_returns_reportRow Addp_generate_stock_daily_returns_reportRow(System.DateTime TRADE_DATE, string Column1, decimal STARTING_STOCK_PORTFOLIO_MARKET_VALUE, decimal _STOCK_PORTFOLIO_PURCHASES__INCL__COMM_, decimal _STOCK_PORTFOLIO_GAIN_LOSS__TOTAL, decimal _STOCK_PORTFOLIO_SALES__INCL__COMM_, decimal ENDING_STOCK_PORTFOLIO_MARKET_VALUE, string Column2, decimal STOCK_PORTFOLIO_RETURN, string Column3, decimal _STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM, decimal _STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM, decimal _STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED, decimal _STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_, decimal DIVIDENDS) {
                p_generate_stock_daily_returns_reportRow rowp_generate_stock_daily_returns_reportRow = ((p_generate_stock_daily_returns_reportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TRADE_DATE,
                        Column1,
                        STARTING_STOCK_PORTFOLIO_MARKET_VALUE,
                        _STOCK_PORTFOLIO_PURCHASES__INCL__COMM_,
                        _STOCK_PORTFOLIO_GAIN_LOSS__TOTAL,
                        _STOCK_PORTFOLIO_SALES__INCL__COMM_,
                        ENDING_STOCK_PORTFOLIO_MARKET_VALUE,
                        Column2,
                        STOCK_PORTFOLIO_RETURN,
                        Column3,
                        _STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM,
                        _STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM,
                        _STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED,
                        _STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_,
                        DIVIDENDS};
                rowp_generate_stock_daily_returns_reportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowp_generate_stock_daily_returns_reportRow);
                return rowp_generate_stock_daily_returns_reportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                p_generate_stock_daily_returns_reportDataTable cln = ((p_generate_stock_daily_returns_reportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new p_generate_stock_daily_returns_reportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTRADE_DATE = base.Columns["TRADE DATE"];
                this.columnColumn1 = base.Columns["Column1"];
                this.columnSTARTING_STOCK_PORTFOLIO_MARKET_VALUE = base.Columns["STARTING STOCK PORTFOLIO MARKET VALUE"];
                this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_ = base.Columns["STOCK PORTFOLIO PURCHASES (INCL_ COMM)"];
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL = base.Columns["STOCK PORTFOLIO GAIN(LOSS) TOTAL"];
                this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_ = base.Columns["STOCK PORTFOLIO SALES (INCL_ COMM)"];
                this.columnENDING_STOCK_PORTFOLIO_MARKET_VALUE = base.Columns["ENDING STOCK PORTFOLIO MARKET VALUE"];
                this.columnColumn2 = base.Columns["Column2"];
                this.columnSTOCK_PORTFOLIO_RETURN = base.Columns["STOCK PORTFOLIO RETURN"];
                this.columnColumn3 = base.Columns["Column3"];
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM = base.Columns["STOCK PORTFOLIO GAIN(LOSS) SHORT-TERM"];
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM = base.Columns["STOCK PORTFOLIO GAIN(LOSS) LONG-TERM"];
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED = base.Columns["STOCK PORTFOLIO GAIN(LOSS) UNREALIZED"];
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_ = base.Columns["STOCK PORTFOLIO GAIN(LOSS) TOTAL "];
                this.columnDIVIDENDS = base.Columns["DIVIDENDS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTRADE_DATE = new global::System.Data.DataColumn("TRADE DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRADE_DATE);
                this.columnColumn1 = new global::System.Data.DataColumn("Column1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn1);
                this.columnSTARTING_STOCK_PORTFOLIO_MARKET_VALUE = new global::System.Data.DataColumn("STARTING STOCK PORTFOLIO MARKET VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTARTING_STOCK_PORTFOLIO_MARKET_VALUE);
                this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_ = new global::System.Data.DataColumn("STOCK PORTFOLIO PURCHASES (INCL_ COMM)", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_");
                this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_.ExtendedProperties.Add("Generator_UserColumnName", "STOCK PORTFOLIO PURCHASES (INCL_ COMM)");
                base.Columns.Add(this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL = new global::System.Data.DataColumn("STOCK PORTFOLIO GAIN(LOSS) TOTAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL");
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL.ExtendedProperties.Add("Generator_UserColumnName", "STOCK PORTFOLIO GAIN(LOSS) TOTAL");
                base.Columns.Add(this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL);
                this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_ = new global::System.Data.DataColumn("STOCK PORTFOLIO SALES (INCL_ COMM)", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSTOCK_PORTFOLIO_SALES__INCL__COMM_");
                this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_.ExtendedProperties.Add("Generator_UserColumnName", "STOCK PORTFOLIO SALES (INCL_ COMM)");
                base.Columns.Add(this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_);
                this.columnENDING_STOCK_PORTFOLIO_MARKET_VALUE = new global::System.Data.DataColumn("ENDING STOCK PORTFOLIO MARKET VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENDING_STOCK_PORTFOLIO_MARKET_VALUE);
                this.columnColumn2 = new global::System.Data.DataColumn("Column2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn2);
                this.columnSTOCK_PORTFOLIO_RETURN = new global::System.Data.DataColumn("STOCK PORTFOLIO RETURN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_PORTFOLIO_RETURN);
                this.columnColumn3 = new global::System.Data.DataColumn("Column3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn3);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM = new global::System.Data.DataColumn("STOCK PORTFOLIO GAIN(LOSS) SHORT-TERM", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM");
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM.ExtendedProperties.Add("Generator_UserColumnName", "STOCK PORTFOLIO GAIN(LOSS) SHORT-TERM");
                base.Columns.Add(this._columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM = new global::System.Data.DataColumn("STOCK PORTFOLIO GAIN(LOSS) LONG-TERM", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM");
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM.ExtendedProperties.Add("Generator_UserColumnName", "STOCK PORTFOLIO GAIN(LOSS) LONG-TERM");
                base.Columns.Add(this._columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED = new global::System.Data.DataColumn("STOCK PORTFOLIO GAIN(LOSS) UNREALIZED", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED");
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED.ExtendedProperties.Add("Generator_UserColumnName", "STOCK PORTFOLIO GAIN(LOSS) UNREALIZED");
                base.Columns.Add(this._columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_ = new global::System.Data.DataColumn("STOCK PORTFOLIO GAIN(LOSS) TOTAL ", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_");
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_.ExtendedProperties.Add("Generator_UserColumnName", "STOCK PORTFOLIO GAIN(LOSS) TOTAL ");
                base.Columns.Add(this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_);
                this.columnDIVIDENDS = new global::System.Data.DataColumn("DIVIDENDS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVIDENDS);
                this.columnTRADE_DATE.AllowDBNull = false;
                this.columnColumn1.ReadOnly = true;
                this.columnColumn1.MaxLength = 1;
                this.columnSTARTING_STOCK_PORTFOLIO_MARKET_VALUE.ReadOnly = true;
                this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_.ReadOnly = true;
                this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_.Caption = "STOCK PORTFOLIO PURCHASES (INCL. COMM)";
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL.ReadOnly = true;
                this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_.ReadOnly = true;
                this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_.Caption = "STOCK PORTFOLIO SALES (INCL. COMM)";
                this.columnENDING_STOCK_PORTFOLIO_MARKET_VALUE.ReadOnly = true;
                this.columnColumn2.ReadOnly = true;
                this.columnColumn2.MaxLength = 1;
                this.columnColumn3.ReadOnly = true;
                this.columnColumn3.MaxLength = 1;
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM.AllowDBNull = false;
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM.AllowDBNull = false;
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED.ReadOnly = true;
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_.ReadOnly = true;
                this.columnDIVIDENDS.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_generate_stock_daily_returns_reportRow Newp_generate_stock_daily_returns_reportRow() {
                return ((p_generate_stock_daily_returns_reportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new p_generate_stock_daily_returns_reportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(p_generate_stock_daily_returns_reportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.p_generate_stock_daily_returns_reportRowChanged != null)) {
                    this.p_generate_stock_daily_returns_reportRowChanged(this, new p_generate_stock_daily_returns_reportRowChangeEvent(((p_generate_stock_daily_returns_reportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.p_generate_stock_daily_returns_reportRowChanging != null)) {
                    this.p_generate_stock_daily_returns_reportRowChanging(this, new p_generate_stock_daily_returns_reportRowChangeEvent(((p_generate_stock_daily_returns_reportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.p_generate_stock_daily_returns_reportRowDeleted != null)) {
                    this.p_generate_stock_daily_returns_reportRowDeleted(this, new p_generate_stock_daily_returns_reportRowChangeEvent(((p_generate_stock_daily_returns_reportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.p_generate_stock_daily_returns_reportRowDeleting != null)) {
                    this.p_generate_stock_daily_returns_reportRowDeleting(this, new p_generate_stock_daily_returns_reportRowChangeEvent(((p_generate_stock_daily_returns_reportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removep_generate_stock_daily_returns_reportRow(p_generate_stock_daily_returns_reportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "p_generate_stock_daily_returns_reportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class p_generate_stock_monthly_returns_reportDataTable : global::System.Data.TypedTableBase<p_generate_stock_monthly_returns_reportRow> {
            
            private global::System.Data.DataColumn columnMONTH;
            
            private global::System.Data.DataColumn columnYEAR;
            
            private global::System.Data.DataColumn columnSTARTING_STOCK_PORTFOLIO_MARKET_VALUE;
            
            private global::System.Data.DataColumn _columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_;
            
            private global::System.Data.DataColumn _columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL;
            
            private global::System.Data.DataColumn _columnSTOCK_PORTFOLIO_SALES__INCL__COMM_;
            
            private global::System.Data.DataColumn columnENDING_STOCK_PORTFOLIO_MARKET_VALUE;
            
            private global::System.Data.DataColumn columnColumn1;
            
            private global::System.Data.DataColumn columnSTOCK_PORTFOLIO_RETURN;
            
            private global::System.Data.DataColumn columnColumn2;
            
            private global::System.Data.DataColumn _columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM;
            
            private global::System.Data.DataColumn _columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM;
            
            private global::System.Data.DataColumn _columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED;
            
            private global::System.Data.DataColumn _columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_;
            
            private global::System.Data.DataColumn columnDIVIDENDS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_generate_stock_monthly_returns_reportDataTable() {
                this.TableName = "p_generate_stock_monthly_returns_report";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal p_generate_stock_monthly_returns_reportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected p_generate_stock_monthly_returns_reportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MONTHColumn {
                get {
                    return this.columnMONTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YEARColumn {
                get {
                    return this.columnYEAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STARTING_STOCK_PORTFOLIO_MARKET_VALUEColumn {
                get {
                    return this.columnSTARTING_STOCK_PORTFOLIO_MARKET_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _STOCK_PORTFOLIO_PURCHASES__INCL__COMM_Column {
                get {
                    return this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _STOCK_PORTFOLIO_GAIN_LOSS__TOTALColumn {
                get {
                    return this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _STOCK_PORTFOLIO_SALES__INCL__COMM_Column {
                get {
                    return this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENDING_STOCK_PORTFOLIO_MARKET_VALUEColumn {
                get {
                    return this.columnENDING_STOCK_PORTFOLIO_MARKET_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Column1Column {
                get {
                    return this.columnColumn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STOCK_PORTFOLIO_RETURNColumn {
                get {
                    return this.columnSTOCK_PORTFOLIO_RETURN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Column2Column {
                get {
                    return this.columnColumn2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERMColumn {
                get {
                    return this._columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERMColumn {
                get {
                    return this._columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZEDColumn {
                get {
                    return this._columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn _STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_Column {
                get {
                    return this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIVIDENDSColumn {
                get {
                    return this.columnDIVIDENDS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_generate_stock_monthly_returns_reportRow this[int index] {
                get {
                    return ((p_generate_stock_monthly_returns_reportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_generate_stock_monthly_returns_reportRowChangeEventHandler p_generate_stock_monthly_returns_reportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_generate_stock_monthly_returns_reportRowChangeEventHandler p_generate_stock_monthly_returns_reportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_generate_stock_monthly_returns_reportRowChangeEventHandler p_generate_stock_monthly_returns_reportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event p_generate_stock_monthly_returns_reportRowChangeEventHandler p_generate_stock_monthly_returns_reportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addp_generate_stock_monthly_returns_reportRow(p_generate_stock_monthly_returns_reportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_generate_stock_monthly_returns_reportRow Addp_generate_stock_monthly_returns_reportRow(string MONTH, string YEAR, decimal STARTING_STOCK_PORTFOLIO_MARKET_VALUE, decimal _STOCK_PORTFOLIO_PURCHASES__INCL__COMM_, decimal _STOCK_PORTFOLIO_GAIN_LOSS__TOTAL, decimal _STOCK_PORTFOLIO_SALES__INCL__COMM_, decimal ENDING_STOCK_PORTFOLIO_MARKET_VALUE, string Column1, decimal STOCK_PORTFOLIO_RETURN, string Column2, decimal _STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM, decimal _STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM, decimal _STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED, decimal _STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_, decimal DIVIDENDS) {
                p_generate_stock_monthly_returns_reportRow rowp_generate_stock_monthly_returns_reportRow = ((p_generate_stock_monthly_returns_reportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MONTH,
                        YEAR,
                        STARTING_STOCK_PORTFOLIO_MARKET_VALUE,
                        _STOCK_PORTFOLIO_PURCHASES__INCL__COMM_,
                        _STOCK_PORTFOLIO_GAIN_LOSS__TOTAL,
                        _STOCK_PORTFOLIO_SALES__INCL__COMM_,
                        ENDING_STOCK_PORTFOLIO_MARKET_VALUE,
                        Column1,
                        STOCK_PORTFOLIO_RETURN,
                        Column2,
                        _STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM,
                        _STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM,
                        _STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED,
                        _STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_,
                        DIVIDENDS};
                rowp_generate_stock_monthly_returns_reportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowp_generate_stock_monthly_returns_reportRow);
                return rowp_generate_stock_monthly_returns_reportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                p_generate_stock_monthly_returns_reportDataTable cln = ((p_generate_stock_monthly_returns_reportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new p_generate_stock_monthly_returns_reportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMONTH = base.Columns["MONTH"];
                this.columnYEAR = base.Columns["YEAR"];
                this.columnSTARTING_STOCK_PORTFOLIO_MARKET_VALUE = base.Columns["STARTING STOCK PORTFOLIO MARKET VALUE"];
                this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_ = base.Columns["STOCK PORTFOLIO PURCHASES (INCL_ COMM)"];
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL = base.Columns["STOCK PORTFOLIO GAIN(LOSS) TOTAL"];
                this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_ = base.Columns["STOCK PORTFOLIO SALES (INCL_ COMM)"];
                this.columnENDING_STOCK_PORTFOLIO_MARKET_VALUE = base.Columns["ENDING STOCK PORTFOLIO MARKET VALUE"];
                this.columnColumn1 = base.Columns["Column1"];
                this.columnSTOCK_PORTFOLIO_RETURN = base.Columns["STOCK PORTFOLIO RETURN"];
                this.columnColumn2 = base.Columns["Column2"];
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM = base.Columns["STOCK PORTFOLIO GAIN(LOSS) SHORT-TERM"];
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM = base.Columns["STOCK PORTFOLIO GAIN(LOSS) LONG-TERM"];
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED = base.Columns["STOCK PORTFOLIO GAIN(LOSS) UNREALIZED"];
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_ = base.Columns["STOCK PORTFOLIO GAIN(LOSS) TOTAL "];
                this.columnDIVIDENDS = base.Columns["DIVIDENDS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMONTH = new global::System.Data.DataColumn("MONTH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMONTH);
                this.columnYEAR = new global::System.Data.DataColumn("YEAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYEAR);
                this.columnSTARTING_STOCK_PORTFOLIO_MARKET_VALUE = new global::System.Data.DataColumn("STARTING STOCK PORTFOLIO MARKET VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTARTING_STOCK_PORTFOLIO_MARKET_VALUE);
                this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_ = new global::System.Data.DataColumn("STOCK PORTFOLIO PURCHASES (INCL_ COMM)", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_");
                this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_.ExtendedProperties.Add("Generator_UserColumnName", "STOCK PORTFOLIO PURCHASES (INCL_ COMM)");
                base.Columns.Add(this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL = new global::System.Data.DataColumn("STOCK PORTFOLIO GAIN(LOSS) TOTAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL");
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL.ExtendedProperties.Add("Generator_UserColumnName", "STOCK PORTFOLIO GAIN(LOSS) TOTAL");
                base.Columns.Add(this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL);
                this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_ = new global::System.Data.DataColumn("STOCK PORTFOLIO SALES (INCL_ COMM)", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSTOCK_PORTFOLIO_SALES__INCL__COMM_");
                this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_.ExtendedProperties.Add("Generator_UserColumnName", "STOCK PORTFOLIO SALES (INCL_ COMM)");
                base.Columns.Add(this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_);
                this.columnENDING_STOCK_PORTFOLIO_MARKET_VALUE = new global::System.Data.DataColumn("ENDING STOCK PORTFOLIO MARKET VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENDING_STOCK_PORTFOLIO_MARKET_VALUE);
                this.columnColumn1 = new global::System.Data.DataColumn("Column1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn1);
                this.columnSTOCK_PORTFOLIO_RETURN = new global::System.Data.DataColumn("STOCK PORTFOLIO RETURN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_PORTFOLIO_RETURN);
                this.columnColumn2 = new global::System.Data.DataColumn("Column2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn2);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM = new global::System.Data.DataColumn("STOCK PORTFOLIO GAIN(LOSS) SHORT-TERM", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM");
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM.ExtendedProperties.Add("Generator_UserColumnName", "STOCK PORTFOLIO GAIN(LOSS) SHORT-TERM");
                base.Columns.Add(this._columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM = new global::System.Data.DataColumn("STOCK PORTFOLIO GAIN(LOSS) LONG-TERM", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM");
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM.ExtendedProperties.Add("Generator_UserColumnName", "STOCK PORTFOLIO GAIN(LOSS) LONG-TERM");
                base.Columns.Add(this._columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED = new global::System.Data.DataColumn("STOCK PORTFOLIO GAIN(LOSS) UNREALIZED", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED");
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED.ExtendedProperties.Add("Generator_UserColumnName", "STOCK PORTFOLIO GAIN(LOSS) UNREALIZED");
                base.Columns.Add(this._columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_ = new global::System.Data.DataColumn("STOCK PORTFOLIO GAIN(LOSS) TOTAL ", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_");
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_.ExtendedProperties.Add("Generator_UserColumnName", "STOCK PORTFOLIO GAIN(LOSS) TOTAL ");
                base.Columns.Add(this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_);
                this.columnDIVIDENDS = new global::System.Data.DataColumn("DIVIDENDS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVIDENDS);
                this.columnMONTH.ReadOnly = true;
                this.columnMONTH.MaxLength = 3;
                this.columnYEAR.ReadOnly = true;
                this.columnYEAR.MaxLength = 4;
                this.columnSTARTING_STOCK_PORTFOLIO_MARKET_VALUE.ReadOnly = true;
                this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_.ReadOnly = true;
                this._columnSTOCK_PORTFOLIO_PURCHASES__INCL__COMM_.Caption = "STOCK PORTFOLIO PURCHASES (INCL. COMM)";
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL.ReadOnly = true;
                this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_.ReadOnly = true;
                this._columnSTOCK_PORTFOLIO_SALES__INCL__COMM_.Caption = "STOCK PORTFOLIO SALES (INCL. COMM)";
                this.columnENDING_STOCK_PORTFOLIO_MARKET_VALUE.ReadOnly = true;
                this.columnColumn1.ReadOnly = true;
                this.columnColumn1.MaxLength = 1;
                this.columnSTOCK_PORTFOLIO_RETURN.ReadOnly = true;
                this.columnColumn2.ReadOnly = true;
                this.columnColumn2.MaxLength = 1;
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM.ReadOnly = true;
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM.ReadOnly = true;
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED.ReadOnly = true;
                this._columnSTOCK_PORTFOLIO_GAIN_LOSS__TOTAL_.ReadOnly = true;
                this.columnDIVIDENDS.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_generate_stock_monthly_returns_reportRow Newp_generate_stock_monthly_returns_reportRow() {
                return ((p_generate_stock_monthly_returns_reportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new p_generate_stock_monthly_returns_reportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(p_generate_stock_monthly_returns_reportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.p_generate_stock_monthly_returns_reportRowChanged != null)) {
                    this.p_generate_stock_monthly_returns_reportRowChanged(this, new p_generate_stock_monthly_returns_reportRowChangeEvent(((p_generate_stock_monthly_returns_reportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.p_generate_stock_monthly_returns_reportRowChanging != null)) {
                    this.p_generate_stock_monthly_returns_reportRowChanging(this, new p_generate_stock_monthly_returns_reportRowChangeEvent(((p_generate_stock_monthly_returns_reportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.p_generate_stock_monthly_returns_reportRowDeleted != null)) {
                    this.p_generate_stock_monthly_returns_reportRowDeleted(this, new p_generate_stock_monthly_returns_reportRowChangeEvent(((p_generate_stock_monthly_returns_reportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.p_generate_stock_monthly_returns_reportRowDeleting != null)) {
                    this.p_generate_stock_monthly_returns_reportRowDeleting(this, new p_generate_stock_monthly_returns_reportRowChangeEvent(((p_generate_stock_monthly_returns_reportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removep_generate_stock_monthly_returns_reportRow(p_generate_stock_monthly_returns_reportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "p_generate_stock_monthly_returns_reportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UnrealizedFuturesGainsDataTable : global::System.Data.TypedTableBase<UnrealizedFuturesGainsRow> {
            
            private global::System.Data.DataColumn columnFuturesSymbol;
            
            private global::System.Data.DataColumn columnMonth;
            
            private global::System.Data.DataColumn columnYear;
            
            private global::System.Data.DataColumn columnFuturesId;
            
            private global::System.Data.DataColumn columnTradeNumber;
            
            private global::System.Data.DataColumn columnSubAcctName;
            
            private global::System.Data.DataColumn columnTradeVolume;
            
            private global::System.Data.DataColumn columnOpeningTradeDate;
            
            private global::System.Data.DataColumn columnOpeningTradeId;
            
            private global::System.Data.DataColumn columnOpeningTradeTypeName;
            
            private global::System.Data.DataColumn columnOpeningTradePrice;
            
            private global::System.Data.DataColumn columnOpeningUnitCost;
            
            private global::System.Data.DataColumn columnOpeningTotalPrice;
            
            private global::System.Data.DataColumn columnOpeningTradeMediumName;
            
            private global::System.Data.DataColumn columnCurrentPrice;
            
            private global::System.Data.DataColumn columnMarketValue;
            
            private global::System.Data.DataColumn columnGainOrLoss;
            
            private global::System.Data.DataColumn columnPriceOverrideDate;
            
            private global::System.Data.DataColumn columnPriceOverrideUser;
            
            private global::System.Data.DataColumn columnOriginalPrice;
            
            private global::System.Data.DataColumn columnPriceOverrideFlag;
            
            private global::System.Data.DataColumn columnOpeningStrategy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedFuturesGainsDataTable() : 
                    this(false) {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedFuturesGainsDataTable(bool initExpressions) {
                this.TableName = "UnrealizedFuturesGains";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UnrealizedFuturesGainsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected UnrealizedFuturesGainsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FuturesSymbolColumn {
                get {
                    return this.columnFuturesSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MonthColumn {
                get {
                    return this.columnMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YearColumn {
                get {
                    return this.columnYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FuturesIdColumn {
                get {
                    return this.columnFuturesId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeNumberColumn {
                get {
                    return this.columnTradeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubAcctNameColumn {
                get {
                    return this.columnSubAcctName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeVolumeColumn {
                get {
                    return this.columnTradeVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeDateColumn {
                get {
                    return this.columnOpeningTradeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeIdColumn {
                get {
                    return this.columnOpeningTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeTypeNameColumn {
                get {
                    return this.columnOpeningTradeTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradePriceColumn {
                get {
                    return this.columnOpeningTradePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningUnitCostColumn {
                get {
                    return this.columnOpeningUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTotalPriceColumn {
                get {
                    return this.columnOpeningTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeMediumNameColumn {
                get {
                    return this.columnOpeningTradeMediumName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentPriceColumn {
                get {
                    return this.columnCurrentPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarketValueColumn {
                get {
                    return this.columnMarketValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GainOrLossColumn {
                get {
                    return this.columnGainOrLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceOverrideDateColumn {
                get {
                    return this.columnPriceOverrideDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceOverrideUserColumn {
                get {
                    return this.columnPriceOverrideUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalPriceColumn {
                get {
                    return this.columnOriginalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceOverrideFlagColumn {
                get {
                    return this.columnPriceOverrideFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningStrategyColumn {
                get {
                    return this.columnOpeningStrategy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedFuturesGainsRow this[int index] {
                get {
                    return ((UnrealizedFuturesGainsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UnrealizedFuturesGainsRowChangeEventHandler UnrealizedFuturesGainsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UnrealizedFuturesGainsRowChangeEventHandler UnrealizedFuturesGainsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UnrealizedFuturesGainsRowChangeEventHandler UnrealizedFuturesGainsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UnrealizedFuturesGainsRowChangeEventHandler UnrealizedFuturesGainsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddUnrealizedFuturesGainsRow(UnrealizedFuturesGainsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedFuturesGainsRow AddUnrealizedFuturesGainsRow(
                        string FuturesSymbol, 
                        int Month, 
                        int Year, 
                        int FuturesId, 
                        short TradeNumber, 
                        string SubAcctName, 
                        double TradeVolume, 
                        System.DateTime OpeningTradeDate, 
                        int OpeningTradeId, 
                        string OpeningTradeTypeName, 
                        double OpeningTradePrice, 
                        double OpeningUnitCost, 
                        double OpeningTotalPrice, 
                        string OpeningTradeMediumName, 
                        double CurrentPrice, 
                        double MarketValue, 
                        double GainOrLoss, 
                        System.DateTime PriceOverrideDate, 
                        string PriceOverrideUser, 
                        double OriginalPrice, 
                        string PriceOverrideFlag, 
                        string OpeningStrategy) {
                UnrealizedFuturesGainsRow rowUnrealizedFuturesGainsRow = ((UnrealizedFuturesGainsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FuturesSymbol,
                        Month,
                        Year,
                        FuturesId,
                        TradeNumber,
                        SubAcctName,
                        TradeVolume,
                        OpeningTradeDate,
                        OpeningTradeId,
                        OpeningTradeTypeName,
                        OpeningTradePrice,
                        OpeningUnitCost,
                        OpeningTotalPrice,
                        OpeningTradeMediumName,
                        CurrentPrice,
                        MarketValue,
                        GainOrLoss,
                        PriceOverrideDate,
                        PriceOverrideUser,
                        OriginalPrice,
                        PriceOverrideFlag,
                        OpeningStrategy};
                rowUnrealizedFuturesGainsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUnrealizedFuturesGainsRow);
                return rowUnrealizedFuturesGainsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedFuturesGainsRow AddUnrealizedFuturesGainsRow(
                        string FuturesSymbol, 
                        int Month, 
                        int Year, 
                        int FuturesId, 
                        short TradeNumber, 
                        string SubAcctName, 
                        double TradeVolume, 
                        System.DateTime OpeningTradeDate, 
                        int OpeningTradeId, 
                        string OpeningTradeTypeName, 
                        double OpeningTradePrice, 
                        double OpeningUnitCost, 
                        double OpeningTotalPrice, 
                        string OpeningTradeMediumName, 
                        double CurrentPrice, 
                        double MarketValue, 
                        double GainOrLoss, 
                        System.DateTime PriceOverrideDate, 
                        string PriceOverrideUser, 
                        double OriginalPrice, 
                        string OpeningStrategy) {
                UnrealizedFuturesGainsRow rowUnrealizedFuturesGainsRow = ((UnrealizedFuturesGainsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FuturesSymbol,
                        Month,
                        Year,
                        FuturesId,
                        TradeNumber,
                        SubAcctName,
                        TradeVolume,
                        OpeningTradeDate,
                        OpeningTradeId,
                        OpeningTradeTypeName,
                        OpeningTradePrice,
                        OpeningUnitCost,
                        OpeningTotalPrice,
                        OpeningTradeMediumName,
                        CurrentPrice,
                        MarketValue,
                        GainOrLoss,
                        PriceOverrideDate,
                        PriceOverrideUser,
                        OriginalPrice,
                        null,
                        OpeningStrategy};
                rowUnrealizedFuturesGainsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUnrealizedFuturesGainsRow);
                return rowUnrealizedFuturesGainsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UnrealizedFuturesGainsDataTable cln = ((UnrealizedFuturesGainsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UnrealizedFuturesGainsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFuturesSymbol = base.Columns["FuturesSymbol"];
                this.columnMonth = base.Columns["Month"];
                this.columnYear = base.Columns["Year"];
                this.columnFuturesId = base.Columns["FuturesId"];
                this.columnTradeNumber = base.Columns["TradeNumber"];
                this.columnSubAcctName = base.Columns["SubAcctName"];
                this.columnTradeVolume = base.Columns["TradeVolume"];
                this.columnOpeningTradeDate = base.Columns["OpeningTradeDate"];
                this.columnOpeningTradeId = base.Columns["OpeningTradeId"];
                this.columnOpeningTradeTypeName = base.Columns["OpeningTradeTypeName"];
                this.columnOpeningTradePrice = base.Columns["OpeningTradePrice"];
                this.columnOpeningUnitCost = base.Columns["OpeningUnitCost"];
                this.columnOpeningTotalPrice = base.Columns["OpeningTotalPrice"];
                this.columnOpeningTradeMediumName = base.Columns["OpeningTradeMediumName"];
                this.columnCurrentPrice = base.Columns["CurrentPrice"];
                this.columnMarketValue = base.Columns["MarketValue"];
                this.columnGainOrLoss = base.Columns["GainOrLoss"];
                this.columnPriceOverrideDate = base.Columns["PriceOverrideDate"];
                this.columnPriceOverrideUser = base.Columns["PriceOverrideUser"];
                this.columnOriginalPrice = base.Columns["OriginalPrice"];
                this.columnPriceOverrideFlag = base.Columns["PriceOverrideFlag"];
                this.columnOpeningStrategy = base.Columns["OpeningStrategy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFuturesSymbol = new global::System.Data.DataColumn("FuturesSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuturesSymbol);
                this.columnMonth = new global::System.Data.DataColumn("Month", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonth);
                this.columnYear = new global::System.Data.DataColumn("Year", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnFuturesId = new global::System.Data.DataColumn("FuturesId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuturesId);
                this.columnTradeNumber = new global::System.Data.DataColumn("TradeNumber", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeNumber);
                this.columnSubAcctName = new global::System.Data.DataColumn("SubAcctName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubAcctName);
                this.columnTradeVolume = new global::System.Data.DataColumn("TradeVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeVolume);
                this.columnOpeningTradeDate = new global::System.Data.DataColumn("OpeningTradeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeDate);
                this.columnOpeningTradeId = new global::System.Data.DataColumn("OpeningTradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeId);
                this.columnOpeningTradeTypeName = new global::System.Data.DataColumn("OpeningTradeTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeTypeName);
                this.columnOpeningTradePrice = new global::System.Data.DataColumn("OpeningTradePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradePrice);
                this.columnOpeningUnitCost = new global::System.Data.DataColumn("OpeningUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningUnitCost);
                this.columnOpeningTotalPrice = new global::System.Data.DataColumn("OpeningTotalPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTotalPrice);
                this.columnOpeningTradeMediumName = new global::System.Data.DataColumn("OpeningTradeMediumName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeMediumName);
                this.columnCurrentPrice = new global::System.Data.DataColumn("CurrentPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentPrice);
                this.columnMarketValue = new global::System.Data.DataColumn("MarketValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarketValue);
                this.columnGainOrLoss = new global::System.Data.DataColumn("GainOrLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGainOrLoss);
                this.columnPriceOverrideDate = new global::System.Data.DataColumn("PriceOverrideDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceOverrideDate);
                this.columnPriceOverrideUser = new global::System.Data.DataColumn("PriceOverrideUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceOverrideUser);
                this.columnOriginalPrice = new global::System.Data.DataColumn("OriginalPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalPrice);
                this.columnPriceOverrideFlag = new global::System.Data.DataColumn("PriceOverrideFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceOverrideFlag);
                this.columnOpeningStrategy = new global::System.Data.DataColumn("OpeningStrategy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningStrategy);
                this.columnFuturesSymbol.MaxLength = 10;
                this.columnSubAcctName.MaxLength = 80;
                this.columnOpeningTradeTypeName.MaxLength = 80;
                this.columnOpeningTradeMediumName.MaxLength = 80;
                this.columnMarketValue.ReadOnly = true;
                this.columnGainOrLoss.ReadOnly = true;
                this.columnPriceOverrideUser.MaxLength = 50;
                this.columnOriginalPrice.ReadOnly = true;
                this.columnPriceOverrideFlag.ReadOnly = true;
                this.columnOpeningStrategy.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedFuturesGainsRow NewUnrealizedFuturesGainsRow() {
                return ((UnrealizedFuturesGainsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UnrealizedFuturesGainsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UnrealizedFuturesGainsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitExpressions() {
                this.PriceOverrideFlagColumn.Expression = "iif(PriceOverrideDate IS NULL,\'\',\'*\')";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UnrealizedFuturesGainsRowChanged != null)) {
                    this.UnrealizedFuturesGainsRowChanged(this, new UnrealizedFuturesGainsRowChangeEvent(((UnrealizedFuturesGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UnrealizedFuturesGainsRowChanging != null)) {
                    this.UnrealizedFuturesGainsRowChanging(this, new UnrealizedFuturesGainsRowChangeEvent(((UnrealizedFuturesGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UnrealizedFuturesGainsRowDeleted != null)) {
                    this.UnrealizedFuturesGainsRowDeleted(this, new UnrealizedFuturesGainsRowChangeEvent(((UnrealizedFuturesGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UnrealizedFuturesGainsRowDeleting != null)) {
                    this.UnrealizedFuturesGainsRowDeleting(this, new UnrealizedFuturesGainsRowChangeEvent(((UnrealizedFuturesGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveUnrealizedFuturesGainsRow(UnrealizedFuturesGainsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UnrealizedFuturesGainsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RealizedFuturesGainsDataTable : global::System.Data.TypedTableBase<RealizedFuturesGainsRow> {
            
            private global::System.Data.DataColumn columnFuturesId;
            
            private global::System.Data.DataColumn columnFuturesSymbol;
            
            private global::System.Data.DataColumn columnMonth;
            
            private global::System.Data.DataColumn columnYear;
            
            private global::System.Data.DataColumn columnMultiplier;
            
            private global::System.Data.DataColumn columnTradeNumber;
            
            private global::System.Data.DataColumn columnSubAcctName;
            
            private global::System.Data.DataColumn columnTradeVolume;
            
            private global::System.Data.DataColumn columnOpeningTradeDate;
            
            private global::System.Data.DataColumn columnOpeningTradeId;
            
            private global::System.Data.DataColumn columnOpeningTradeTypeName;
            
            private global::System.Data.DataColumn columnOpeningTradePrice;
            
            private global::System.Data.DataColumn columnOpeningUnitCost;
            
            private global::System.Data.DataColumn columnOpeningTotalPrice;
            
            private global::System.Data.DataColumn columnOpeningTradeMediumName;
            
            private global::System.Data.DataColumn columnClosingTradeDate;
            
            private global::System.Data.DataColumn columnClosingTradeId;
            
            private global::System.Data.DataColumn columnClosingTradeTypeName;
            
            private global::System.Data.DataColumn columnClosingTradePrice;
            
            private global::System.Data.DataColumn columnClosingUnitCost;
            
            private global::System.Data.DataColumn columnClosingTotalPrice;
            
            private global::System.Data.DataColumn columnClosingTradeMediumName;
            
            private global::System.Data.DataColumn columnDaysHeld;
            
            private global::System.Data.DataColumn columnShortTermGainLoss;
            
            private global::System.Data.DataColumn columnLongTermGainLoss;
            
            private global::System.Data.DataColumn columnCostBasis;
            
            private global::System.Data.DataColumn columnNetProceeds;
            
            private global::System.Data.DataColumn columnUnitCostBasis;
            
            private global::System.Data.DataColumn columnUnitNetProceeds;
            
            private global::System.Data.DataColumn columnOpeningStrategy;
            
            private global::System.Data.DataColumn columnClosingStrategy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedFuturesGainsDataTable() {
                this.TableName = "RealizedFuturesGains";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RealizedFuturesGainsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RealizedFuturesGainsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FuturesIdColumn {
                get {
                    return this.columnFuturesId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FuturesSymbolColumn {
                get {
                    return this.columnFuturesSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MonthColumn {
                get {
                    return this.columnMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YearColumn {
                get {
                    return this.columnYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MultiplierColumn {
                get {
                    return this.columnMultiplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeNumberColumn {
                get {
                    return this.columnTradeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubAcctNameColumn {
                get {
                    return this.columnSubAcctName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeVolumeColumn {
                get {
                    return this.columnTradeVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeDateColumn {
                get {
                    return this.columnOpeningTradeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeIdColumn {
                get {
                    return this.columnOpeningTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeTypeNameColumn {
                get {
                    return this.columnOpeningTradeTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradePriceColumn {
                get {
                    return this.columnOpeningTradePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningUnitCostColumn {
                get {
                    return this.columnOpeningUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTotalPriceColumn {
                get {
                    return this.columnOpeningTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningTradeMediumNameColumn {
                get {
                    return this.columnOpeningTradeMediumName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTradeDateColumn {
                get {
                    return this.columnClosingTradeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTradeIdColumn {
                get {
                    return this.columnClosingTradeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTradeTypeNameColumn {
                get {
                    return this.columnClosingTradeTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTradePriceColumn {
                get {
                    return this.columnClosingTradePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingUnitCostColumn {
                get {
                    return this.columnClosingUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTotalPriceColumn {
                get {
                    return this.columnClosingTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingTradeMediumNameColumn {
                get {
                    return this.columnClosingTradeMediumName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DaysHeldColumn {
                get {
                    return this.columnDaysHeld;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortTermGainLossColumn {
                get {
                    return this.columnShortTermGainLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LongTermGainLossColumn {
                get {
                    return this.columnLongTermGainLoss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostBasisColumn {
                get {
                    return this.columnCostBasis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetProceedsColumn {
                get {
                    return this.columnNetProceeds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitCostBasisColumn {
                get {
                    return this.columnUnitCostBasis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitNetProceedsColumn {
                get {
                    return this.columnUnitNetProceeds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpeningStrategyColumn {
                get {
                    return this.columnOpeningStrategy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClosingStrategyColumn {
                get {
                    return this.columnClosingStrategy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedFuturesGainsRow this[int index] {
                get {
                    return ((RealizedFuturesGainsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedFuturesGainsRowChangeEventHandler RealizedFuturesGainsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedFuturesGainsRowChangeEventHandler RealizedFuturesGainsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedFuturesGainsRowChangeEventHandler RealizedFuturesGainsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RealizedFuturesGainsRowChangeEventHandler RealizedFuturesGainsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRealizedFuturesGainsRow(RealizedFuturesGainsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedFuturesGainsRow AddRealizedFuturesGainsRow(
                        int FuturesId, 
                        string FuturesSymbol, 
                        int Month, 
                        int Year, 
                        short Multiplier, 
                        short TradeNumber, 
                        string SubAcctName, 
                        double TradeVolume, 
                        System.DateTime OpeningTradeDate, 
                        int OpeningTradeId, 
                        string OpeningTradeTypeName, 
                        double OpeningTradePrice, 
                        double OpeningUnitCost, 
                        double OpeningTotalPrice, 
                        string OpeningTradeMediumName, 
                        System.DateTime ClosingTradeDate, 
                        int ClosingTradeId, 
                        string ClosingTradeTypeName, 
                        double ClosingTradePrice, 
                        double ClosingUnitCost, 
                        double ClosingTotalPrice, 
                        string ClosingTradeMediumName, 
                        int DaysHeld, 
                        double ShortTermGainLoss, 
                        double LongTermGainLoss, 
                        double CostBasis, 
                        double NetProceeds, 
                        double UnitCostBasis, 
                        double UnitNetProceeds, 
                        string OpeningStrategy, 
                        string ClosingStrategy) {
                RealizedFuturesGainsRow rowRealizedFuturesGainsRow = ((RealizedFuturesGainsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FuturesId,
                        FuturesSymbol,
                        Month,
                        Year,
                        Multiplier,
                        TradeNumber,
                        SubAcctName,
                        TradeVolume,
                        OpeningTradeDate,
                        OpeningTradeId,
                        OpeningTradeTypeName,
                        OpeningTradePrice,
                        OpeningUnitCost,
                        OpeningTotalPrice,
                        OpeningTradeMediumName,
                        ClosingTradeDate,
                        ClosingTradeId,
                        ClosingTradeTypeName,
                        ClosingTradePrice,
                        ClosingUnitCost,
                        ClosingTotalPrice,
                        ClosingTradeMediumName,
                        DaysHeld,
                        ShortTermGainLoss,
                        LongTermGainLoss,
                        CostBasis,
                        NetProceeds,
                        UnitCostBasis,
                        UnitNetProceeds,
                        OpeningStrategy,
                        ClosingStrategy};
                rowRealizedFuturesGainsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRealizedFuturesGainsRow);
                return rowRealizedFuturesGainsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RealizedFuturesGainsDataTable cln = ((RealizedFuturesGainsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RealizedFuturesGainsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFuturesId = base.Columns["FuturesId"];
                this.columnFuturesSymbol = base.Columns["FuturesSymbol"];
                this.columnMonth = base.Columns["Month"];
                this.columnYear = base.Columns["Year"];
                this.columnMultiplier = base.Columns["Multiplier"];
                this.columnTradeNumber = base.Columns["TradeNumber"];
                this.columnSubAcctName = base.Columns["SubAcctName"];
                this.columnTradeVolume = base.Columns["TradeVolume"];
                this.columnOpeningTradeDate = base.Columns["OpeningTradeDate"];
                this.columnOpeningTradeId = base.Columns["OpeningTradeId"];
                this.columnOpeningTradeTypeName = base.Columns["OpeningTradeTypeName"];
                this.columnOpeningTradePrice = base.Columns["OpeningTradePrice"];
                this.columnOpeningUnitCost = base.Columns["OpeningUnitCost"];
                this.columnOpeningTotalPrice = base.Columns["OpeningTotalPrice"];
                this.columnOpeningTradeMediumName = base.Columns["OpeningTradeMediumName"];
                this.columnClosingTradeDate = base.Columns["ClosingTradeDate"];
                this.columnClosingTradeId = base.Columns["ClosingTradeId"];
                this.columnClosingTradeTypeName = base.Columns["ClosingTradeTypeName"];
                this.columnClosingTradePrice = base.Columns["ClosingTradePrice"];
                this.columnClosingUnitCost = base.Columns["ClosingUnitCost"];
                this.columnClosingTotalPrice = base.Columns["ClosingTotalPrice"];
                this.columnClosingTradeMediumName = base.Columns["ClosingTradeMediumName"];
                this.columnDaysHeld = base.Columns["DaysHeld"];
                this.columnShortTermGainLoss = base.Columns["ShortTermGainLoss"];
                this.columnLongTermGainLoss = base.Columns["LongTermGainLoss"];
                this.columnCostBasis = base.Columns["CostBasis"];
                this.columnNetProceeds = base.Columns["NetProceeds"];
                this.columnUnitCostBasis = base.Columns["UnitCostBasis"];
                this.columnUnitNetProceeds = base.Columns["UnitNetProceeds"];
                this.columnOpeningStrategy = base.Columns["OpeningStrategy"];
                this.columnClosingStrategy = base.Columns["ClosingStrategy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFuturesId = new global::System.Data.DataColumn("FuturesId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuturesId);
                this.columnFuturesSymbol = new global::System.Data.DataColumn("FuturesSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuturesSymbol);
                this.columnMonth = new global::System.Data.DataColumn("Month", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonth);
                this.columnYear = new global::System.Data.DataColumn("Year", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnMultiplier = new global::System.Data.DataColumn("Multiplier", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMultiplier);
                this.columnTradeNumber = new global::System.Data.DataColumn("TradeNumber", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeNumber);
                this.columnSubAcctName = new global::System.Data.DataColumn("SubAcctName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubAcctName);
                this.columnTradeVolume = new global::System.Data.DataColumn("TradeVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeVolume);
                this.columnOpeningTradeDate = new global::System.Data.DataColumn("OpeningTradeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeDate);
                this.columnOpeningTradeId = new global::System.Data.DataColumn("OpeningTradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeId);
                this.columnOpeningTradeTypeName = new global::System.Data.DataColumn("OpeningTradeTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeTypeName);
                this.columnOpeningTradePrice = new global::System.Data.DataColumn("OpeningTradePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradePrice);
                this.columnOpeningUnitCost = new global::System.Data.DataColumn("OpeningUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningUnitCost);
                this.columnOpeningTotalPrice = new global::System.Data.DataColumn("OpeningTotalPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTotalPrice);
                this.columnOpeningTradeMediumName = new global::System.Data.DataColumn("OpeningTradeMediumName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningTradeMediumName);
                this.columnClosingTradeDate = new global::System.Data.DataColumn("ClosingTradeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTradeDate);
                this.columnClosingTradeId = new global::System.Data.DataColumn("ClosingTradeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTradeId);
                this.columnClosingTradeTypeName = new global::System.Data.DataColumn("ClosingTradeTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTradeTypeName);
                this.columnClosingTradePrice = new global::System.Data.DataColumn("ClosingTradePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTradePrice);
                this.columnClosingUnitCost = new global::System.Data.DataColumn("ClosingUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingUnitCost);
                this.columnClosingTotalPrice = new global::System.Data.DataColumn("ClosingTotalPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTotalPrice);
                this.columnClosingTradeMediumName = new global::System.Data.DataColumn("ClosingTradeMediumName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingTradeMediumName);
                this.columnDaysHeld = new global::System.Data.DataColumn("DaysHeld", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaysHeld);
                this.columnShortTermGainLoss = new global::System.Data.DataColumn("ShortTermGainLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortTermGainLoss);
                this.columnLongTermGainLoss = new global::System.Data.DataColumn("LongTermGainLoss", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongTermGainLoss);
                this.columnCostBasis = new global::System.Data.DataColumn("CostBasis", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostBasis);
                this.columnNetProceeds = new global::System.Data.DataColumn("NetProceeds", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetProceeds);
                this.columnUnitCostBasis = new global::System.Data.DataColumn("UnitCostBasis", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitCostBasis);
                this.columnUnitNetProceeds = new global::System.Data.DataColumn("UnitNetProceeds", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitNetProceeds);
                this.columnOpeningStrategy = new global::System.Data.DataColumn("OpeningStrategy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningStrategy);
                this.columnClosingStrategy = new global::System.Data.DataColumn("ClosingStrategy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingStrategy);
                this.columnFuturesSymbol.MaxLength = 10;
                this.columnSubAcctName.MaxLength = 80;
                this.columnOpeningTradeTypeName.MaxLength = 80;
                this.columnOpeningTradeMediumName.MaxLength = 80;
                this.columnClosingTradeTypeName.MaxLength = 80;
                this.columnClosingTradeMediumName.MaxLength = 80;
                this.columnDaysHeld.ReadOnly = true;
                this.columnShortTermGainLoss.ReadOnly = true;
                this.columnLongTermGainLoss.ReadOnly = true;
                this.columnCostBasis.ReadOnly = true;
                this.columnNetProceeds.ReadOnly = true;
                this.columnUnitCostBasis.ReadOnly = true;
                this.columnUnitNetProceeds.ReadOnly = true;
                this.columnOpeningStrategy.MaxLength = 80;
                this.columnClosingStrategy.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedFuturesGainsRow NewRealizedFuturesGainsRow() {
                return ((RealizedFuturesGainsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RealizedFuturesGainsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RealizedFuturesGainsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RealizedFuturesGainsRowChanged != null)) {
                    this.RealizedFuturesGainsRowChanged(this, new RealizedFuturesGainsRowChangeEvent(((RealizedFuturesGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RealizedFuturesGainsRowChanging != null)) {
                    this.RealizedFuturesGainsRowChanging(this, new RealizedFuturesGainsRowChangeEvent(((RealizedFuturesGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RealizedFuturesGainsRowDeleted != null)) {
                    this.RealizedFuturesGainsRowDeleted(this, new RealizedFuturesGainsRowChangeEvent(((RealizedFuturesGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RealizedFuturesGainsRowDeleting != null)) {
                    this.RealizedFuturesGainsRowDeleting(this, new RealizedFuturesGainsRowChangeEvent(((RealizedFuturesGainsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRealizedFuturesGainsRow(RealizedFuturesGainsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HugoDataSet ds = new HugoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RealizedFuturesGainsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class p_get_open_taxlotsRow : global::System.Data.DataRow {
            
            private p_get_open_taxlotsDataTable tablep_get_open_taxlots;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal p_get_open_taxlotsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablep_get_open_taxlots = ((p_get_open_taxlotsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short AcctId {
                get {
                    return ((short)(this[this.tablep_get_open_taxlots.AcctIdColumn]));
                }
                set {
                    this[this.tablep_get_open_taxlots.AcctIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ticker {
                get {
                    try {
                        return ((string)(this[this.tablep_get_open_taxlots.TickerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ticker\' in table \'p_get_open_taxlots\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.TickerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxLotId {
                get {
                    return ((string)(this[this.tablep_get_open_taxlots.TaxLotIdColumn]));
                }
                set {
                    this[this.tablep_get_open_taxlots.TaxLotIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Num_Trades {
                get {
                    try {
                        return ((int)(this[this.tablep_get_open_taxlots.Num_TradesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Num Trades\' in table \'p_get_open_taxlots\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.Num_TradesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Open_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablep_get_open_taxlots.Open_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Open Date\' in table \'p_get_open_taxlots\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.Open_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Unit_Cost {
                get {
                    try {
                        return ((double)(this[this.tablep_get_open_taxlots.Unit_CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit Cost\' in table \'p_get_open_taxlots\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.Unit_CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Open_Amount {
                get {
                    try {
                        return ((double)(this[this.tablep_get_open_taxlots.Open_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Open Amount\' in table \'p_get_open_taxlots\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.Open_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrentPrice {
                get {
                    try {
                        return ((double)(this[this.tablep_get_open_taxlots.CurrentPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentPrice\' in table \'p_get_open_taxlots\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.CurrentPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Score {
                get {
                    try {
                        return ((int)(this[this.tablep_get_open_taxlots.ScoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Score\' in table \'p_get_open_taxlots\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.ScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LinkedTaxLotId {
                get {
                    try {
                        return ((string)(this[this.tablep_get_open_taxlots.LinkedTaxLotIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinkedTaxLotId\' in table \'p_get_open_taxlots\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.LinkedTaxLotIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Total_Cost {
                get {
                    try {
                        return ((double)(this[this.tablep_get_open_taxlots.Total_CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total Cost\' in table \'p_get_open_taxlots\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.Total_CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SubAcctId {
                get {
                    try {
                        return ((short)(this[this.tablep_get_open_taxlots.SubAcctIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubAcctId\' in table \'p_get_open_taxlots\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.SubAcctIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubAcctName {
                get {
                    try {
                        return ((string)(this[this.tablep_get_open_taxlots.SubAcctNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubAcctName\' in table \'p_get_open_taxlots\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.SubAcctNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short UnderlyingId {
                get {
                    try {
                        return ((short)(this[this.tablep_get_open_taxlots.UnderlyingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnderlyingId\' in table \'p_get_open_taxlots\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.UnderlyingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MarketValue {
                get {
                    try {
                        return ((double)(this[this.tablep_get_open_taxlots.MarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarketValue\' in table \'p_get_open_taxlots\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.MarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double GainOrLoss {
                get {
                    try {
                        return ((double)(this[this.tablep_get_open_taxlots.GainOrLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GainOrLoss\' in table \'p_get_open_taxlots\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.GainOrLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PriceOverrideDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablep_get_open_taxlots.PriceOverrideDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceOverrideDate\' in table \'p_get_open_taxlots\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.PriceOverrideDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PriceOverrideUser {
                get {
                    try {
                        return ((string)(this[this.tablep_get_open_taxlots.PriceOverrideUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceOverrideUser\' in table \'p_get_open_taxlots\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.PriceOverrideUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PriceOverrideFlag {
                get {
                    try {
                        return ((string)(this[this.tablep_get_open_taxlots.PriceOverrideFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceOverrideFlag\' in table \'p_get_open_taxlots\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.PriceOverrideFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginalPrice {
                get {
                    try {
                        return ((double)(this[this.tablep_get_open_taxlots.OriginalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalPrice\' in table \'p_get_open_taxlots\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.OriginalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Strategy {
                get {
                    if (this.IsStrategyNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablep_get_open_taxlots.StrategyColumn]));
                    }
                }
                set {
                    this[this.tablep_get_open_taxlots.StrategyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTickerNull() {
                return this.IsNull(this.tablep_get_open_taxlots.TickerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTickerNull() {
                this[this.tablep_get_open_taxlots.TickerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNum_TradesNull() {
                return this.IsNull(this.tablep_get_open_taxlots.Num_TradesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNum_TradesNull() {
                this[this.tablep_get_open_taxlots.Num_TradesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpen_DateNull() {
                return this.IsNull(this.tablep_get_open_taxlots.Open_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpen_DateNull() {
                this[this.tablep_get_open_taxlots.Open_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnit_CostNull() {
                return this.IsNull(this.tablep_get_open_taxlots.Unit_CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnit_CostNull() {
                this[this.tablep_get_open_taxlots.Unit_CostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpen_AmountNull() {
                return this.IsNull(this.tablep_get_open_taxlots.Open_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpen_AmountNull() {
                this[this.tablep_get_open_taxlots.Open_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentPriceNull() {
                return this.IsNull(this.tablep_get_open_taxlots.CurrentPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentPriceNull() {
                this[this.tablep_get_open_taxlots.CurrentPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScoreNull() {
                return this.IsNull(this.tablep_get_open_taxlots.ScoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScoreNull() {
                this[this.tablep_get_open_taxlots.ScoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLinkedTaxLotIdNull() {
                return this.IsNull(this.tablep_get_open_taxlots.LinkedTaxLotIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLinkedTaxLotIdNull() {
                this[this.tablep_get_open_taxlots.LinkedTaxLotIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotal_CostNull() {
                return this.IsNull(this.tablep_get_open_taxlots.Total_CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotal_CostNull() {
                this[this.tablep_get_open_taxlots.Total_CostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubAcctIdNull() {
                return this.IsNull(this.tablep_get_open_taxlots.SubAcctIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubAcctIdNull() {
                this[this.tablep_get_open_taxlots.SubAcctIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubAcctNameNull() {
                return this.IsNull(this.tablep_get_open_taxlots.SubAcctNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubAcctNameNull() {
                this[this.tablep_get_open_taxlots.SubAcctNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnderlyingIdNull() {
                return this.IsNull(this.tablep_get_open_taxlots.UnderlyingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnderlyingIdNull() {
                this[this.tablep_get_open_taxlots.UnderlyingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarketValueNull() {
                return this.IsNull(this.tablep_get_open_taxlots.MarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarketValueNull() {
                this[this.tablep_get_open_taxlots.MarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGainOrLossNull() {
                return this.IsNull(this.tablep_get_open_taxlots.GainOrLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGainOrLossNull() {
                this[this.tablep_get_open_taxlots.GainOrLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceOverrideDateNull() {
                return this.IsNull(this.tablep_get_open_taxlots.PriceOverrideDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceOverrideDateNull() {
                this[this.tablep_get_open_taxlots.PriceOverrideDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceOverrideUserNull() {
                return this.IsNull(this.tablep_get_open_taxlots.PriceOverrideUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceOverrideUserNull() {
                this[this.tablep_get_open_taxlots.PriceOverrideUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceOverrideFlagNull() {
                return this.IsNull(this.tablep_get_open_taxlots.PriceOverrideFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceOverrideFlagNull() {
                this[this.tablep_get_open_taxlots.PriceOverrideFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalPriceNull() {
                return this.IsNull(this.tablep_get_open_taxlots.OriginalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalPriceNull() {
                this[this.tablep_get_open_taxlots.OriginalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStrategyNull() {
                return this.IsNull(this.tablep_get_open_taxlots.StrategyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStrategyNull() {
                this[this.tablep_get_open_taxlots.StrategyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AccountsRow : global::System.Data.DataRow {
            
            private AccountsDataTable tableAccounts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AccountsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAccounts = ((AccountsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AcctName {
                get {
                    return ((string)(this[this.tableAccounts.AcctNameColumn]));
                }
                set {
                    this[this.tableAccounts.AcctNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short AcctId {
                get {
                    return ((short)(this[this.tableAccounts.AcctIdColumn]));
                }
                set {
                    this[this.tableAccounts.AcctIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxId {
                get {
                    try {
                        return ((string)(this[this.tableAccounts.TaxIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxId\' in table \'Accounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccounts.TaxIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tableAccounts.ClientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientName\' in table \'Accounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccounts.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxIdNull() {
                return this.IsNull(this.tableAccounts.TaxIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaxIdNull() {
                this[this.tableAccounts.TaxIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientNameNull() {
                return this.IsNull(this.tableAccounts.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientNameNull() {
                this[this.tableAccounts.ClientNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class p_get_taxlots_with_running_positions_and_unit_cost_basisRow : global::System.Data.DataRow {
            
            private p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable tablep_get_taxlots_with_running_positions_and_unit_cost_basis;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal p_get_taxlots_with_running_positions_and_unit_cost_basisRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis = ((p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short AcctId {
                get {
                    try {
                        return ((short)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.AcctIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcctId\' in table \'p_get_taxlots_with_running_positions_and_" +
                                "unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.AcctIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxLotId {
                get {
                    try {
                        return ((string)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TaxLotIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxLotId\' in table \'p_get_taxlots_with_running_positions_an" +
                                "d_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TaxLotIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateOpened {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.DateOpenedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOpened\' in table \'p_get_taxlots_with_running_positions_" +
                                "and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.DateOpenedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateClosed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.DateClosedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateClosed\' in table \'p_get_taxlots_with_running_positions_" +
                                "and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.DateClosedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TradeNumber {
                get {
                    try {
                        return ((int)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeNumber\' in table \'p_get_taxlots_with_running_positions" +
                                "_and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnderlyingSymbol {
                get {
                    try {
                        return ((string)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.UnderlyingSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnderlyingSymbol\' in table \'p_get_taxlots_with_running_posi" +
                                "tions_and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.UnderlyingSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TradeId {
                get {
                    try {
                        return ((int)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeId\' in table \'p_get_taxlots_with_running_positions_and" +
                                "_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TradeDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeDateTime\' in table \'p_get_taxlots_with_running_positio" +
                                "ns_and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradeTypeName {
                get {
                    try {
                        return ((string)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeTypeName\' in table \'p_get_taxlots_with_running_positio" +
                                "ns_and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TradeVolume {
                get {
                    try {
                        return ((double)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeVolume\' in table \'p_get_taxlots_with_running_positions" +
                                "_and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TradePrice {
                get {
                    try {
                        return ((double)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradePrice\' in table \'p_get_taxlots_with_running_positions_" +
                                "and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NetTradePrice {
                get {
                    try {
                        return ((double)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.NetTradePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetTradePrice\' in table \'p_get_taxlots_with_running_positio" +
                                "ns_and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.NetTradePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RunningPosition {
                get {
                    try {
                        return ((double)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.RunningPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RunningPosition\' in table \'p_get_taxlots_with_running_posit" +
                                "ions_and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.RunningPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UnitCostBasis {
                get {
                    try {
                        return ((double)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.UnitCostBasisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitCostBasis\' in table \'p_get_taxlots_with_running_positio" +
                                "ns_and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.UnitCostBasisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LinkedTaxLotId {
                get {
                    try {
                        return ((string)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.LinkedTaxLotIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinkedTaxLotId\' in table \'p_get_taxlots_with_running_positi" +
                                "ons_and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.LinkedTaxLotIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalCost {
                get {
                    try {
                        return ((double)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TotalCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCost\' in table \'p_get_taxlots_with_running_positions_a" +
                                "nd_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TotalCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SubAcctId {
                get {
                    try {
                        return ((short)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.SubAcctIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubAcctId\' in table \'p_get_taxlots_with_running_positions_a" +
                                "nd_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.SubAcctIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubAcctName {
                get {
                    try {
                        return ((string)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.SubAcctNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubAcctName\' in table \'p_get_taxlots_with_running_positions" +
                                "_and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.SubAcctNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short UnderlyingId {
                get {
                    try {
                        return ((short)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.UnderlyingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnderlyingId\' in table \'p_get_taxlots_with_running_position" +
                                "s_and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.UnderlyingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NetProceeds {
                get {
                    try {
                        return ((double)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.NetProceedsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetProceeds\' in table \'p_get_taxlots_with_running_positions" +
                                "_and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.NetProceedsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PreviousUnitCostBasis {
                get {
                    try {
                        return ((double)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.PreviousUnitCostBasisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousUnitCostBasis\' in table \'p_get_taxlots_with_running" +
                                "_positions_and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.PreviousUnitCostBasisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PreviousTotalCost {
                get {
                    try {
                        return ((double)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.PreviousTotalCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousTotalCost\' in table \'p_get_taxlots_with_running_pos" +
                                "itions_and_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.PreviousTotalCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradeNote {
                get {
                    try {
                        return ((string)(this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeNote\' in table \'p_get_taxlots_with_running_positions_a" +
                                "nd_unit_cost_basis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAcctIdNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.AcctIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAcctIdNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.AcctIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxLotIdNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TaxLotIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaxLotIdNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TaxLotIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateOpenedNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.DateOpenedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateOpenedNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.DateOpenedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateClosedNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.DateClosedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateClosedNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.DateClosedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeNumberNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeNumberNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnderlyingSymbolNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.UnderlyingSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnderlyingSymbolNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.UnderlyingSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeIdNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeIdNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeDateTimeNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeDateTimeNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeTypeNameNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeTypeNameNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeVolumeNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeVolumeNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradePriceNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradePriceNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetTradePriceNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.NetTradePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetTradePriceNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.NetTradePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRunningPositionNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.RunningPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRunningPositionNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.RunningPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitCostBasisNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.UnitCostBasisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitCostBasisNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.UnitCostBasisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLinkedTaxLotIdNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.LinkedTaxLotIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLinkedTaxLotIdNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.LinkedTaxLotIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalCostNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TotalCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalCostNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TotalCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubAcctIdNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.SubAcctIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubAcctIdNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.SubAcctIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubAcctNameNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.SubAcctNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubAcctNameNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.SubAcctNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnderlyingIdNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.UnderlyingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnderlyingIdNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.UnderlyingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetProceedsNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.NetProceedsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetProceedsNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.NetProceedsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPreviousUnitCostBasisNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.PreviousUnitCostBasisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPreviousUnitCostBasisNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.PreviousUnitCostBasisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPreviousTotalCostNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.PreviousTotalCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPreviousTotalCostNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.PreviousTotalCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeNoteNull() {
                return this.IsNull(this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeNoteNull() {
                this[this.tablep_get_taxlots_with_running_positions_and_unit_cost_basis.TradeNoteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SubAccountsRow : global::System.Data.DataRow {
            
            private SubAccountsDataTable tableSubAccounts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SubAccountsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSubAccounts = ((SubAccountsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubAcctName {
                get {
                    return ((string)(this[this.tableSubAccounts.SubAcctNameColumn]));
                }
                set {
                    this[this.tableSubAccounts.SubAcctNameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TradersRow : global::System.Data.DataRow {
            
            private TradersDataTable tableTraders;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TradersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTraders = ((TradersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TraderName {
                get {
                    return ((string)(this[this.tableTraders.TraderNameColumn]));
                }
                set {
                    this[this.tableTraders.TraderNameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class p_get_stock_tradesRow : global::System.Data.DataRow {
            
            private p_get_stock_tradesDataTable tablep_get_stock_trades;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal p_get_stock_tradesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablep_get_stock_trades = ((p_get_stock_tradesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxLotId {
                get {
                    try {
                        return ((string)(this[this.tablep_get_stock_trades.TaxLotIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxLotId\' in table \'p_get_stock_trades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.TaxLotIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateOpened {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablep_get_stock_trades.DateOpenedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOpened\' in table \'p_get_stock_trades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.DateOpenedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateClosed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablep_get_stock_trades.DateClosedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateClosed\' in table \'p_get_stock_trades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.DateClosedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short UnderlyingId {
                get {
                    return ((short)(this[this.tablep_get_stock_trades.UnderlyingIdColumn]));
                }
                set {
                    this[this.tablep_get_stock_trades.UnderlyingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short AcctId {
                get {
                    return ((short)(this[this.tablep_get_stock_trades.AcctIdColumn]));
                }
                set {
                    this[this.tablep_get_stock_trades.AcctIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SubacctId {
                get {
                    return ((short)(this[this.tablep_get_stock_trades.SubacctIdColumn]));
                }
                set {
                    this[this.tablep_get_stock_trades.SubacctIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TradeId {
                get {
                    return ((int)(this[this.tablep_get_stock_trades.TradeIdColumn]));
                }
                set {
                    this[this.tablep_get_stock_trades.TradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TradeDatetime {
                get {
                    return ((global::System.DateTime)(this[this.tablep_get_stock_trades.TradeDatetimeColumn]));
                }
                set {
                    this[this.tablep_get_stock_trades.TradeDatetimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnderlyingSymbol {
                get {
                    return ((string)(this[this.tablep_get_stock_trades.UnderlyingSymbolColumn]));
                }
                set {
                    this[this.tablep_get_stock_trades.UnderlyingSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubAcctName {
                get {
                    return ((string)(this[this.tablep_get_stock_trades.SubAcctNameColumn]));
                }
                set {
                    this[this.tablep_get_stock_trades.SubAcctNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradeTypeName {
                get {
                    return ((string)(this[this.tablep_get_stock_trades.TradeTypeNameColumn]));
                }
                set {
                    this[this.tablep_get_stock_trades.TradeTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TradeVolume {
                get {
                    try {
                        return ((double)(this[this.tablep_get_stock_trades.TradeVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeVolume\' in table \'p_get_stock_trades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.TradeVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TradePrice {
                get {
                    try {
                        return ((decimal)(this[this.tablep_get_stock_trades.TradePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradePrice\' in table \'p_get_stock_trades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.TradePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalCost {
                get {
                    try {
                        return ((double)(this[this.tablep_get_stock_trades.TotalCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCost\' in table \'p_get_stock_trades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.TotalCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UnitCost {
                get {
                    try {
                        return ((double)(this[this.tablep_get_stock_trades.UnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitCost\' in table \'p_get_stock_trades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.UnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LinkedTaxLotId {
                get {
                    try {
                        return ((string)(this[this.tablep_get_stock_trades.LinkedTaxLotIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinkedTaxLotId\' in table \'p_get_stock_trades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.LinkedTaxLotIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradeMediumName {
                get {
                    if (this.IsTradeMediumNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tablep_get_stock_trades.TradeMediumNameColumn]));
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.TradeMediumNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradeNote {
                get {
                    try {
                        return ((string)(this[this.tablep_get_stock_trades.TradeNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeNote\' in table \'p_get_stock_trades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.TradeNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClearingHouseTaxlotId {
                get {
                    if (this.IsClearingHouseTaxlotIdNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tablep_get_stock_trades.ClearingHouseTaxlotIdColumn]));
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.ClearingHouseTaxlotIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConsolidationPackageId {
                get {
                    if (this.IsConsolidationPackageIdNull()) {
                        return -1;
                    }
                    else {
                        return ((int)(this[this.tablep_get_stock_trades.ConsolidationPackageIdColumn]));
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.ConsolidationPackageIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MerrillAccountNumber {
                get {
                    if (this.IsMerrillAccountNumberNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tablep_get_stock_trades.MerrillAccountNumberColumn]));
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.MerrillAccountNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FullTradeVolume {
                get {
                    if (this.IsFullTradeVolumeNull()) {
                        return 0D;
                    }
                    else {
                        return ((double)(this[this.tablep_get_stock_trades.FullTradeVolumeColumn]));
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.FullTradeVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OpeningTradePrice {
                get {
                    if (this.IsOpeningTradePriceNull()) {
                        return 0m;
                    }
                    else {
                        return ((decimal)(this[this.tablep_get_stock_trades.OpeningTradePriceColumn]));
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.OpeningTradePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningTradeType {
                get {
                    return ((string)(this[this.tablep_get_stock_trades.OpeningTradeTypeColumn]));
                }
                set {
                    this[this.tablep_get_stock_trades.OpeningTradeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfTrades {
                get {
                    try {
                        return ((int)(this[this.tablep_get_stock_trades.NumberOfTradesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfTrades\' in table \'p_get_stock_trades\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_stock_trades.NumberOfTradesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxLotIdNull() {
                return this.IsNull(this.tablep_get_stock_trades.TaxLotIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaxLotIdNull() {
                this[this.tablep_get_stock_trades.TaxLotIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateOpenedNull() {
                return this.IsNull(this.tablep_get_stock_trades.DateOpenedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateOpenedNull() {
                this[this.tablep_get_stock_trades.DateOpenedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateClosedNull() {
                return this.IsNull(this.tablep_get_stock_trades.DateClosedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateClosedNull() {
                this[this.tablep_get_stock_trades.DateClosedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeVolumeNull() {
                return this.IsNull(this.tablep_get_stock_trades.TradeVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeVolumeNull() {
                this[this.tablep_get_stock_trades.TradeVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradePriceNull() {
                return this.IsNull(this.tablep_get_stock_trades.TradePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradePriceNull() {
                this[this.tablep_get_stock_trades.TradePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalCostNull() {
                return this.IsNull(this.tablep_get_stock_trades.TotalCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalCostNull() {
                this[this.tablep_get_stock_trades.TotalCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitCostNull() {
                return this.IsNull(this.tablep_get_stock_trades.UnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitCostNull() {
                this[this.tablep_get_stock_trades.UnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLinkedTaxLotIdNull() {
                return this.IsNull(this.tablep_get_stock_trades.LinkedTaxLotIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLinkedTaxLotIdNull() {
                this[this.tablep_get_stock_trades.LinkedTaxLotIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeMediumNameNull() {
                return this.IsNull(this.tablep_get_stock_trades.TradeMediumNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeMediumNameNull() {
                this[this.tablep_get_stock_trades.TradeMediumNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeNoteNull() {
                return this.IsNull(this.tablep_get_stock_trades.TradeNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeNoteNull() {
                this[this.tablep_get_stock_trades.TradeNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClearingHouseTaxlotIdNull() {
                return this.IsNull(this.tablep_get_stock_trades.ClearingHouseTaxlotIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClearingHouseTaxlotIdNull() {
                this[this.tablep_get_stock_trades.ClearingHouseTaxlotIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConsolidationPackageIdNull() {
                return this.IsNull(this.tablep_get_stock_trades.ConsolidationPackageIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConsolidationPackageIdNull() {
                this[this.tablep_get_stock_trades.ConsolidationPackageIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMerrillAccountNumberNull() {
                return this.IsNull(this.tablep_get_stock_trades.MerrillAccountNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMerrillAccountNumberNull() {
                this[this.tablep_get_stock_trades.MerrillAccountNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullTradeVolumeNull() {
                return this.IsNull(this.tablep_get_stock_trades.FullTradeVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullTradeVolumeNull() {
                this[this.tablep_get_stock_trades.FullTradeVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradePriceNull() {
                return this.IsNull(this.tablep_get_stock_trades.OpeningTradePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradePriceNull() {
                this[this.tablep_get_stock_trades.OpeningTradePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfTradesNull() {
                return this.IsNull(this.tablep_get_stock_trades.NumberOfTradesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfTradesNull() {
                this[this.tablep_get_stock_trades.NumberOfTradesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class p_get_spinoff_infoRow : global::System.Data.DataRow {
            
            private p_get_spinoff_infoDataTable tablep_get_spinoff_info;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal p_get_spinoff_infoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablep_get_spinoff_info = ((p_get_spinoff_infoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginalVolume {
                get {
                    try {
                        return ((double)(this[this.tablep_get_spinoff_info.OriginalVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalVolume\' in table \'p_get_spinoff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_spinoff_info.OriginalVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginalCostBasis {
                get {
                    try {
                        return ((double)(this[this.tablep_get_spinoff_info.OriginalCostBasisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalCostBasis\' in table \'p_get_spinoff_info\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablep_get_spinoff_info.OriginalCostBasisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpinoffVolume {
                get {
                    try {
                        return ((double)(this[this.tablep_get_spinoff_info.SpinoffVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpinoffVolume\' in table \'p_get_spinoff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_spinoff_info.SpinoffVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpinoffCostBasis {
                get {
                    try {
                        return ((double)(this[this.tablep_get_spinoff_info.SpinoffCostBasisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpinoffCostBasis\' in table \'p_get_spinoff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_spinoff_info.SpinoffCostBasisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OriginalSymbol {
                get {
                    try {
                        return ((string)(this[this.tablep_get_spinoff_info.OriginalSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalSymbol\' in table \'p_get_spinoff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_spinoff_info.OriginalSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalVolumeNull() {
                return this.IsNull(this.tablep_get_spinoff_info.OriginalVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalVolumeNull() {
                this[this.tablep_get_spinoff_info.OriginalVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalCostBasisNull() {
                return this.IsNull(this.tablep_get_spinoff_info.OriginalCostBasisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalCostBasisNull() {
                this[this.tablep_get_spinoff_info.OriginalCostBasisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpinoffVolumeNull() {
                return this.IsNull(this.tablep_get_spinoff_info.SpinoffVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpinoffVolumeNull() {
                this[this.tablep_get_spinoff_info.SpinoffVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpinoffCostBasisNull() {
                return this.IsNull(this.tablep_get_spinoff_info.SpinoffCostBasisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpinoffCostBasisNull() {
                this[this.tablep_get_spinoff_info.SpinoffCostBasisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalSymbolNull() {
                return this.IsNull(this.tablep_get_spinoff_info.OriginalSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalSymbolNull() {
                this[this.tablep_get_spinoff_info.OriginalSymbolColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RealizedStockGainsRow : global::System.Data.DataRow {
            
            private RealizedStockGainsDataTable tableRealizedStockGains;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RealizedStockGainsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRealizedStockGains = ((RealizedStockGainsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnderlyingSymbol {
                get {
                    try {
                        return ((string)(this[this.tableRealizedStockGains.UnderlyingSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnderlyingSymbol\' in table \'RealizedStockGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.UnderlyingSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxlotId {
                get {
                    try {
                        return ((string)(this[this.tableRealizedStockGains.TaxlotIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxlotId\' in table \'RealizedStockGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.TaxlotIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TradeId {
                get {
                    try {
                        return ((int)(this[this.tableRealizedStockGains.TradeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeId\' in table \'RealizedStockGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.TradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubAcctName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedStockGains.SubAcctNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubAcctName\' in table \'RealizedStockGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.SubAcctNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradeTypeName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedStockGains.TradeTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeTypeName\' in table \'RealizedStockGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.TradeTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TradeVolume {
                get {
                    try {
                        return ((double)(this[this.tableRealizedStockGains.TradeVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeVolume\' in table \'RealizedStockGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.TradeVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NetPrice {
                get {
                    try {
                        return ((double)(this[this.tableRealizedStockGains.NetPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetPrice\' in table \'RealizedStockGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.NetPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UnitCost {
                get {
                    try {
                        return ((double)(this[this.tableRealizedStockGains.UnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitCost\' in table \'RealizedStockGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.UnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShortTermGainLoss {
                get {
                    try {
                        return ((double)(this[this.tableRealizedStockGains.ShortTermGainLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShortTermGainLoss\' in table \'RealizedStockGains\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.ShortTermGainLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LongTermGainLoss {
                get {
                    try {
                        return ((double)(this[this.tableRealizedStockGains.LongTermGainLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LongTermGainLoss\' in table \'RealizedStockGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.LongTermGainLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OpenDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRealizedStockGains.OpenDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpenDate\' in table \'RealizedStockGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.OpenDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CloseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRealizedStockGains.CloseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CloseDate\' in table \'RealizedStockGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.CloseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TradeNumber {
                get {
                    try {
                        return ((int)(this[this.tableRealizedStockGains.TradeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeNumber\' in table \'RealizedStockGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.TradeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DaysHeld {
                get {
                    try {
                        return ((int)(this[this.tableRealizedStockGains.DaysHeldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DaysHeld\' in table \'RealizedStockGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.DaysHeldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CostBasis {
                get {
                    try {
                        return ((double)(this[this.tableRealizedStockGains.CostBasisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostBasis\' in table \'RealizedStockGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.CostBasisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NetProceeds {
                get {
                    try {
                        return ((double)(this[this.tableRealizedStockGains.NetProceedsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetProceeds\' in table \'RealizedStockGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedStockGains.NetProceedsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Strategy {
                get {
                    if (this.IsStrategyNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableRealizedStockGains.StrategyColumn]));
                    }
                }
                set {
                    this[this.tableRealizedStockGains.StrategyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnderlyingSymbolNull() {
                return this.IsNull(this.tableRealizedStockGains.UnderlyingSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnderlyingSymbolNull() {
                this[this.tableRealizedStockGains.UnderlyingSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxlotIdNull() {
                return this.IsNull(this.tableRealizedStockGains.TaxlotIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaxlotIdNull() {
                this[this.tableRealizedStockGains.TaxlotIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeIdNull() {
                return this.IsNull(this.tableRealizedStockGains.TradeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeIdNull() {
                this[this.tableRealizedStockGains.TradeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubAcctNameNull() {
                return this.IsNull(this.tableRealizedStockGains.SubAcctNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubAcctNameNull() {
                this[this.tableRealizedStockGains.SubAcctNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeTypeNameNull() {
                return this.IsNull(this.tableRealizedStockGains.TradeTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeTypeNameNull() {
                this[this.tableRealizedStockGains.TradeTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeVolumeNull() {
                return this.IsNull(this.tableRealizedStockGains.TradeVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeVolumeNull() {
                this[this.tableRealizedStockGains.TradeVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetPriceNull() {
                return this.IsNull(this.tableRealizedStockGains.NetPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetPriceNull() {
                this[this.tableRealizedStockGains.NetPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitCostNull() {
                return this.IsNull(this.tableRealizedStockGains.UnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitCostNull() {
                this[this.tableRealizedStockGains.UnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShortTermGainLossNull() {
                return this.IsNull(this.tableRealizedStockGains.ShortTermGainLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShortTermGainLossNull() {
                this[this.tableRealizedStockGains.ShortTermGainLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLongTermGainLossNull() {
                return this.IsNull(this.tableRealizedStockGains.LongTermGainLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLongTermGainLossNull() {
                this[this.tableRealizedStockGains.LongTermGainLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpenDateNull() {
                return this.IsNull(this.tableRealizedStockGains.OpenDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpenDateNull() {
                this[this.tableRealizedStockGains.OpenDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCloseDateNull() {
                return this.IsNull(this.tableRealizedStockGains.CloseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCloseDateNull() {
                this[this.tableRealizedStockGains.CloseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeNumberNull() {
                return this.IsNull(this.tableRealizedStockGains.TradeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeNumberNull() {
                this[this.tableRealizedStockGains.TradeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDaysHeldNull() {
                return this.IsNull(this.tableRealizedStockGains.DaysHeldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDaysHeldNull() {
                this[this.tableRealizedStockGains.DaysHeldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCostBasisNull() {
                return this.IsNull(this.tableRealizedStockGains.CostBasisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCostBasisNull() {
                this[this.tableRealizedStockGains.CostBasisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetProceedsNull() {
                return this.IsNull(this.tableRealizedStockGains.NetProceedsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetProceedsNull() {
                this[this.tableRealizedStockGains.NetProceedsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStrategyNull() {
                return this.IsNull(this.tableRealizedStockGains.StrategyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStrategyNull() {
                this[this.tableRealizedStockGains.StrategyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RealizedEquityOptionGainsRow : global::System.Data.DataRow {
            
            private RealizedEquityOptionGainsDataTable tableRealizedEquityOptionGains;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RealizedEquityOptionGainsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRealizedEquityOptionGains = ((RealizedEquityOptionGainsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnderlyingSymbol {
                get {
                    try {
                        return ((string)(this[this.tableRealizedEquityOptionGains.UnderlyingSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnderlyingSymbol\' in table \'RealizedEquityOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.UnderlyingSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OptionSymbol {
                get {
                    try {
                        return ((string)(this[this.tableRealizedEquityOptionGains.OptionSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionSymbol\' in table \'RealizedEquityOptionGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.OptionSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExpirationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRealizedEquityOptionGains.ExpirationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpirationDate\' in table \'RealizedEquityOptionGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.ExpirationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double StrikePrice {
                get {
                    try {
                        return ((double)(this[this.tableRealizedEquityOptionGains.StrikePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StrikePrice\' in table \'RealizedEquityOptionGains\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.StrikePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OptionTypeName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedEquityOptionGains.OptionTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionTypeName\' in table \'RealizedEquityOptionGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.OptionTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TradeNumber {
                get {
                    try {
                        return ((short)(this[this.tableRealizedEquityOptionGains.TradeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeNumber\' in table \'RealizedEquityOptionGains\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.TradeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubAcctName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedEquityOptionGains.SubAcctNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubAcctName\' in table \'RealizedEquityOptionGains\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.SubAcctNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TradeVolume {
                get {
                    try {
                        return ((double)(this[this.tableRealizedEquityOptionGains.TradeVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeVolume\' in table \'RealizedEquityOptionGains\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.TradeVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OpeningTradeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRealizedEquityOptionGains.OpeningTradeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeDate\' in table \'RealizedEquityOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.OpeningTradeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OpeningTradeId {
                get {
                    try {
                        return ((int)(this[this.tableRealizedEquityOptionGains.OpeningTradeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeId\' in table \'RealizedEquityOptionGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.OpeningTradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningTradeTypeName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedEquityOptionGains.OpeningTradeTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeTypeName\' in table \'RealizedEquityOptionGains\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.OpeningTradeTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningTradePrice {
                get {
                    try {
                        return ((double)(this[this.tableRealizedEquityOptionGains.OpeningTradePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradePrice\' in table \'RealizedEquityOptionGains\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.OpeningTradePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningTotalPrice {
                get {
                    try {
                        return ((double)(this[this.tableRealizedEquityOptionGains.OpeningTotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTotalPrice\' in table \'RealizedEquityOptionGains\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.OpeningTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningTradeMediumName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedEquityOptionGains.OpeningTradeMediumNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeMediumName\' in table \'RealizedEquityOptionGains" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.OpeningTradeMediumNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ClosingTradeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRealizedEquityOptionGains.ClosingTradeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTradeDate\' in table \'RealizedEquityOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.ClosingTradeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ClosingTradeId {
                get {
                    try {
                        return ((int)(this[this.tableRealizedEquityOptionGains.ClosingTradeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTradeId\' in table \'RealizedEquityOptionGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.ClosingTradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClosingTradeTypeName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedEquityOptionGains.ClosingTradeTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTradeTypeName\' in table \'RealizedEquityOptionGains\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.ClosingTradeTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ClosingTradePrice {
                get {
                    try {
                        return ((double)(this[this.tableRealizedEquityOptionGains.ClosingTradePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTradePrice\' in table \'RealizedEquityOptionGains\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.ClosingTradePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ClosingTotalPrice {
                get {
                    try {
                        return ((double)(this[this.tableRealizedEquityOptionGains.ClosingTotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTotalPrice\' in table \'RealizedEquityOptionGains\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.ClosingTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClosingTradeMediumName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedEquityOptionGains.ClosingTradeMediumNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTradeMediumName\' in table \'RealizedEquityOptionGains" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.ClosingTradeMediumNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DaysHeld {
                get {
                    try {
                        return ((int)(this[this.tableRealizedEquityOptionGains.DaysHeldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DaysHeld\' in table \'RealizedEquityOptionGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.DaysHeldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShortTermGainLoss {
                get {
                    try {
                        return ((double)(this[this.tableRealizedEquityOptionGains.ShortTermGainLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShortTermGainLoss\' in table \'RealizedEquityOptionGains\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.ShortTermGainLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LongTermGainLoss {
                get {
                    try {
                        return ((double)(this[this.tableRealizedEquityOptionGains.LongTermGainLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LongTermGainLoss\' in table \'RealizedEquityOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.LongTermGainLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CostBasis {
                get {
                    try {
                        return ((double)(this[this.tableRealizedEquityOptionGains.CostBasisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostBasis\' in table \'RealizedEquityOptionGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.CostBasisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NetProceeds {
                get {
                    try {
                        return ((double)(this[this.tableRealizedEquityOptionGains.NetProceedsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetProceeds\' in table \'RealizedEquityOptionGains\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.NetProceedsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OptionId {
                get {
                    try {
                        return ((int)(this[this.tableRealizedEquityOptionGains.OptionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionId\' in table \'RealizedEquityOptionGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.OptionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short OptionTypeId {
                get {
                    try {
                        return ((short)(this[this.tableRealizedEquityOptionGains.OptionTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionTypeId\' in table \'RealizedEquityOptionGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.OptionTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableRealizedEquityOptionGains.OpeningUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningUnitCost\' in table \'RealizedEquityOptionGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.OpeningUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ClosingUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableRealizedEquityOptionGains.ClosingUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingUnitCost\' in table \'RealizedEquityOptionGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.ClosingUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UnitCostBasis {
                get {
                    try {
                        return ((double)(this[this.tableRealizedEquityOptionGains.UnitCostBasisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitCostBasis\' in table \'RealizedEquityOptionGains\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.UnitCostBasisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UnitNetProceeds {
                get {
                    try {
                        return ((double)(this[this.tableRealizedEquityOptionGains.UnitNetProceedsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitNetProceeds\' in table \'RealizedEquityOptionGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.UnitNetProceedsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BloombergSymbol {
                get {
                    try {
                        return ((string)(this[this.tableRealizedEquityOptionGains.BloombergSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloombergSymbol\' in table \'RealizedEquityOptionGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.BloombergSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SharesPerContract {
                get {
                    try {
                        return ((short)(this[this.tableRealizedEquityOptionGains.SharesPerContractColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SharesPerContract\' in table \'RealizedEquityOptionGains\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.SharesPerContractColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningStrategy {
                get {
                    try {
                        return ((string)(this[this.tableRealizedEquityOptionGains.OpeningStrategyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningStrategy\' in table \'RealizedEquityOptionGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.OpeningStrategyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClosingStrategy {
                get {
                    try {
                        return ((string)(this[this.tableRealizedEquityOptionGains.ClosingStrategyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingStrategy\' in table \'RealizedEquityOptionGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRealizedEquityOptionGains.ClosingStrategyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnderlyingSymbolNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.UnderlyingSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnderlyingSymbolNull() {
                this[this.tableRealizedEquityOptionGains.UnderlyingSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionSymbolNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.OptionSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionSymbolNull() {
                this[this.tableRealizedEquityOptionGains.OptionSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpirationDateNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.ExpirationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpirationDateNull() {
                this[this.tableRealizedEquityOptionGains.ExpirationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStrikePriceNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.StrikePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStrikePriceNull() {
                this[this.tableRealizedEquityOptionGains.StrikePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionTypeNameNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.OptionTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionTypeNameNull() {
                this[this.tableRealizedEquityOptionGains.OptionTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeNumberNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.TradeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeNumberNull() {
                this[this.tableRealizedEquityOptionGains.TradeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubAcctNameNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.SubAcctNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubAcctNameNull() {
                this[this.tableRealizedEquityOptionGains.SubAcctNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeVolumeNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.TradeVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeVolumeNull() {
                this[this.tableRealizedEquityOptionGains.TradeVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeDateNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.OpeningTradeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeDateNull() {
                this[this.tableRealizedEquityOptionGains.OpeningTradeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeIdNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.OpeningTradeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeIdNull() {
                this[this.tableRealizedEquityOptionGains.OpeningTradeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeTypeNameNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.OpeningTradeTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeTypeNameNull() {
                this[this.tableRealizedEquityOptionGains.OpeningTradeTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradePriceNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.OpeningTradePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradePriceNull() {
                this[this.tableRealizedEquityOptionGains.OpeningTradePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTotalPriceNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.OpeningTotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTotalPriceNull() {
                this[this.tableRealizedEquityOptionGains.OpeningTotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeMediumNameNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.OpeningTradeMediumNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeMediumNameNull() {
                this[this.tableRealizedEquityOptionGains.OpeningTradeMediumNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTradeDateNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.ClosingTradeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTradeDateNull() {
                this[this.tableRealizedEquityOptionGains.ClosingTradeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTradeIdNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.ClosingTradeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTradeIdNull() {
                this[this.tableRealizedEquityOptionGains.ClosingTradeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTradeTypeNameNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.ClosingTradeTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTradeTypeNameNull() {
                this[this.tableRealizedEquityOptionGains.ClosingTradeTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTradePriceNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.ClosingTradePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTradePriceNull() {
                this[this.tableRealizedEquityOptionGains.ClosingTradePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTotalPriceNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.ClosingTotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTotalPriceNull() {
                this[this.tableRealizedEquityOptionGains.ClosingTotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTradeMediumNameNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.ClosingTradeMediumNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTradeMediumNameNull() {
                this[this.tableRealizedEquityOptionGains.ClosingTradeMediumNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDaysHeldNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.DaysHeldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDaysHeldNull() {
                this[this.tableRealizedEquityOptionGains.DaysHeldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShortTermGainLossNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.ShortTermGainLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShortTermGainLossNull() {
                this[this.tableRealizedEquityOptionGains.ShortTermGainLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLongTermGainLossNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.LongTermGainLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLongTermGainLossNull() {
                this[this.tableRealizedEquityOptionGains.LongTermGainLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCostBasisNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.CostBasisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCostBasisNull() {
                this[this.tableRealizedEquityOptionGains.CostBasisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetProceedsNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.NetProceedsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetProceedsNull() {
                this[this.tableRealizedEquityOptionGains.NetProceedsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionIdNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.OptionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionIdNull() {
                this[this.tableRealizedEquityOptionGains.OptionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionTypeIdNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.OptionTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionTypeIdNull() {
                this[this.tableRealizedEquityOptionGains.OptionTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningUnitCostNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.OpeningUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningUnitCostNull() {
                this[this.tableRealizedEquityOptionGains.OpeningUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingUnitCostNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.ClosingUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingUnitCostNull() {
                this[this.tableRealizedEquityOptionGains.ClosingUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitCostBasisNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.UnitCostBasisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitCostBasisNull() {
                this[this.tableRealizedEquityOptionGains.UnitCostBasisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitNetProceedsNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.UnitNetProceedsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitNetProceedsNull() {
                this[this.tableRealizedEquityOptionGains.UnitNetProceedsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBloombergSymbolNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.BloombergSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBloombergSymbolNull() {
                this[this.tableRealizedEquityOptionGains.BloombergSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSharesPerContractNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.SharesPerContractColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSharesPerContractNull() {
                this[this.tableRealizedEquityOptionGains.SharesPerContractColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningStrategyNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.OpeningStrategyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningStrategyNull() {
                this[this.tableRealizedEquityOptionGains.OpeningStrategyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingStrategyNull() {
                return this.IsNull(this.tableRealizedEquityOptionGains.ClosingStrategyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingStrategyNull() {
                this[this.tableRealizedEquityOptionGains.ClosingStrategyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RealizedIndexOptionGainsRow : global::System.Data.DataRow {
            
            private RealizedIndexOptionGainsDataTable tableRealizedIndexOptionGains;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RealizedIndexOptionGainsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRealizedIndexOptionGains = ((RealizedIndexOptionGainsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnderlyingSymbol {
                get {
                    try {
                        return ((string)(this[this.tableRealizedIndexOptionGains.UnderlyingSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnderlyingSymbol\' in table \'RealizedIndexOptionGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.UnderlyingSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OptionSymbol {
                get {
                    try {
                        return ((string)(this[this.tableRealizedIndexOptionGains.OptionSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionSymbol\' in table \'RealizedIndexOptionGains\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.OptionSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExpirationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRealizedIndexOptionGains.ExpirationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpirationDate\' in table \'RealizedIndexOptionGains\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.ExpirationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double StrikePrice {
                get {
                    try {
                        return ((double)(this[this.tableRealizedIndexOptionGains.StrikePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StrikePrice\' in table \'RealizedIndexOptionGains\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.StrikePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OptionTypeName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedIndexOptionGains.OptionTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionTypeName\' in table \'RealizedIndexOptionGains\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.OptionTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TradeNumber {
                get {
                    try {
                        return ((short)(this[this.tableRealizedIndexOptionGains.TradeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeNumber\' in table \'RealizedIndexOptionGains\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.TradeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubAcctName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedIndexOptionGains.SubAcctNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubAcctName\' in table \'RealizedIndexOptionGains\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.SubAcctNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TradeVolume {
                get {
                    try {
                        return ((double)(this[this.tableRealizedIndexOptionGains.TradeVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeVolume\' in table \'RealizedIndexOptionGains\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.TradeVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OpeningTradeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRealizedIndexOptionGains.OpeningTradeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeDate\' in table \'RealizedIndexOptionGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.OpeningTradeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OpeningTradeId {
                get {
                    try {
                        return ((int)(this[this.tableRealizedIndexOptionGains.OpeningTradeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeId\' in table \'RealizedIndexOptionGains\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.OpeningTradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningTradeTypeName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedIndexOptionGains.OpeningTradeTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeTypeName\' in table \'RealizedIndexOptionGains\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.OpeningTradeTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningTradePrice {
                get {
                    try {
                        return ((double)(this[this.tableRealizedIndexOptionGains.OpeningTradePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradePrice\' in table \'RealizedIndexOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.OpeningTradePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningTotalPrice {
                get {
                    try {
                        return ((double)(this[this.tableRealizedIndexOptionGains.OpeningTotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTotalPrice\' in table \'RealizedIndexOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.OpeningTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningTradeMediumName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedIndexOptionGains.OpeningTradeMediumNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeMediumName\' in table \'RealizedIndexOptionGains\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.OpeningTradeMediumNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ClosingTradeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRealizedIndexOptionGains.ClosingTradeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTradeDate\' in table \'RealizedIndexOptionGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.ClosingTradeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ClosingTradeId {
                get {
                    try {
                        return ((int)(this[this.tableRealizedIndexOptionGains.ClosingTradeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTradeId\' in table \'RealizedIndexOptionGains\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.ClosingTradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClosingTradeTypeName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedIndexOptionGains.ClosingTradeTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTradeTypeName\' in table \'RealizedIndexOptionGains\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.ClosingTradeTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ClosingTradePrice {
                get {
                    try {
                        return ((double)(this[this.tableRealizedIndexOptionGains.ClosingTradePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTradePrice\' in table \'RealizedIndexOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.ClosingTradePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ClosingTotalPrice {
                get {
                    try {
                        return ((double)(this[this.tableRealizedIndexOptionGains.ClosingTotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTotalPrice\' in table \'RealizedIndexOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.ClosingTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClosingTradeMediumName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedIndexOptionGains.ClosingTradeMediumNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTradeMediumName\' in table \'RealizedIndexOptionGains\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.ClosingTradeMediumNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DaysHeld {
                get {
                    try {
                        return ((int)(this[this.tableRealizedIndexOptionGains.DaysHeldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DaysHeld\' in table \'RealizedIndexOptionGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.DaysHeldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShortTermGainLoss {
                get {
                    try {
                        return ((double)(this[this.tableRealizedIndexOptionGains.ShortTermGainLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShortTermGainLoss\' in table \'RealizedIndexOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.ShortTermGainLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LongTermGainLoss {
                get {
                    try {
                        return ((double)(this[this.tableRealizedIndexOptionGains.LongTermGainLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LongTermGainLoss\' in table \'RealizedIndexOptionGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.LongTermGainLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CostBasis {
                get {
                    try {
                        return ((double)(this[this.tableRealizedIndexOptionGains.CostBasisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostBasis\' in table \'RealizedIndexOptionGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.CostBasisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NetProceeds {
                get {
                    try {
                        return ((double)(this[this.tableRealizedIndexOptionGains.NetProceedsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetProceeds\' in table \'RealizedIndexOptionGains\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.NetProceedsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OptionId {
                get {
                    try {
                        return ((int)(this[this.tableRealizedIndexOptionGains.OptionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionId\' in table \'RealizedIndexOptionGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.OptionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short OptionTypeId {
                get {
                    try {
                        return ((short)(this[this.tableRealizedIndexOptionGains.OptionTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionTypeId\' in table \'RealizedIndexOptionGains\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.OptionTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableRealizedIndexOptionGains.OpeningUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningUnitCost\' in table \'RealizedIndexOptionGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.OpeningUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ClosingUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableRealizedIndexOptionGains.ClosingUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingUnitCost\' in table \'RealizedIndexOptionGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.ClosingUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UnitCostBasis {
                get {
                    try {
                        return ((double)(this[this.tableRealizedIndexOptionGains.UnitCostBasisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitCostBasis\' in table \'RealizedIndexOptionGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.UnitCostBasisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UnitNetProceeds {
                get {
                    try {
                        return ((double)(this[this.tableRealizedIndexOptionGains.UnitNetProceedsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitNetProceeds\' in table \'RealizedIndexOptionGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.UnitNetProceedsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BloombergSymbol {
                get {
                    try {
                        return ((string)(this[this.tableRealizedIndexOptionGains.BloombergSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloombergSymbol\' in table \'RealizedIndexOptionGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.BloombergSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SharesPerContract {
                get {
                    try {
                        return ((short)(this[this.tableRealizedIndexOptionGains.SharesPerContractColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SharesPerContract\' in table \'RealizedIndexOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.SharesPerContractColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningStrategy {
                get {
                    try {
                        return ((string)(this[this.tableRealizedIndexOptionGains.OpeningStrategyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningStrategy\' in table \'RealizedIndexOptionGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.OpeningStrategyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClosingStrategy {
                get {
                    try {
                        return ((string)(this[this.tableRealizedIndexOptionGains.ClosingStrategyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingStrategy\' in table \'RealizedIndexOptionGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRealizedIndexOptionGains.ClosingStrategyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnderlyingSymbolNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.UnderlyingSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnderlyingSymbolNull() {
                this[this.tableRealizedIndexOptionGains.UnderlyingSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionSymbolNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.OptionSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionSymbolNull() {
                this[this.tableRealizedIndexOptionGains.OptionSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpirationDateNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.ExpirationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpirationDateNull() {
                this[this.tableRealizedIndexOptionGains.ExpirationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStrikePriceNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.StrikePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStrikePriceNull() {
                this[this.tableRealizedIndexOptionGains.StrikePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionTypeNameNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.OptionTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionTypeNameNull() {
                this[this.tableRealizedIndexOptionGains.OptionTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeNumberNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.TradeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeNumberNull() {
                this[this.tableRealizedIndexOptionGains.TradeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubAcctNameNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.SubAcctNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubAcctNameNull() {
                this[this.tableRealizedIndexOptionGains.SubAcctNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeVolumeNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.TradeVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeVolumeNull() {
                this[this.tableRealizedIndexOptionGains.TradeVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeDateNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.OpeningTradeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeDateNull() {
                this[this.tableRealizedIndexOptionGains.OpeningTradeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeIdNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.OpeningTradeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeIdNull() {
                this[this.tableRealizedIndexOptionGains.OpeningTradeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeTypeNameNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.OpeningTradeTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeTypeNameNull() {
                this[this.tableRealizedIndexOptionGains.OpeningTradeTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradePriceNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.OpeningTradePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradePriceNull() {
                this[this.tableRealizedIndexOptionGains.OpeningTradePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTotalPriceNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.OpeningTotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTotalPriceNull() {
                this[this.tableRealizedIndexOptionGains.OpeningTotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeMediumNameNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.OpeningTradeMediumNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeMediumNameNull() {
                this[this.tableRealizedIndexOptionGains.OpeningTradeMediumNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTradeDateNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.ClosingTradeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTradeDateNull() {
                this[this.tableRealizedIndexOptionGains.ClosingTradeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTradeIdNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.ClosingTradeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTradeIdNull() {
                this[this.tableRealizedIndexOptionGains.ClosingTradeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTradeTypeNameNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.ClosingTradeTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTradeTypeNameNull() {
                this[this.tableRealizedIndexOptionGains.ClosingTradeTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTradePriceNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.ClosingTradePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTradePriceNull() {
                this[this.tableRealizedIndexOptionGains.ClosingTradePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTotalPriceNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.ClosingTotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTotalPriceNull() {
                this[this.tableRealizedIndexOptionGains.ClosingTotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTradeMediumNameNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.ClosingTradeMediumNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTradeMediumNameNull() {
                this[this.tableRealizedIndexOptionGains.ClosingTradeMediumNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDaysHeldNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.DaysHeldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDaysHeldNull() {
                this[this.tableRealizedIndexOptionGains.DaysHeldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShortTermGainLossNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.ShortTermGainLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShortTermGainLossNull() {
                this[this.tableRealizedIndexOptionGains.ShortTermGainLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLongTermGainLossNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.LongTermGainLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLongTermGainLossNull() {
                this[this.tableRealizedIndexOptionGains.LongTermGainLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCostBasisNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.CostBasisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCostBasisNull() {
                this[this.tableRealizedIndexOptionGains.CostBasisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetProceedsNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.NetProceedsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetProceedsNull() {
                this[this.tableRealizedIndexOptionGains.NetProceedsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionIdNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.OptionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionIdNull() {
                this[this.tableRealizedIndexOptionGains.OptionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionTypeIdNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.OptionTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionTypeIdNull() {
                this[this.tableRealizedIndexOptionGains.OptionTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningUnitCostNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.OpeningUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningUnitCostNull() {
                this[this.tableRealizedIndexOptionGains.OpeningUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingUnitCostNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.ClosingUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingUnitCostNull() {
                this[this.tableRealizedIndexOptionGains.ClosingUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitCostBasisNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.UnitCostBasisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitCostBasisNull() {
                this[this.tableRealizedIndexOptionGains.UnitCostBasisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitNetProceedsNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.UnitNetProceedsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitNetProceedsNull() {
                this[this.tableRealizedIndexOptionGains.UnitNetProceedsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBloombergSymbolNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.BloombergSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBloombergSymbolNull() {
                this[this.tableRealizedIndexOptionGains.BloombergSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSharesPerContractNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.SharesPerContractColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSharesPerContractNull() {
                this[this.tableRealizedIndexOptionGains.SharesPerContractColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningStrategyNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.OpeningStrategyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningStrategyNull() {
                this[this.tableRealizedIndexOptionGains.OpeningStrategyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingStrategyNull() {
                return this.IsNull(this.tableRealizedIndexOptionGains.ClosingStrategyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingStrategyNull() {
                this[this.tableRealizedIndexOptionGains.ClosingStrategyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UnrealizedEquityOptionGainsRow : global::System.Data.DataRow {
            
            private UnrealizedEquityOptionGainsDataTable tableUnrealizedEquityOptionGains;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UnrealizedEquityOptionGainsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUnrealizedEquityOptionGains = ((UnrealizedEquityOptionGainsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnderlyingSymbol {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedEquityOptionGains.UnderlyingSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnderlyingSymbol\' in table \'UnrealizedEquityOptionGains\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.UnderlyingSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OptionSymbol {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedEquityOptionGains.OptionSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionSymbol\' in table \'UnrealizedEquityOptionGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.OptionSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExpirationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUnrealizedEquityOptionGains.ExpirationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpirationDate\' in table \'UnrealizedEquityOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.ExpirationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double StrikePrice {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedEquityOptionGains.StrikePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StrikePrice\' in table \'UnrealizedEquityOptionGains\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.StrikePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OptionTypeName {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedEquityOptionGains.OptionTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionTypeName\' in table \'UnrealizedEquityOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.OptionTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short OptionTypeId {
                get {
                    try {
                        return ((short)(this[this.tableUnrealizedEquityOptionGains.OptionTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionTypeId\' in table \'UnrealizedEquityOptionGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.OptionTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TradeNumber {
                get {
                    try {
                        return ((short)(this[this.tableUnrealizedEquityOptionGains.TradeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeNumber\' in table \'UnrealizedEquityOptionGains\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.TradeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubAcctName {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedEquityOptionGains.SubAcctNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubAcctName\' in table \'UnrealizedEquityOptionGains\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.SubAcctNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TradeVolume {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedEquityOptionGains.TradeVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeVolume\' in table \'UnrealizedEquityOptionGains\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.TradeVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OpeningTradeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUnrealizedEquityOptionGains.OpeningTradeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeDate\' in table \'UnrealizedEquityOptionGains\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.OpeningTradeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OpeningTradeId {
                get {
                    try {
                        return ((int)(this[this.tableUnrealizedEquityOptionGains.OpeningTradeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeId\' in table \'UnrealizedEquityOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.OpeningTradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningTradeTypeName {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedEquityOptionGains.OpeningTradeTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeTypeName\' in table \'UnrealizedEquityOptionGains" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.OpeningTradeTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningTradePrice {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedEquityOptionGains.OpeningTradePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradePrice\' in table \'UnrealizedEquityOptionGains\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.OpeningTradePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningTotalPrice {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedEquityOptionGains.OpeningTotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTotalPrice\' in table \'UnrealizedEquityOptionGains\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.OpeningTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningTradeMediumName {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedEquityOptionGains.OpeningTradeMediumNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeMediumName\' in table \'UnrealizedEquityOptionGai" +
                                "ns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.OpeningTradeMediumNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrentPrice {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedEquityOptionGains.CurrentPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentPrice\' in table \'UnrealizedEquityOptionGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.CurrentPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MarketValue {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedEquityOptionGains.MarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarketValue\' in table \'UnrealizedEquityOptionGains\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.MarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double GainOrLoss {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedEquityOptionGains.GainOrLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GainOrLoss\' in table \'UnrealizedEquityOptionGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.GainOrLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PriceOverrideDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUnrealizedEquityOptionGains.PriceOverrideDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceOverrideDate\' in table \'UnrealizedEquityOptionGains\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.PriceOverrideDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PriceOverrideUser {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedEquityOptionGains.PriceOverrideUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceOverrideUser\' in table \'UnrealizedEquityOptionGains\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.PriceOverrideUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PriceOverrideFlag {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedEquityOptionGains.PriceOverrideFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceOverrideFlag\' in table \'UnrealizedEquityOptionGains\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.PriceOverrideFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginalPrice {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedEquityOptionGains.OriginalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalPrice\' in table \'UnrealizedEquityOptionGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.OriginalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OptionId {
                get {
                    try {
                        return ((int)(this[this.tableUnrealizedEquityOptionGains.OptionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionId\' in table \'UnrealizedEquityOptionGains\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.OptionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BloombergSymbol {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedEquityOptionGains.BloombergSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloombergSymbol\' in table \'UnrealizedEquityOptionGains\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.BloombergSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedEquityOptionGains.OpeningUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningUnitCost\' in table \'UnrealizedEquityOptionGains\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.OpeningUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningStrategy {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedEquityOptionGains.OpeningStrategyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningStrategy\' in table \'UnrealizedEquityOptionGains\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedEquityOptionGains.OpeningStrategyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnderlyingSymbolNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.UnderlyingSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnderlyingSymbolNull() {
                this[this.tableUnrealizedEquityOptionGains.UnderlyingSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionSymbolNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.OptionSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionSymbolNull() {
                this[this.tableUnrealizedEquityOptionGains.OptionSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpirationDateNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.ExpirationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpirationDateNull() {
                this[this.tableUnrealizedEquityOptionGains.ExpirationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStrikePriceNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.StrikePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStrikePriceNull() {
                this[this.tableUnrealizedEquityOptionGains.StrikePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionTypeNameNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.OptionTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionTypeNameNull() {
                this[this.tableUnrealizedEquityOptionGains.OptionTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionTypeIdNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.OptionTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionTypeIdNull() {
                this[this.tableUnrealizedEquityOptionGains.OptionTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeNumberNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.TradeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeNumberNull() {
                this[this.tableUnrealizedEquityOptionGains.TradeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubAcctNameNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.SubAcctNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubAcctNameNull() {
                this[this.tableUnrealizedEquityOptionGains.SubAcctNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeVolumeNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.TradeVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeVolumeNull() {
                this[this.tableUnrealizedEquityOptionGains.TradeVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeDateNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.OpeningTradeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeDateNull() {
                this[this.tableUnrealizedEquityOptionGains.OpeningTradeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeIdNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.OpeningTradeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeIdNull() {
                this[this.tableUnrealizedEquityOptionGains.OpeningTradeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeTypeNameNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.OpeningTradeTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeTypeNameNull() {
                this[this.tableUnrealizedEquityOptionGains.OpeningTradeTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradePriceNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.OpeningTradePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradePriceNull() {
                this[this.tableUnrealizedEquityOptionGains.OpeningTradePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTotalPriceNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.OpeningTotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTotalPriceNull() {
                this[this.tableUnrealizedEquityOptionGains.OpeningTotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeMediumNameNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.OpeningTradeMediumNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeMediumNameNull() {
                this[this.tableUnrealizedEquityOptionGains.OpeningTradeMediumNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentPriceNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.CurrentPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentPriceNull() {
                this[this.tableUnrealizedEquityOptionGains.CurrentPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarketValueNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.MarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarketValueNull() {
                this[this.tableUnrealizedEquityOptionGains.MarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGainOrLossNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.GainOrLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGainOrLossNull() {
                this[this.tableUnrealizedEquityOptionGains.GainOrLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceOverrideDateNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.PriceOverrideDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceOverrideDateNull() {
                this[this.tableUnrealizedEquityOptionGains.PriceOverrideDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceOverrideUserNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.PriceOverrideUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceOverrideUserNull() {
                this[this.tableUnrealizedEquityOptionGains.PriceOverrideUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceOverrideFlagNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.PriceOverrideFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceOverrideFlagNull() {
                this[this.tableUnrealizedEquityOptionGains.PriceOverrideFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalPriceNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.OriginalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalPriceNull() {
                this[this.tableUnrealizedEquityOptionGains.OriginalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionIdNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.OptionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionIdNull() {
                this[this.tableUnrealizedEquityOptionGains.OptionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBloombergSymbolNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.BloombergSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBloombergSymbolNull() {
                this[this.tableUnrealizedEquityOptionGains.BloombergSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningUnitCostNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.OpeningUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningUnitCostNull() {
                this[this.tableUnrealizedEquityOptionGains.OpeningUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningStrategyNull() {
                return this.IsNull(this.tableUnrealizedEquityOptionGains.OpeningStrategyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningStrategyNull() {
                this[this.tableUnrealizedEquityOptionGains.OpeningStrategyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UnrealizedIndexOptionGainsRow : global::System.Data.DataRow {
            
            private UnrealizedIndexOptionGainsDataTable tableUnrealizedIndexOptionGains;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UnrealizedIndexOptionGainsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUnrealizedIndexOptionGains = ((UnrealizedIndexOptionGainsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnderlyingSymbol {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedIndexOptionGains.UnderlyingSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnderlyingSymbol\' in table \'UnrealizedIndexOptionGains\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.UnderlyingSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OptionSymbol {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedIndexOptionGains.OptionSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionSymbol\' in table \'UnrealizedIndexOptionGains\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.OptionSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExpirationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUnrealizedIndexOptionGains.ExpirationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpirationDate\' in table \'UnrealizedIndexOptionGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.ExpirationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double StrikePrice {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedIndexOptionGains.StrikePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StrikePrice\' in table \'UnrealizedIndexOptionGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.StrikePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OptionTypeName {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedIndexOptionGains.OptionTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionTypeName\' in table \'UnrealizedIndexOptionGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.OptionTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short OptionTypeId {
                get {
                    try {
                        return ((short)(this[this.tableUnrealizedIndexOptionGains.OptionTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionTypeId\' in table \'UnrealizedIndexOptionGains\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.OptionTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TradeNumber {
                get {
                    try {
                        return ((short)(this[this.tableUnrealizedIndexOptionGains.TradeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeNumber\' in table \'UnrealizedIndexOptionGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.TradeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubAcctName {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedIndexOptionGains.SubAcctNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubAcctName\' in table \'UnrealizedIndexOptionGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.SubAcctNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TradeVolume {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedIndexOptionGains.TradeVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeVolume\' in table \'UnrealizedIndexOptionGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.TradeVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OpeningTradeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUnrealizedIndexOptionGains.OpeningTradeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeDate\' in table \'UnrealizedIndexOptionGains\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.OpeningTradeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OpeningTradeId {
                get {
                    try {
                        return ((int)(this[this.tableUnrealizedIndexOptionGains.OpeningTradeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeId\' in table \'UnrealizedIndexOptionGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.OpeningTradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningTradeTypeName {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedIndexOptionGains.OpeningTradeTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeTypeName\' in table \'UnrealizedIndexOptionGains\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.OpeningTradeTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningTradePrice {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedIndexOptionGains.OpeningTradePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradePrice\' in table \'UnrealizedIndexOptionGains\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.OpeningTradePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningTotalPrice {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedIndexOptionGains.OpeningTotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTotalPrice\' in table \'UnrealizedIndexOptionGains\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.OpeningTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningTradeMediumName {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedIndexOptionGains.OpeningTradeMediumNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeMediumName\' in table \'UnrealizedIndexOptionGain" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.OpeningTradeMediumNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrentPrice {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedIndexOptionGains.CurrentPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentPrice\' in table \'UnrealizedIndexOptionGains\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.CurrentPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MarketValue {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedIndexOptionGains.MarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarketValue\' in table \'UnrealizedIndexOptionGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.MarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double GainOrLoss {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedIndexOptionGains.GainOrLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GainOrLoss\' in table \'UnrealizedIndexOptionGains\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.GainOrLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PriceOverrideDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUnrealizedIndexOptionGains.PriceOverrideDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceOverrideDate\' in table \'UnrealizedIndexOptionGains\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.PriceOverrideDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PriceOverrideUser {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedIndexOptionGains.PriceOverrideUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceOverrideUser\' in table \'UnrealizedIndexOptionGains\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.PriceOverrideUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PriceOverrideFlag {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedIndexOptionGains.PriceOverrideFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceOverrideFlag\' in table \'UnrealizedIndexOptionGains\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.PriceOverrideFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginalPrice {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedIndexOptionGains.OriginalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalPrice\' in table \'UnrealizedIndexOptionGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.OriginalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OptionId {
                get {
                    try {
                        return ((int)(this[this.tableUnrealizedIndexOptionGains.OptionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionId\' in table \'UnrealizedIndexOptionGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.OptionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BloombergSymbol {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedIndexOptionGains.BloombergSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloombergSymbol\' in table \'UnrealizedIndexOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.BloombergSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedIndexOptionGains.OpeningUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningUnitCost\' in table \'UnrealizedIndexOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.OpeningUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningStrategy {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedIndexOptionGains.OpeningStrategyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningStrategy\' in table \'UnrealizedIndexOptionGains\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedIndexOptionGains.OpeningStrategyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnderlyingSymbolNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.UnderlyingSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnderlyingSymbolNull() {
                this[this.tableUnrealizedIndexOptionGains.UnderlyingSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionSymbolNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.OptionSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionSymbolNull() {
                this[this.tableUnrealizedIndexOptionGains.OptionSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpirationDateNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.ExpirationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpirationDateNull() {
                this[this.tableUnrealizedIndexOptionGains.ExpirationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStrikePriceNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.StrikePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStrikePriceNull() {
                this[this.tableUnrealizedIndexOptionGains.StrikePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionTypeNameNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.OptionTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionTypeNameNull() {
                this[this.tableUnrealizedIndexOptionGains.OptionTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionTypeIdNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.OptionTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionTypeIdNull() {
                this[this.tableUnrealizedIndexOptionGains.OptionTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeNumberNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.TradeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeNumberNull() {
                this[this.tableUnrealizedIndexOptionGains.TradeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubAcctNameNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.SubAcctNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubAcctNameNull() {
                this[this.tableUnrealizedIndexOptionGains.SubAcctNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeVolumeNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.TradeVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeVolumeNull() {
                this[this.tableUnrealizedIndexOptionGains.TradeVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeDateNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.OpeningTradeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeDateNull() {
                this[this.tableUnrealizedIndexOptionGains.OpeningTradeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeIdNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.OpeningTradeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeIdNull() {
                this[this.tableUnrealizedIndexOptionGains.OpeningTradeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeTypeNameNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.OpeningTradeTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeTypeNameNull() {
                this[this.tableUnrealizedIndexOptionGains.OpeningTradeTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradePriceNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.OpeningTradePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradePriceNull() {
                this[this.tableUnrealizedIndexOptionGains.OpeningTradePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTotalPriceNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.OpeningTotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTotalPriceNull() {
                this[this.tableUnrealizedIndexOptionGains.OpeningTotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeMediumNameNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.OpeningTradeMediumNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeMediumNameNull() {
                this[this.tableUnrealizedIndexOptionGains.OpeningTradeMediumNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentPriceNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.CurrentPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentPriceNull() {
                this[this.tableUnrealizedIndexOptionGains.CurrentPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarketValueNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.MarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarketValueNull() {
                this[this.tableUnrealizedIndexOptionGains.MarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGainOrLossNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.GainOrLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGainOrLossNull() {
                this[this.tableUnrealizedIndexOptionGains.GainOrLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceOverrideDateNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.PriceOverrideDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceOverrideDateNull() {
                this[this.tableUnrealizedIndexOptionGains.PriceOverrideDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceOverrideUserNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.PriceOverrideUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceOverrideUserNull() {
                this[this.tableUnrealizedIndexOptionGains.PriceOverrideUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceOverrideFlagNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.PriceOverrideFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceOverrideFlagNull() {
                this[this.tableUnrealizedIndexOptionGains.PriceOverrideFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalPriceNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.OriginalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalPriceNull() {
                this[this.tableUnrealizedIndexOptionGains.OriginalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionIdNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.OptionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionIdNull() {
                this[this.tableUnrealizedIndexOptionGains.OptionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBloombergSymbolNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.BloombergSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBloombergSymbolNull() {
                this[this.tableUnrealizedIndexOptionGains.BloombergSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningUnitCostNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.OpeningUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningUnitCostNull() {
                this[this.tableUnrealizedIndexOptionGains.OpeningUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningStrategyNull() {
                return this.IsNull(this.tableUnrealizedIndexOptionGains.OpeningStrategyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningStrategyNull() {
                this[this.tableUnrealizedIndexOptionGains.OpeningStrategyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TaxlotSummaryReportRow : global::System.Data.DataRow {
            
            private TaxlotSummaryReportDataTable tableTaxlotSummaryReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TaxlotSummaryReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTaxlotSummaryReport = ((TaxlotSummaryReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InstrumentType {
                get {
                    try {
                        return ((int)(this[this.tableTaxlotSummaryReport.InstrumentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstrumentType\' in table \'TaxlotSummaryReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxlotSummaryReport.InstrumentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubAcctName {
                get {
                    try {
                        return ((string)(this[this.tableTaxlotSummaryReport.SubAcctNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubAcctName\' in table \'TaxlotSummaryReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxlotSummaryReport.SubAcctNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Symbol {
                get {
                    try {
                        return ((string)(this[this.tableTaxlotSummaryReport.SymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Symbol\' in table \'TaxlotSummaryReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxlotSummaryReport.SymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExpirationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTaxlotSummaryReport.ExpirationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpirationDate\' in table \'TaxlotSummaryReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxlotSummaryReport.ExpirationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double StrikePrice {
                get {
                    try {
                        return ((double)(this[this.tableTaxlotSummaryReport.StrikePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StrikePrice\' in table \'TaxlotSummaryReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxlotSummaryReport.StrikePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OptionTypeName {
                get {
                    try {
                        return ((string)(this[this.tableTaxlotSummaryReport.OptionTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionTypeName\' in table \'TaxlotSummaryReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxlotSummaryReport.OptionTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double StartingUnrealizedGainLoss {
                get {
                    try {
                        return ((double)(this[this.tableTaxlotSummaryReport.StartingUnrealizedGainLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartingUnrealizedGainLoss\' in table \'TaxlotSummaryReport\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxlotSummaryReport.StartingUnrealizedGainLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double EndingUnrealizedGainLoss {
                get {
                    try {
                        return ((double)(this[this.tableTaxlotSummaryReport.EndingUnrealizedGainLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndingUnrealizedGainLoss\' in table \'TaxlotSummaryReport\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxlotSummaryReport.EndingUnrealizedGainLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ChangeInUnrealizedGainLoss {
                get {
                    try {
                        return ((double)(this[this.tableTaxlotSummaryReport.ChangeInUnrealizedGainLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangeInUnrealizedGainLoss\' in table \'TaxlotSummaryReport\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxlotSummaryReport.ChangeInUnrealizedGainLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RealizedGainLoss {
                get {
                    try {
                        return ((double)(this[this.tableTaxlotSummaryReport.RealizedGainLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RealizedGainLoss\' in table \'TaxlotSummaryReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTaxlotSummaryReport.RealizedGainLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalGainLoss {
                get {
                    try {
                        return ((double)(this[this.tableTaxlotSummaryReport.TotalGainLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalGainLoss\' in table \'TaxlotSummaryReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxlotSummaryReport.TotalGainLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExpirationDateString {
                get {
                    try {
                        return ((string)(this[this.tableTaxlotSummaryReport.ExpirationDateStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpirationDateString\' in table \'TaxlotSummaryReport\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTaxlotSummaryReport.ExpirationDateStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StrikePriceString {
                get {
                    try {
                        return ((string)(this[this.tableTaxlotSummaryReport.StrikePriceStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StrikePriceString\' in table \'TaxlotSummaryReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTaxlotSummaryReport.StrikePriceStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Underlying {
                get {
                    try {
                        return ((string)(this[this.tableTaxlotSummaryReport.UnderlyingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Underlying\' in table \'TaxlotSummaryReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxlotSummaryReport.UnderlyingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstrumentTypeNull() {
                return this.IsNull(this.tableTaxlotSummaryReport.InstrumentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstrumentTypeNull() {
                this[this.tableTaxlotSummaryReport.InstrumentTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubAcctNameNull() {
                return this.IsNull(this.tableTaxlotSummaryReport.SubAcctNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubAcctNameNull() {
                this[this.tableTaxlotSummaryReport.SubAcctNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSymbolNull() {
                return this.IsNull(this.tableTaxlotSummaryReport.SymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSymbolNull() {
                this[this.tableTaxlotSummaryReport.SymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpirationDateNull() {
                return this.IsNull(this.tableTaxlotSummaryReport.ExpirationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpirationDateNull() {
                this[this.tableTaxlotSummaryReport.ExpirationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStrikePriceNull() {
                return this.IsNull(this.tableTaxlotSummaryReport.StrikePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStrikePriceNull() {
                this[this.tableTaxlotSummaryReport.StrikePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOptionTypeNameNull() {
                return this.IsNull(this.tableTaxlotSummaryReport.OptionTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOptionTypeNameNull() {
                this[this.tableTaxlotSummaryReport.OptionTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStartingUnrealizedGainLossNull() {
                return this.IsNull(this.tableTaxlotSummaryReport.StartingUnrealizedGainLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStartingUnrealizedGainLossNull() {
                this[this.tableTaxlotSummaryReport.StartingUnrealizedGainLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEndingUnrealizedGainLossNull() {
                return this.IsNull(this.tableTaxlotSummaryReport.EndingUnrealizedGainLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEndingUnrealizedGainLossNull() {
                this[this.tableTaxlotSummaryReport.EndingUnrealizedGainLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChangeInUnrealizedGainLossNull() {
                return this.IsNull(this.tableTaxlotSummaryReport.ChangeInUnrealizedGainLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChangeInUnrealizedGainLossNull() {
                this[this.tableTaxlotSummaryReport.ChangeInUnrealizedGainLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRealizedGainLossNull() {
                return this.IsNull(this.tableTaxlotSummaryReport.RealizedGainLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRealizedGainLossNull() {
                this[this.tableTaxlotSummaryReport.RealizedGainLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalGainLossNull() {
                return this.IsNull(this.tableTaxlotSummaryReport.TotalGainLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalGainLossNull() {
                this[this.tableTaxlotSummaryReport.TotalGainLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpirationDateStringNull() {
                return this.IsNull(this.tableTaxlotSummaryReport.ExpirationDateStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpirationDateStringNull() {
                this[this.tableTaxlotSummaryReport.ExpirationDateStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStrikePriceStringNull() {
                return this.IsNull(this.tableTaxlotSummaryReport.StrikePriceStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStrikePriceStringNull() {
                this[this.tableTaxlotSummaryReport.StrikePriceStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnderlyingNull() {
                return this.IsNull(this.tableTaxlotSummaryReport.UnderlyingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnderlyingNull() {
                this[this.tableTaxlotSummaryReport.UnderlyingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class p_get_importable_trademediaRow : global::System.Data.DataRow {
            
            private p_get_importable_trademediaDataTable tablep_get_importable_trademedia;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal p_get_importable_trademediaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablep_get_importable_trademedia = ((p_get_importable_trademediaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradeMediumName {
                get {
                    return ((string)(this[this.tablep_get_importable_trademedia.TradeMediumNameColumn]));
                }
                set {
                    this[this.tablep_get_importable_trademedia.TradeMediumNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TicketChargeApplied {
                get {
                    return ((bool)(this[this.tablep_get_importable_trademedia.TicketChargeAppliedColumn]));
                }
                set {
                    this[this.tablep_get_importable_trademedia.TicketChargeAppliedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CommissionPerShare {
                get {
                    try {
                        return ((double)(this[this.tablep_get_importable_trademedia.CommissionPerShareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommissionPerShare\' in table \'p_get_importable_trademedia\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_importable_trademedia.CommissionPerShareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SECFeePerDollar {
                get {
                    try {
                        return ((double)(this[this.tablep_get_importable_trademedia.SECFeePerDollarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SECFeePerDollar\' in table \'p_get_importable_trademedia\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_get_importable_trademedia.SECFeePerDollarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommissionPerShareNull() {
                return this.IsNull(this.tablep_get_importable_trademedia.CommissionPerShareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommissionPerShareNull() {
                this[this.tablep_get_importable_trademedia.CommissionPerShareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSECFeePerDollarNull() {
                return this.IsNull(this.tablep_get_importable_trademedia.SECFeePerDollarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSECFeePerDollarNull() {
                this[this.tablep_get_importable_trademedia.SECFeePerDollarColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class p_generate_stock_daily_returns_reportRow : global::System.Data.DataRow {
            
            private p_generate_stock_daily_returns_reportDataTable tablep_generate_stock_daily_returns_report;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal p_generate_stock_daily_returns_reportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablep_generate_stock_daily_returns_report = ((p_generate_stock_daily_returns_reportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TRADE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tablep_generate_stock_daily_returns_report.TRADE_DATEColumn]));
                }
                set {
                    this[this.tablep_generate_stock_daily_returns_report.TRADE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Column1 {
                get {
                    try {
                        return ((string)(this[this.tablep_generate_stock_daily_returns_report.Column1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Column1\' in table \'p_generate_stock_daily_returns_report\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_daily_returns_report.Column1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal STARTING_STOCK_PORTFOLIO_MARKET_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_daily_returns_report.STARTING_STOCK_PORTFOLIO_MARKET_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STARTING STOCK PORTFOLIO MARKET VALUE\' in table \'p_generate" +
                                "_stock_daily_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_daily_returns_report.STARTING_STOCK_PORTFOLIO_MARKET_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal _STOCK_PORTFOLIO_PURCHASES__INCL__COMM_ {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_PURCHASES__INCL__COMM_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK PORTFOLIO PURCHASES (INCL_ COMM)\' in table \'p_generat" +
                                "e_stock_daily_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_PURCHASES__INCL__COMM_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal _STOCK_PORTFOLIO_GAIN_LOSS__TOTAL {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK PORTFOLIO GAIN(LOSS) TOTAL\' in table \'p_generate_stoc" +
                                "k_daily_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal _STOCK_PORTFOLIO_SALES__INCL__COMM_ {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_SALES__INCL__COMM_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK PORTFOLIO SALES (INCL_ COMM)\' in table \'p_generate_st" +
                                "ock_daily_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_SALES__INCL__COMM_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ENDING_STOCK_PORTFOLIO_MARKET_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_daily_returns_report.ENDING_STOCK_PORTFOLIO_MARKET_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENDING STOCK PORTFOLIO MARKET VALUE\' in table \'p_generate_s" +
                                "tock_daily_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_daily_returns_report.ENDING_STOCK_PORTFOLIO_MARKET_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Column2 {
                get {
                    try {
                        return ((string)(this[this.tablep_generate_stock_daily_returns_report.Column2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Column2\' in table \'p_generate_stock_daily_returns_report\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_daily_returns_report.Column2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal STOCK_PORTFOLIO_RETURN {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_daily_returns_report.STOCK_PORTFOLIO_RETURNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK PORTFOLIO RETURN\' in table \'p_generate_stock_daily_re" +
                                "turns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_daily_returns_report.STOCK_PORTFOLIO_RETURNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Column3 {
                get {
                    try {
                        return ((string)(this[this.tablep_generate_stock_daily_returns_report.Column3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Column3\' in table \'p_generate_stock_daily_returns_report\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_daily_returns_report.Column3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal _STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM {
                get {
                    return ((decimal)(this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERMColumn]));
                }
                set {
                    this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal _STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM {
                get {
                    return ((decimal)(this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERMColumn]));
                }
                set {
                    this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal _STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK PORTFOLIO GAIN(LOSS) UNREALIZED\' in table \'p_generate" +
                                "_stock_daily_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal _STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_ {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK PORTFOLIO GAIN(LOSS) TOTAL \' in table \'p_generate_sto" +
                                "ck_daily_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIVIDENDS {
                get {
                    return ((decimal)(this[this.tablep_generate_stock_daily_returns_report.DIVIDENDSColumn]));
                }
                set {
                    this[this.tablep_generate_stock_daily_returns_report.DIVIDENDSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColumn1Null() {
                return this.IsNull(this.tablep_generate_stock_daily_returns_report.Column1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColumn1Null() {
                this[this.tablep_generate_stock_daily_returns_report.Column1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTARTING_STOCK_PORTFOLIO_MARKET_VALUENull() {
                return this.IsNull(this.tablep_generate_stock_daily_returns_report.STARTING_STOCK_PORTFOLIO_MARKET_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTARTING_STOCK_PORTFOLIO_MARKET_VALUENull() {
                this[this.tablep_generate_stock_daily_returns_report.STARTING_STOCK_PORTFOLIO_MARKET_VALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_STOCK_PORTFOLIO_PURCHASES__INCL__COMM_Null() {
                return this.IsNull(this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_PURCHASES__INCL__COMM_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_STOCK_PORTFOLIO_PURCHASES__INCL__COMM_Null() {
                this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_PURCHASES__INCL__COMM_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_STOCK_PORTFOLIO_GAIN_LOSS__TOTALNull() {
                return this.IsNull(this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_STOCK_PORTFOLIO_GAIN_LOSS__TOTALNull() {
                this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_STOCK_PORTFOLIO_SALES__INCL__COMM_Null() {
                return this.IsNull(this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_SALES__INCL__COMM_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_STOCK_PORTFOLIO_SALES__INCL__COMM_Null() {
                this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_SALES__INCL__COMM_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsENDING_STOCK_PORTFOLIO_MARKET_VALUENull() {
                return this.IsNull(this.tablep_generate_stock_daily_returns_report.ENDING_STOCK_PORTFOLIO_MARKET_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetENDING_STOCK_PORTFOLIO_MARKET_VALUENull() {
                this[this.tablep_generate_stock_daily_returns_report.ENDING_STOCK_PORTFOLIO_MARKET_VALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColumn2Null() {
                return this.IsNull(this.tablep_generate_stock_daily_returns_report.Column2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColumn2Null() {
                this[this.tablep_generate_stock_daily_returns_report.Column2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTOCK_PORTFOLIO_RETURNNull() {
                return this.IsNull(this.tablep_generate_stock_daily_returns_report.STOCK_PORTFOLIO_RETURNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTOCK_PORTFOLIO_RETURNNull() {
                this[this.tablep_generate_stock_daily_returns_report.STOCK_PORTFOLIO_RETURNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColumn3Null() {
                return this.IsNull(this.tablep_generate_stock_daily_returns_report.Column3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColumn3Null() {
                this[this.tablep_generate_stock_daily_returns_report.Column3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZEDNull() {
                return this.IsNull(this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZEDNull() {
                this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_Null() {
                return this.IsNull(this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_Null() {
                this[this.tablep_generate_stock_daily_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class p_generate_stock_monthly_returns_reportRow : global::System.Data.DataRow {
            
            private p_generate_stock_monthly_returns_reportDataTable tablep_generate_stock_monthly_returns_report;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal p_generate_stock_monthly_returns_reportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablep_generate_stock_monthly_returns_report = ((p_generate_stock_monthly_returns_reportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MONTH {
                get {
                    try {
                        return ((string)(this[this.tablep_generate_stock_monthly_returns_report.MONTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MONTH\' in table \'p_generate_stock_monthly_returns_report\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_monthly_returns_report.MONTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string YEAR {
                get {
                    try {
                        return ((string)(this[this.tablep_generate_stock_monthly_returns_report.YEARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YEAR\' in table \'p_generate_stock_monthly_returns_report\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_monthly_returns_report.YEARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal STARTING_STOCK_PORTFOLIO_MARKET_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_monthly_returns_report.STARTING_STOCK_PORTFOLIO_MARKET_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STARTING STOCK PORTFOLIO MARKET VALUE\' in table \'p_generate" +
                                "_stock_monthly_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_monthly_returns_report.STARTING_STOCK_PORTFOLIO_MARKET_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal _STOCK_PORTFOLIO_PURCHASES__INCL__COMM_ {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_PURCHASES__INCL__COMM_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK PORTFOLIO PURCHASES (INCL_ COMM)\' in table \'p_generat" +
                                "e_stock_monthly_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_PURCHASES__INCL__COMM_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal _STOCK_PORTFOLIO_GAIN_LOSS__TOTAL {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK PORTFOLIO GAIN(LOSS) TOTAL\' in table \'p_generate_stoc" +
                                "k_monthly_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal _STOCK_PORTFOLIO_SALES__INCL__COMM_ {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_SALES__INCL__COMM_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK PORTFOLIO SALES (INCL_ COMM)\' in table \'p_generate_st" +
                                "ock_monthly_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_SALES__INCL__COMM_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ENDING_STOCK_PORTFOLIO_MARKET_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_monthly_returns_report.ENDING_STOCK_PORTFOLIO_MARKET_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENDING STOCK PORTFOLIO MARKET VALUE\' in table \'p_generate_s" +
                                "tock_monthly_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_monthly_returns_report.ENDING_STOCK_PORTFOLIO_MARKET_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Column1 {
                get {
                    try {
                        return ((string)(this[this.tablep_generate_stock_monthly_returns_report.Column1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Column1\' in table \'p_generate_stock_monthly_returns_report\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_monthly_returns_report.Column1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal STOCK_PORTFOLIO_RETURN {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_monthly_returns_report.STOCK_PORTFOLIO_RETURNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK PORTFOLIO RETURN\' in table \'p_generate_stock_monthly_" +
                                "returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_monthly_returns_report.STOCK_PORTFOLIO_RETURNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Column2 {
                get {
                    try {
                        return ((string)(this[this.tablep_generate_stock_monthly_returns_report.Column2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Column2\' in table \'p_generate_stock_monthly_returns_report\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_monthly_returns_report.Column2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal _STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERM {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK PORTFOLIO GAIN(LOSS) SHORT-TERM\' in table \'p_generate" +
                                "_stock_monthly_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal _STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERM {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK PORTFOLIO GAIN(LOSS) LONG-TERM\' in table \'p_generate_" +
                                "stock_monthly_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal _STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZED {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK PORTFOLIO GAIN(LOSS) UNREALIZED\' in table \'p_generate" +
                                "_stock_monthly_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal _STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_ {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK PORTFOLIO GAIN(LOSS) TOTAL \' in table \'p_generate_sto" +
                                "ck_monthly_returns_report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIVIDENDS {
                get {
                    try {
                        return ((decimal)(this[this.tablep_generate_stock_monthly_returns_report.DIVIDENDSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DIVIDENDS\' in table \'p_generate_stock_monthly_returns_repor" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_generate_stock_monthly_returns_report.DIVIDENDSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMONTHNull() {
                return this.IsNull(this.tablep_generate_stock_monthly_returns_report.MONTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMONTHNull() {
                this[this.tablep_generate_stock_monthly_returns_report.MONTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsYEARNull() {
                return this.IsNull(this.tablep_generate_stock_monthly_returns_report.YEARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYEARNull() {
                this[this.tablep_generate_stock_monthly_returns_report.YEARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTARTING_STOCK_PORTFOLIO_MARKET_VALUENull() {
                return this.IsNull(this.tablep_generate_stock_monthly_returns_report.STARTING_STOCK_PORTFOLIO_MARKET_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTARTING_STOCK_PORTFOLIO_MARKET_VALUENull() {
                this[this.tablep_generate_stock_monthly_returns_report.STARTING_STOCK_PORTFOLIO_MARKET_VALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_STOCK_PORTFOLIO_PURCHASES__INCL__COMM_Null() {
                return this.IsNull(this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_PURCHASES__INCL__COMM_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_STOCK_PORTFOLIO_PURCHASES__INCL__COMM_Null() {
                this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_PURCHASES__INCL__COMM_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_STOCK_PORTFOLIO_GAIN_LOSS__TOTALNull() {
                return this.IsNull(this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_STOCK_PORTFOLIO_GAIN_LOSS__TOTALNull() {
                this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_STOCK_PORTFOLIO_SALES__INCL__COMM_Null() {
                return this.IsNull(this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_SALES__INCL__COMM_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_STOCK_PORTFOLIO_SALES__INCL__COMM_Null() {
                this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_SALES__INCL__COMM_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsENDING_STOCK_PORTFOLIO_MARKET_VALUENull() {
                return this.IsNull(this.tablep_generate_stock_monthly_returns_report.ENDING_STOCK_PORTFOLIO_MARKET_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetENDING_STOCK_PORTFOLIO_MARKET_VALUENull() {
                this[this.tablep_generate_stock_monthly_returns_report.ENDING_STOCK_PORTFOLIO_MARKET_VALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColumn1Null() {
                return this.IsNull(this.tablep_generate_stock_monthly_returns_report.Column1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColumn1Null() {
                this[this.tablep_generate_stock_monthly_returns_report.Column1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTOCK_PORTFOLIO_RETURNNull() {
                return this.IsNull(this.tablep_generate_stock_monthly_returns_report.STOCK_PORTFOLIO_RETURNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTOCK_PORTFOLIO_RETURNNull() {
                this[this.tablep_generate_stock_monthly_returns_report.STOCK_PORTFOLIO_RETURNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColumn2Null() {
                return this.IsNull(this.tablep_generate_stock_monthly_returns_report.Column2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColumn2Null() {
                this[this.tablep_generate_stock_monthly_returns_report.Column2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERMNull() {
                return this.IsNull(this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERMNull() {
                this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__SHORT_TERMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERMNull() {
                return this.IsNull(this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERMNull() {
                this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__LONG_TERMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZEDNull() {
                return this.IsNull(this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZEDNull() {
                this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__UNREALIZEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_Null() {
                return this.IsNull(this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_Null() {
                this[this.tablep_generate_stock_monthly_returns_report._STOCK_PORTFOLIO_GAIN_LOSS__TOTAL_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIVIDENDSNull() {
                return this.IsNull(this.tablep_generate_stock_monthly_returns_report.DIVIDENDSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIVIDENDSNull() {
                this[this.tablep_generate_stock_monthly_returns_report.DIVIDENDSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UnrealizedFuturesGainsRow : global::System.Data.DataRow {
            
            private UnrealizedFuturesGainsDataTable tableUnrealizedFuturesGains;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UnrealizedFuturesGainsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUnrealizedFuturesGains = ((UnrealizedFuturesGainsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FuturesSymbol {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedFuturesGains.FuturesSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FuturesSymbol\' in table \'UnrealizedFuturesGains\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.FuturesSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Month {
                get {
                    try {
                        return ((int)(this[this.tableUnrealizedFuturesGains.MonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Month\' in table \'UnrealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.MonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Year {
                get {
                    try {
                        return ((int)(this[this.tableUnrealizedFuturesGains.YearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Year\' in table \'UnrealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.YearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FuturesId {
                get {
                    try {
                        return ((int)(this[this.tableUnrealizedFuturesGains.FuturesIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FuturesId\' in table \'UnrealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.FuturesIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TradeNumber {
                get {
                    try {
                        return ((short)(this[this.tableUnrealizedFuturesGains.TradeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeNumber\' in table \'UnrealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.TradeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubAcctName {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedFuturesGains.SubAcctNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubAcctName\' in table \'UnrealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.SubAcctNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TradeVolume {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedFuturesGains.TradeVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeVolume\' in table \'UnrealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.TradeVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OpeningTradeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUnrealizedFuturesGains.OpeningTradeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeDate\' in table \'UnrealizedFuturesGains\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.OpeningTradeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OpeningTradeId {
                get {
                    try {
                        return ((int)(this[this.tableUnrealizedFuturesGains.OpeningTradeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeId\' in table \'UnrealizedFuturesGains\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.OpeningTradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningTradeTypeName {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedFuturesGains.OpeningTradeTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeTypeName\' in table \'UnrealizedFuturesGains\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.OpeningTradeTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningTradePrice {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedFuturesGains.OpeningTradePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradePrice\' in table \'UnrealizedFuturesGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.OpeningTradePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedFuturesGains.OpeningUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningUnitCost\' in table \'UnrealizedFuturesGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.OpeningUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningTotalPrice {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedFuturesGains.OpeningTotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTotalPrice\' in table \'UnrealizedFuturesGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.OpeningTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningTradeMediumName {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedFuturesGains.OpeningTradeMediumNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeMediumName\' in table \'UnrealizedFuturesGains\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.OpeningTradeMediumNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrentPrice {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedFuturesGains.CurrentPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentPrice\' in table \'UnrealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.CurrentPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MarketValue {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedFuturesGains.MarketValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarketValue\' in table \'UnrealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.MarketValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double GainOrLoss {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedFuturesGains.GainOrLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GainOrLoss\' in table \'UnrealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.GainOrLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PriceOverrideDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUnrealizedFuturesGains.PriceOverrideDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceOverrideDate\' in table \'UnrealizedFuturesGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.PriceOverrideDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PriceOverrideUser {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedFuturesGains.PriceOverrideUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceOverrideUser\' in table \'UnrealizedFuturesGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.PriceOverrideUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginalPrice {
                get {
                    try {
                        return ((double)(this[this.tableUnrealizedFuturesGains.OriginalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalPrice\' in table \'UnrealizedFuturesGains\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.OriginalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PriceOverrideFlag {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedFuturesGains.PriceOverrideFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceOverrideFlag\' in table \'UnrealizedFuturesGains\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.PriceOverrideFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningStrategy {
                get {
                    try {
                        return ((string)(this[this.tableUnrealizedFuturesGains.OpeningStrategyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningStrategy\' in table \'UnrealizedFuturesGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableUnrealizedFuturesGains.OpeningStrategyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFuturesSymbolNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.FuturesSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFuturesSymbolNull() {
                this[this.tableUnrealizedFuturesGains.FuturesSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMonthNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.MonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMonthNull() {
                this[this.tableUnrealizedFuturesGains.MonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsYearNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.YearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYearNull() {
                this[this.tableUnrealizedFuturesGains.YearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFuturesIdNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.FuturesIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFuturesIdNull() {
                this[this.tableUnrealizedFuturesGains.FuturesIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeNumberNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.TradeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeNumberNull() {
                this[this.tableUnrealizedFuturesGains.TradeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubAcctNameNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.SubAcctNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubAcctNameNull() {
                this[this.tableUnrealizedFuturesGains.SubAcctNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeVolumeNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.TradeVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeVolumeNull() {
                this[this.tableUnrealizedFuturesGains.TradeVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeDateNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.OpeningTradeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeDateNull() {
                this[this.tableUnrealizedFuturesGains.OpeningTradeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeIdNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.OpeningTradeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeIdNull() {
                this[this.tableUnrealizedFuturesGains.OpeningTradeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeTypeNameNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.OpeningTradeTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeTypeNameNull() {
                this[this.tableUnrealizedFuturesGains.OpeningTradeTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradePriceNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.OpeningTradePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradePriceNull() {
                this[this.tableUnrealizedFuturesGains.OpeningTradePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningUnitCostNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.OpeningUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningUnitCostNull() {
                this[this.tableUnrealizedFuturesGains.OpeningUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTotalPriceNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.OpeningTotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTotalPriceNull() {
                this[this.tableUnrealizedFuturesGains.OpeningTotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeMediumNameNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.OpeningTradeMediumNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeMediumNameNull() {
                this[this.tableUnrealizedFuturesGains.OpeningTradeMediumNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentPriceNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.CurrentPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentPriceNull() {
                this[this.tableUnrealizedFuturesGains.CurrentPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarketValueNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.MarketValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarketValueNull() {
                this[this.tableUnrealizedFuturesGains.MarketValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGainOrLossNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.GainOrLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGainOrLossNull() {
                this[this.tableUnrealizedFuturesGains.GainOrLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceOverrideDateNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.PriceOverrideDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceOverrideDateNull() {
                this[this.tableUnrealizedFuturesGains.PriceOverrideDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceOverrideUserNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.PriceOverrideUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceOverrideUserNull() {
                this[this.tableUnrealizedFuturesGains.PriceOverrideUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalPriceNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.OriginalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalPriceNull() {
                this[this.tableUnrealizedFuturesGains.OriginalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceOverrideFlagNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.PriceOverrideFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceOverrideFlagNull() {
                this[this.tableUnrealizedFuturesGains.PriceOverrideFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningStrategyNull() {
                return this.IsNull(this.tableUnrealizedFuturesGains.OpeningStrategyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningStrategyNull() {
                this[this.tableUnrealizedFuturesGains.OpeningStrategyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RealizedFuturesGainsRow : global::System.Data.DataRow {
            
            private RealizedFuturesGainsDataTable tableRealizedFuturesGains;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RealizedFuturesGainsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRealizedFuturesGains = ((RealizedFuturesGainsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FuturesId {
                get {
                    try {
                        return ((int)(this[this.tableRealizedFuturesGains.FuturesIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FuturesId\' in table \'RealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.FuturesIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FuturesSymbol {
                get {
                    try {
                        return ((string)(this[this.tableRealizedFuturesGains.FuturesSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FuturesSymbol\' in table \'RealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.FuturesSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Month {
                get {
                    try {
                        return ((int)(this[this.tableRealizedFuturesGains.MonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Month\' in table \'RealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.MonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Year {
                get {
                    try {
                        return ((int)(this[this.tableRealizedFuturesGains.YearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Year\' in table \'RealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.YearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Multiplier {
                get {
                    try {
                        return ((short)(this[this.tableRealizedFuturesGains.MultiplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Multiplier\' in table \'RealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.MultiplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short TradeNumber {
                get {
                    try {
                        return ((short)(this[this.tableRealizedFuturesGains.TradeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeNumber\' in table \'RealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.TradeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubAcctName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedFuturesGains.SubAcctNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubAcctName\' in table \'RealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.SubAcctNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TradeVolume {
                get {
                    try {
                        return ((double)(this[this.tableRealizedFuturesGains.TradeVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeVolume\' in table \'RealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.TradeVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OpeningTradeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRealizedFuturesGains.OpeningTradeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeDate\' in table \'RealizedFuturesGains\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.OpeningTradeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OpeningTradeId {
                get {
                    try {
                        return ((int)(this[this.tableRealizedFuturesGains.OpeningTradeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeId\' in table \'RealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.OpeningTradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningTradeTypeName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedFuturesGains.OpeningTradeTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeTypeName\' in table \'RealizedFuturesGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.OpeningTradeTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningTradePrice {
                get {
                    try {
                        return ((double)(this[this.tableRealizedFuturesGains.OpeningTradePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradePrice\' in table \'RealizedFuturesGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.OpeningTradePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableRealizedFuturesGains.OpeningUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningUnitCost\' in table \'RealizedFuturesGains\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.OpeningUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OpeningTotalPrice {
                get {
                    try {
                        return ((double)(this[this.tableRealizedFuturesGains.OpeningTotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTotalPrice\' in table \'RealizedFuturesGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.OpeningTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningTradeMediumName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedFuturesGains.OpeningTradeMediumNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningTradeMediumName\' in table \'RealizedFuturesGains\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.OpeningTradeMediumNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ClosingTradeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRealizedFuturesGains.ClosingTradeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTradeDate\' in table \'RealizedFuturesGains\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.ClosingTradeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ClosingTradeId {
                get {
                    try {
                        return ((int)(this[this.tableRealizedFuturesGains.ClosingTradeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTradeId\' in table \'RealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.ClosingTradeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClosingTradeTypeName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedFuturesGains.ClosingTradeTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTradeTypeName\' in table \'RealizedFuturesGains\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.ClosingTradeTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ClosingTradePrice {
                get {
                    try {
                        return ((double)(this[this.tableRealizedFuturesGains.ClosingTradePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTradePrice\' in table \'RealizedFuturesGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.ClosingTradePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ClosingUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableRealizedFuturesGains.ClosingUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingUnitCost\' in table \'RealizedFuturesGains\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.ClosingUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ClosingTotalPrice {
                get {
                    try {
                        return ((double)(this[this.tableRealizedFuturesGains.ClosingTotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTotalPrice\' in table \'RealizedFuturesGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.ClosingTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClosingTradeMediumName {
                get {
                    try {
                        return ((string)(this[this.tableRealizedFuturesGains.ClosingTradeMediumNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingTradeMediumName\' in table \'RealizedFuturesGains\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.ClosingTradeMediumNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DaysHeld {
                get {
                    try {
                        return ((int)(this[this.tableRealizedFuturesGains.DaysHeldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DaysHeld\' in table \'RealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.DaysHeldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShortTermGainLoss {
                get {
                    try {
                        return ((double)(this[this.tableRealizedFuturesGains.ShortTermGainLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShortTermGainLoss\' in table \'RealizedFuturesGains\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.ShortTermGainLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LongTermGainLoss {
                get {
                    try {
                        return ((double)(this[this.tableRealizedFuturesGains.LongTermGainLossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LongTermGainLoss\' in table \'RealizedFuturesGains\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.LongTermGainLossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CostBasis {
                get {
                    try {
                        return ((double)(this[this.tableRealizedFuturesGains.CostBasisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostBasis\' in table \'RealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.CostBasisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NetProceeds {
                get {
                    try {
                        return ((double)(this[this.tableRealizedFuturesGains.NetProceedsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetProceeds\' in table \'RealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.NetProceedsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UnitCostBasis {
                get {
                    try {
                        return ((double)(this[this.tableRealizedFuturesGains.UnitCostBasisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitCostBasis\' in table \'RealizedFuturesGains\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.UnitCostBasisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UnitNetProceeds {
                get {
                    try {
                        return ((double)(this[this.tableRealizedFuturesGains.UnitNetProceedsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitNetProceeds\' in table \'RealizedFuturesGains\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.UnitNetProceedsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpeningStrategy {
                get {
                    try {
                        return ((string)(this[this.tableRealizedFuturesGains.OpeningStrategyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningStrategy\' in table \'RealizedFuturesGains\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.OpeningStrategyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClosingStrategy {
                get {
                    try {
                        return ((string)(this[this.tableRealizedFuturesGains.ClosingStrategyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingStrategy\' in table \'RealizedFuturesGains\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRealizedFuturesGains.ClosingStrategyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFuturesIdNull() {
                return this.IsNull(this.tableRealizedFuturesGains.FuturesIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFuturesIdNull() {
                this[this.tableRealizedFuturesGains.FuturesIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFuturesSymbolNull() {
                return this.IsNull(this.tableRealizedFuturesGains.FuturesSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFuturesSymbolNull() {
                this[this.tableRealizedFuturesGains.FuturesSymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMonthNull() {
                return this.IsNull(this.tableRealizedFuturesGains.MonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMonthNull() {
                this[this.tableRealizedFuturesGains.MonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsYearNull() {
                return this.IsNull(this.tableRealizedFuturesGains.YearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYearNull() {
                this[this.tableRealizedFuturesGains.YearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMultiplierNull() {
                return this.IsNull(this.tableRealizedFuturesGains.MultiplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMultiplierNull() {
                this[this.tableRealizedFuturesGains.MultiplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeNumberNull() {
                return this.IsNull(this.tableRealizedFuturesGains.TradeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeNumberNull() {
                this[this.tableRealizedFuturesGains.TradeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubAcctNameNull() {
                return this.IsNull(this.tableRealizedFuturesGains.SubAcctNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubAcctNameNull() {
                this[this.tableRealizedFuturesGains.SubAcctNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeVolumeNull() {
                return this.IsNull(this.tableRealizedFuturesGains.TradeVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeVolumeNull() {
                this[this.tableRealizedFuturesGains.TradeVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeDateNull() {
                return this.IsNull(this.tableRealizedFuturesGains.OpeningTradeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeDateNull() {
                this[this.tableRealizedFuturesGains.OpeningTradeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeIdNull() {
                return this.IsNull(this.tableRealizedFuturesGains.OpeningTradeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeIdNull() {
                this[this.tableRealizedFuturesGains.OpeningTradeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeTypeNameNull() {
                return this.IsNull(this.tableRealizedFuturesGains.OpeningTradeTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeTypeNameNull() {
                this[this.tableRealizedFuturesGains.OpeningTradeTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradePriceNull() {
                return this.IsNull(this.tableRealizedFuturesGains.OpeningTradePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradePriceNull() {
                this[this.tableRealizedFuturesGains.OpeningTradePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningUnitCostNull() {
                return this.IsNull(this.tableRealizedFuturesGains.OpeningUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningUnitCostNull() {
                this[this.tableRealizedFuturesGains.OpeningUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTotalPriceNull() {
                return this.IsNull(this.tableRealizedFuturesGains.OpeningTotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTotalPriceNull() {
                this[this.tableRealizedFuturesGains.OpeningTotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningTradeMediumNameNull() {
                return this.IsNull(this.tableRealizedFuturesGains.OpeningTradeMediumNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningTradeMediumNameNull() {
                this[this.tableRealizedFuturesGains.OpeningTradeMediumNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTradeDateNull() {
                return this.IsNull(this.tableRealizedFuturesGains.ClosingTradeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTradeDateNull() {
                this[this.tableRealizedFuturesGains.ClosingTradeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTradeIdNull() {
                return this.IsNull(this.tableRealizedFuturesGains.ClosingTradeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTradeIdNull() {
                this[this.tableRealizedFuturesGains.ClosingTradeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTradeTypeNameNull() {
                return this.IsNull(this.tableRealizedFuturesGains.ClosingTradeTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTradeTypeNameNull() {
                this[this.tableRealizedFuturesGains.ClosingTradeTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTradePriceNull() {
                return this.IsNull(this.tableRealizedFuturesGains.ClosingTradePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTradePriceNull() {
                this[this.tableRealizedFuturesGains.ClosingTradePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingUnitCostNull() {
                return this.IsNull(this.tableRealizedFuturesGains.ClosingUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingUnitCostNull() {
                this[this.tableRealizedFuturesGains.ClosingUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTotalPriceNull() {
                return this.IsNull(this.tableRealizedFuturesGains.ClosingTotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTotalPriceNull() {
                this[this.tableRealizedFuturesGains.ClosingTotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingTradeMediumNameNull() {
                return this.IsNull(this.tableRealizedFuturesGains.ClosingTradeMediumNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingTradeMediumNameNull() {
                this[this.tableRealizedFuturesGains.ClosingTradeMediumNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDaysHeldNull() {
                return this.IsNull(this.tableRealizedFuturesGains.DaysHeldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDaysHeldNull() {
                this[this.tableRealizedFuturesGains.DaysHeldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShortTermGainLossNull() {
                return this.IsNull(this.tableRealizedFuturesGains.ShortTermGainLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShortTermGainLossNull() {
                this[this.tableRealizedFuturesGains.ShortTermGainLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLongTermGainLossNull() {
                return this.IsNull(this.tableRealizedFuturesGains.LongTermGainLossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLongTermGainLossNull() {
                this[this.tableRealizedFuturesGains.LongTermGainLossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCostBasisNull() {
                return this.IsNull(this.tableRealizedFuturesGains.CostBasisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCostBasisNull() {
                this[this.tableRealizedFuturesGains.CostBasisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetProceedsNull() {
                return this.IsNull(this.tableRealizedFuturesGains.NetProceedsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetProceedsNull() {
                this[this.tableRealizedFuturesGains.NetProceedsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitCostBasisNull() {
                return this.IsNull(this.tableRealizedFuturesGains.UnitCostBasisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitCostBasisNull() {
                this[this.tableRealizedFuturesGains.UnitCostBasisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitNetProceedsNull() {
                return this.IsNull(this.tableRealizedFuturesGains.UnitNetProceedsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitNetProceedsNull() {
                this[this.tableRealizedFuturesGains.UnitNetProceedsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpeningStrategyNull() {
                return this.IsNull(this.tableRealizedFuturesGains.OpeningStrategyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpeningStrategyNull() {
                this[this.tableRealizedFuturesGains.OpeningStrategyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClosingStrategyNull() {
                return this.IsNull(this.tableRealizedFuturesGains.ClosingStrategyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClosingStrategyNull() {
                this[this.tableRealizedFuturesGains.ClosingStrategyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class p_get_open_taxlotsRowChangeEvent : global::System.EventArgs {
            
            private p_get_open_taxlotsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_open_taxlotsRowChangeEvent(p_get_open_taxlotsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_open_taxlotsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AccountsRowChangeEvent : global::System.EventArgs {
            
            private AccountsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountsRowChangeEvent(AccountsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccountsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class p_get_taxlots_with_running_positions_and_unit_cost_basisRowChangeEvent : global::System.EventArgs {
            
            private p_get_taxlots_with_running_positions_and_unit_cost_basisRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_taxlots_with_running_positions_and_unit_cost_basisRowChangeEvent(p_get_taxlots_with_running_positions_and_unit_cost_basisRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_taxlots_with_running_positions_and_unit_cost_basisRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SubAccountsRowChangeEvent : global::System.EventArgs {
            
            private SubAccountsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubAccountsRowChangeEvent(SubAccountsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubAccountsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TradersRowChangeEvent : global::System.EventArgs {
            
            private TradersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TradersRowChangeEvent(TradersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TradersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class p_get_stock_tradesRowChangeEvent : global::System.EventArgs {
            
            private p_get_stock_tradesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_stock_tradesRowChangeEvent(p_get_stock_tradesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_stock_tradesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class p_get_spinoff_infoRowChangeEvent : global::System.EventArgs {
            
            private p_get_spinoff_infoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_spinoff_infoRowChangeEvent(p_get_spinoff_infoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_spinoff_infoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RealizedStockGainsRowChangeEvent : global::System.EventArgs {
            
            private RealizedStockGainsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedStockGainsRowChangeEvent(RealizedStockGainsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedStockGainsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RealizedEquityOptionGainsRowChangeEvent : global::System.EventArgs {
            
            private RealizedEquityOptionGainsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedEquityOptionGainsRowChangeEvent(RealizedEquityOptionGainsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedEquityOptionGainsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RealizedIndexOptionGainsRowChangeEvent : global::System.EventArgs {
            
            private RealizedIndexOptionGainsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedIndexOptionGainsRowChangeEvent(RealizedIndexOptionGainsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedIndexOptionGainsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class UnrealizedEquityOptionGainsRowChangeEvent : global::System.EventArgs {
            
            private UnrealizedEquityOptionGainsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedEquityOptionGainsRowChangeEvent(UnrealizedEquityOptionGainsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedEquityOptionGainsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class UnrealizedIndexOptionGainsRowChangeEvent : global::System.EventArgs {
            
            private UnrealizedIndexOptionGainsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedIndexOptionGainsRowChangeEvent(UnrealizedIndexOptionGainsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedIndexOptionGainsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TaxlotSummaryReportRowChangeEvent : global::System.EventArgs {
            
            private TaxlotSummaryReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxlotSummaryReportRowChangeEvent(TaxlotSummaryReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxlotSummaryReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class p_get_importable_trademediaRowChangeEvent : global::System.EventArgs {
            
            private p_get_importable_trademediaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_importable_trademediaRowChangeEvent(p_get_importable_trademediaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_get_importable_trademediaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class p_generate_stock_daily_returns_reportRowChangeEvent : global::System.EventArgs {
            
            private p_generate_stock_daily_returns_reportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_generate_stock_daily_returns_reportRowChangeEvent(p_generate_stock_daily_returns_reportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_generate_stock_daily_returns_reportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class p_generate_stock_monthly_returns_reportRowChangeEvent : global::System.EventArgs {
            
            private p_generate_stock_monthly_returns_reportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_generate_stock_monthly_returns_reportRowChangeEvent(p_generate_stock_monthly_returns_reportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public p_generate_stock_monthly_returns_reportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class UnrealizedFuturesGainsRowChangeEvent : global::System.EventArgs {
            
            private UnrealizedFuturesGainsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedFuturesGainsRowChangeEvent(UnrealizedFuturesGainsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UnrealizedFuturesGainsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RealizedFuturesGainsRowChangeEvent : global::System.EventArgs {
            
            private RealizedFuturesGainsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedFuturesGainsRowChangeEvent(RealizedFuturesGainsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RealizedFuturesGainsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GHVHugoLib.HugoDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class p_get_open_taxlotsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public p_get_open_taxlotsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "p_get_open_taxlots";
            tableMapping.ColumnMappings.Add("AcctId", "AcctId");
            tableMapping.ColumnMappings.Add("Ticker", "Ticker");
            tableMapping.ColumnMappings.Add("TaxLotId", "TaxLotId");
            tableMapping.ColumnMappings.Add("Num Trades", "Num Trades");
            tableMapping.ColumnMappings.Add("Open Date", "Open Date");
            tableMapping.ColumnMappings.Add("Unit Cost", "Unit Cost");
            tableMapping.ColumnMappings.Add("Open Amount", "Open Amount");
            tableMapping.ColumnMappings.Add("CurrentPrice", "CurrentPrice");
            tableMapping.ColumnMappings.Add("Score", "Score");
            tableMapping.ColumnMappings.Add("LinkedTaxLotId", "LinkedTaxLotId");
            tableMapping.ColumnMappings.Add("Total Cost", "Total Cost");
            tableMapping.ColumnMappings.Add("SubAcctId", "SubAcctId");
            tableMapping.ColumnMappings.Add("SubAcctName", "SubAcctName");
            tableMapping.ColumnMappings.Add("UnderlyingId", "UnderlyingId");
            tableMapping.ColumnMappings.Add("PriceOverrideDate", "PriceOverrideDate");
            tableMapping.ColumnMappings.Add("PriceOverrideUser", "PriceOverrideUser");
            tableMapping.ColumnMappings.Add("OriginalPrice", "OriginalPrice");
            tableMapping.ColumnMappings.Add("Strategy", "Strategy");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "GHV.p_get_open_taxlots";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputAcctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputUnderlyingSymbol", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputTaxLotId", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputEndDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputScoreDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@groupByTicker", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.p_get_open_taxlotsDataTable dataTable, string inputAcctName, string inputUnderlyingSymbol, string inputTaxLotId, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<global::System.DateTime> inputScoreDate, global::System.Nullable<bool> groupByTicker) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputUnderlyingSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputUnderlyingSymbol));
            }
            if ((inputTaxLotId == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(inputTaxLotId));
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((inputScoreDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(inputScoreDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((groupByTicker.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((bool)(groupByTicker.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.p_get_open_taxlotsDataTable GetData(string inputAcctName, string inputUnderlyingSymbol, string inputTaxLotId, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<global::System.DateTime> inputScoreDate, global::System.Nullable<bool> groupByTicker) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputUnderlyingSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputUnderlyingSymbol));
            }
            if ((inputTaxLotId == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(inputTaxLotId));
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((inputScoreDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(inputScoreDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((groupByTicker.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((bool)(groupByTicker.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            HugoDataSet.p_get_open_taxlotsDataTable dataTable = new HugoDataSet.p_get_open_taxlotsDataTable(true);
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AccountsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AccountsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Accounts";
            tableMapping.ColumnMappings.Add("AcctName", "AcctName");
            tableMapping.ColumnMappings.Add("AcctId", "AcctId");
            tableMapping.ColumnMappings.Add("TaxId", "TaxId");
            tableMapping.ColumnMappings.Add("ClientName", "ClientName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.p_get_taxlot_enabled_accounts";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.AccountsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.AccountsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            HugoDataSet.AccountsDataTable dataTable = new HugoDataSet.AccountsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class p_get_taxlots_with_running_positions_and_unit_cost_basisTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public p_get_taxlots_with_running_positions_and_unit_cost_basisTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "p_get_taxlots_with_running_positions_and_unit_cost_basis";
            tableMapping.ColumnMappings.Add("AcctId", "AcctId");
            tableMapping.ColumnMappings.Add("TaxLotId", "TaxLotId");
            tableMapping.ColumnMappings.Add("DateOpened", "DateOpened");
            tableMapping.ColumnMappings.Add("DateClosed", "DateClosed");
            tableMapping.ColumnMappings.Add("TradeNumber", "TradeNumber");
            tableMapping.ColumnMappings.Add("UnderlyingSymbol", "UnderlyingSymbol");
            tableMapping.ColumnMappings.Add("TradeId", "TradeId");
            tableMapping.ColumnMappings.Add("TradeDateTime", "TradeDateTime");
            tableMapping.ColumnMappings.Add("TradeTypeName", "TradeTypeName");
            tableMapping.ColumnMappings.Add("TradeVolume", "TradeVolume");
            tableMapping.ColumnMappings.Add("TradePrice", "TradePrice");
            tableMapping.ColumnMappings.Add("NetTradePrice", "NetTradePrice");
            tableMapping.ColumnMappings.Add("RunningPosition", "RunningPosition");
            tableMapping.ColumnMappings.Add("UnitCostBasis", "UnitCostBasis");
            tableMapping.ColumnMappings.Add("LinkedTaxLotId", "LinkedTaxLotId");
            tableMapping.ColumnMappings.Add("TotalCost", "TotalCost");
            tableMapping.ColumnMappings.Add("SubAcctId", "SubAcctId");
            tableMapping.ColumnMappings.Add("SubAcctName", "SubAcctName");
            tableMapping.ColumnMappings.Add("UnderlyingId", "UnderlyingId");
            tableMapping.ColumnMappings.Add("NetProceeds", "NetProceeds");
            tableMapping.ColumnMappings.Add("PreviousUnitCostBasis", "PreviousUnitCostBasis");
            tableMapping.ColumnMappings.Add("PreviousTotalCost", "PreviousTotalCost");
            tableMapping.ColumnMappings.Add("TradeNote", "TradeNote");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "GHV.p_get_taxlots_with_running_positions_and_unit_cost_basis";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputAcctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputUnderlyingSymbol", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputTaxLotId", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputEndDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable dataTable, string inputAcctName, string inputUnderlyingSymbol, string inputTaxLotId, global::System.Nullable<global::System.DateTime> inputEndDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputUnderlyingSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputUnderlyingSymbol));
            }
            if ((inputTaxLotId == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(inputTaxLotId));
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable GetData(string inputAcctName, string inputUnderlyingSymbol, string inputTaxLotId, global::System.Nullable<global::System.DateTime> inputEndDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputUnderlyingSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputUnderlyingSymbol));
            }
            if ((inputTaxLotId == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(inputTaxLotId));
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            HugoDataSet.p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable dataTable = new HugoDataSet.p_get_taxlots_with_running_positions_and_unit_cost_basisDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SubAccountsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SubAccountsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SubAccounts";
            tableMapping.ColumnMappings.Add("SubAcctName", "SubAcctName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     SubAccounts.SubAcctName\r\nFROM         SubAccounts INNER JOIN\r\n        " +
                "              Accounts ON SubAccounts.AcctID = Accounts.AcctID\r\nWHERE Accounts.A" +
                "cctName = @acctName";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, "AcctName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.SubAccountsDataTable dataTable, string acctName) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((acctName == null)) {
                throw new global::System.ArgumentNullException("acctName");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(acctName));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.SubAccountsDataTable GetData(string acctName) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((acctName == null)) {
                throw new global::System.ArgumentNullException("acctName");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(acctName));
            }
            HugoDataSet.SubAccountsDataTable dataTable = new HugoDataSet.SubAccountsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TradersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TradersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Traders";
            tableMapping.ColumnMappings.Add("TraderName", "TraderName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Traders] ([TraderName]) VALUES (@TraderName)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TraderName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TraderName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     TraderName\r\nFROM         Traders";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.TradersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.TradersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            HugoDataSet.TradersDataTable dataTable = new HugoDataSet.TradersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HugoDataSet.TradersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HugoDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Traders");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TraderName) {
            if ((TraderName == null)) {
                throw new global::System.ArgumentNullException("TraderName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TraderName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class p_get_stock_tradesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public p_get_stock_tradesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "p_get_stock_trades";
            tableMapping.ColumnMappings.Add("TaxLotId", "TaxLotId");
            tableMapping.ColumnMappings.Add("DateOpened", "DateOpened");
            tableMapping.ColumnMappings.Add("DateClosed", "DateClosed");
            tableMapping.ColumnMappings.Add("UnderlyingId", "UnderlyingId");
            tableMapping.ColumnMappings.Add("AcctId", "AcctId");
            tableMapping.ColumnMappings.Add("SubacctId", "SubacctId");
            tableMapping.ColumnMappings.Add("TradeId", "TradeId");
            tableMapping.ColumnMappings.Add("TradeDatetime", "TradeDatetime");
            tableMapping.ColumnMappings.Add("UnderlyingSymbol", "UnderlyingSymbol");
            tableMapping.ColumnMappings.Add("SubacctName", "SubAcctName");
            tableMapping.ColumnMappings.Add("TradeTypeName", "TradeTypeName");
            tableMapping.ColumnMappings.Add("TradeVolume", "TradeVolume");
            tableMapping.ColumnMappings.Add("TradePrice", "TradePrice");
            tableMapping.ColumnMappings.Add("TotalCost", "TotalCost");
            tableMapping.ColumnMappings.Add("UnitCost", "UnitCost");
            tableMapping.ColumnMappings.Add("LinkedTaxLotId", "LinkedTaxLotId");
            tableMapping.ColumnMappings.Add("TradeMediumName", "TradeMediumName");
            tableMapping.ColumnMappings.Add("SubAcctName", "SubAcctName");
            tableMapping.ColumnMappings.Add("TradeNote", "TradeNote");
            tableMapping.ColumnMappings.Add("ClearingHouseTaxlotId", "ClearingHouseTaxlotId");
            tableMapping.ColumnMappings.Add("ConsolidationPackageId", "ConsolidationPackageId");
            tableMapping.ColumnMappings.Add("MerrillAccountNumber", "MerrillAccountNumber");
            tableMapping.ColumnMappings.Add("FullTradeVolume", "FullTradeVolume");
            tableMapping.ColumnMappings.Add("OpeningTradePrice", "OpeningTradePrice");
            tableMapping.ColumnMappings.Add("OpeningTradeType", "OpeningTradeType");
            tableMapping.ColumnMappings.Add("NumberOfTrades", "NumberOfTrades");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "GHV.p_get_stock_trades";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stocksymbol", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@endDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.p_get_stock_tradesDataTable dataTable, string stocksymbol, string acctName, global::System.Nullable<global::System.DateTime> startDate, global::System.Nullable<global::System.DateTime> endDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((stocksymbol == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(stocksymbol));
            }
            if ((acctName == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(acctName));
            }
            if ((startDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(startDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((endDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(endDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.p_get_stock_tradesDataTable GetData(string stocksymbol, string acctName, global::System.Nullable<global::System.DateTime> startDate, global::System.Nullable<global::System.DateTime> endDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((stocksymbol == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(stocksymbol));
            }
            if ((acctName == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(acctName));
            }
            if ((startDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(startDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((endDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(endDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            HugoDataSet.p_get_stock_tradesDataTable dataTable = new HugoDataSet.p_get_stock_tradesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class p_get_spinoff_infoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public p_get_spinoff_infoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "p_get_spinoff_info";
            tableMapping.ColumnMappings.Add("OriginalVolume", "OriginalVolume");
            tableMapping.ColumnMappings.Add("OriginalCostBasis", "OriginalCostBasis");
            tableMapping.ColumnMappings.Add("SpinoffVolume", "SpinoffVolume");
            tableMapping.ColumnMappings.Add("SpinoffCostBasis", "SpinoffCostBasis");
            tableMapping.ColumnMappings.Add("OriginalSymbol", "OriginalSymbol");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "GHV.p_get_spinoff_info";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputAcctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputSpinoffSymbol", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputSpinoffDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.p_get_spinoff_infoDataTable dataTable, string inputAcctName, string inputSpinoffSymbol, global::System.Nullable<global::System.DateTime> inputSpinoffDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputSpinoffSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputSpinoffSymbol));
            }
            if ((inputSpinoffDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(inputSpinoffDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.p_get_spinoff_infoDataTable GetData(string inputAcctName, string inputSpinoffSymbol, global::System.Nullable<global::System.DateTime> inputSpinoffDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputSpinoffSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputSpinoffSymbol));
            }
            if ((inputSpinoffDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(inputSpinoffDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            HugoDataSet.p_get_spinoff_infoDataTable dataTable = new HugoDataSet.p_get_spinoff_infoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RealizedStockGainsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RealizedStockGainsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RealizedStockGains";
            tableMapping.ColumnMappings.Add("UnderlyingSymbol", "UnderlyingSymbol");
            tableMapping.ColumnMappings.Add("TaxlotId", "TaxlotId");
            tableMapping.ColumnMappings.Add("TradeId", "TradeId");
            tableMapping.ColumnMappings.Add("SubAcctName", "SubAcctName");
            tableMapping.ColumnMappings.Add("TradeTypeName", "TradeTypeName");
            tableMapping.ColumnMappings.Add("TradeVolume", "TradeVolume");
            tableMapping.ColumnMappings.Add("NetPrice", "NetPrice");
            tableMapping.ColumnMappings.Add("UnitCost", "UnitCost");
            tableMapping.ColumnMappings.Add("ShortTermGainLoss", "ShortTermGainLoss");
            tableMapping.ColumnMappings.Add("LongTermGainLoss", "LongTermGainLoss");
            tableMapping.ColumnMappings.Add("OpenDate", "OpenDate");
            tableMapping.ColumnMappings.Add("CloseDate", "CloseDate");
            tableMapping.ColumnMappings.Add("TradeNumber", "TradeNumber");
            tableMapping.ColumnMappings.Add("DaysHeld", "DaysHeld");
            tableMapping.ColumnMappings.Add("CostBasis", "CostBasis");
            tableMapping.ColumnMappings.Add("NetProceeds", "NetProceeds");
            tableMapping.ColumnMappings.Add("Strategy", "Strategy");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "GHV.p_get_realized_gains";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputAcctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputUnderlyingSymbol", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputTaxLotId", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputStartDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputEndDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@groupByTicker", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.RealizedStockGainsDataTable dataTable, string inputAcctName, string inputUnderlyingSymbol, string inputTaxLotId, global::System.Nullable<global::System.DateTime> inputStartDate, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<bool> groupByTicker) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputUnderlyingSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputUnderlyingSymbol));
            }
            if ((inputTaxLotId == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(inputTaxLotId));
            }
            if ((inputStartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(inputStartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((groupByTicker.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((bool)(groupByTicker.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.RealizedStockGainsDataTable GetData(string inputAcctName, string inputUnderlyingSymbol, string inputTaxLotId, global::System.Nullable<global::System.DateTime> inputStartDate, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<bool> groupByTicker) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputUnderlyingSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputUnderlyingSymbol));
            }
            if ((inputTaxLotId == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(inputTaxLotId));
            }
            if ((inputStartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(inputStartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((groupByTicker.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((bool)(groupByTicker.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            HugoDataSet.RealizedStockGainsDataTable dataTable = new HugoDataSet.RealizedStockGainsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RealizedEquityOptionGainsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RealizedEquityOptionGainsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RealizedEquityOptionGains";
            tableMapping.ColumnMappings.Add("UnderlyingSymbol", "UnderlyingSymbol");
            tableMapping.ColumnMappings.Add("OptionSymbol", "OptionSymbol");
            tableMapping.ColumnMappings.Add("ExpirationDate", "ExpirationDate");
            tableMapping.ColumnMappings.Add("StrikePrice", "StrikePrice");
            tableMapping.ColumnMappings.Add("OptionTypeName", "OptionTypeName");
            tableMapping.ColumnMappings.Add("TradeNumber", "TradeNumber");
            tableMapping.ColumnMappings.Add("SubAcctName", "SubAcctName");
            tableMapping.ColumnMappings.Add("TradeVolume", "TradeVolume");
            tableMapping.ColumnMappings.Add("OpeningTradeDate", "OpeningTradeDate");
            tableMapping.ColumnMappings.Add("OpeningTradeId", "OpeningTradeId");
            tableMapping.ColumnMappings.Add("OpeningTradeTypeName", "OpeningTradeTypeName");
            tableMapping.ColumnMappings.Add("OpeningTradePrice", "OpeningTradePrice");
            tableMapping.ColumnMappings.Add("OpeningTotalPrice", "OpeningTotalPrice");
            tableMapping.ColumnMappings.Add("OpeningTradeMediumName", "OpeningTradeMediumName");
            tableMapping.ColumnMappings.Add("ClosingTradeDate", "ClosingTradeDate");
            tableMapping.ColumnMappings.Add("ClosingTradeId", "ClosingTradeId");
            tableMapping.ColumnMappings.Add("ClosingTradeTypeName", "ClosingTradeTypeName");
            tableMapping.ColumnMappings.Add("ClosingTradePrice", "ClosingTradePrice");
            tableMapping.ColumnMappings.Add("ClosingTotalPrice", "ClosingTotalPrice");
            tableMapping.ColumnMappings.Add("ClosingTradeMediumName", "ClosingTradeMediumName");
            tableMapping.ColumnMappings.Add("DaysHeld", "DaysHeld");
            tableMapping.ColumnMappings.Add("ShortTermGainLoss", "ShortTermGainLoss");
            tableMapping.ColumnMappings.Add("LongTermGainLoss", "LongTermGainLoss");
            tableMapping.ColumnMappings.Add("CostBasis", "CostBasis");
            tableMapping.ColumnMappings.Add("NetProceeds", "NetProceeds");
            tableMapping.ColumnMappings.Add("OptionId", "OptionId");
            tableMapping.ColumnMappings.Add("OptionTypeId", "OptionTypeId");
            tableMapping.ColumnMappings.Add("OpeningUnitCost", "OpeningUnitCost");
            tableMapping.ColumnMappings.Add("ClosingUnitCost", "ClosingUnitCost");
            tableMapping.ColumnMappings.Add("UnitCostBasis", "UnitCostBasis");
            tableMapping.ColumnMappings.Add("UnitNetProceeds", "UnitNetProceeds");
            tableMapping.ColumnMappings.Add("BloombergSymbol", "BloombergSymbol");
            tableMapping.ColumnMappings.Add("SharesPerContract", "SharesPerContract");
            tableMapping.ColumnMappings.Add("OpeningStrategy", "OpeningStrategy");
            tableMapping.ColumnMappings.Add("ClosingStrategy", "ClosingStrategy");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "GHV.p_get_realized_option_gains";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputAcctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputUnderlyingSymbol", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputOptionId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputOptionTypeId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputStartDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputEndDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@indexFlag", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@groupByOption", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.RealizedEquityOptionGainsDataTable dataTable, string inputAcctName, string inputUnderlyingSymbol, global::System.Nullable<int> inputOptionId, global::System.Nullable<short> inputOptionTypeId, global::System.Nullable<global::System.DateTime> inputStartDate, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<bool> indexFlag, global::System.Nullable<bool> groupByOption) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputUnderlyingSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputUnderlyingSymbol));
            }
            if ((inputOptionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(inputOptionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((inputOptionTypeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((short)(inputOptionTypeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((inputStartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(inputStartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((indexFlag.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((bool)(indexFlag.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((groupByOption.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((bool)(groupByOption.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.RealizedEquityOptionGainsDataTable GetData(string inputAcctName, string inputUnderlyingSymbol, global::System.Nullable<int> inputOptionId, global::System.Nullable<short> inputOptionTypeId, global::System.Nullable<global::System.DateTime> inputStartDate, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<bool> indexFlag, global::System.Nullable<bool> groupByOption) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputUnderlyingSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputUnderlyingSymbol));
            }
            if ((inputOptionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(inputOptionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((inputOptionTypeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((short)(inputOptionTypeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((inputStartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(inputStartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((indexFlag.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((bool)(indexFlag.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((groupByOption.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((bool)(groupByOption.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            HugoDataSet.RealizedEquityOptionGainsDataTable dataTable = new HugoDataSet.RealizedEquityOptionGainsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RealizedIndexOptionGainsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RealizedIndexOptionGainsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RealizedIndexOptionGains";
            tableMapping.ColumnMappings.Add("UnderlyingSymbol", "UnderlyingSymbol");
            tableMapping.ColumnMappings.Add("OptionSymbol", "OptionSymbol");
            tableMapping.ColumnMappings.Add("ExpirationDate", "ExpirationDate");
            tableMapping.ColumnMappings.Add("StrikePrice", "StrikePrice");
            tableMapping.ColumnMappings.Add("OptionTypeName", "OptionTypeName");
            tableMapping.ColumnMappings.Add("TradeNumber", "TradeNumber");
            tableMapping.ColumnMappings.Add("SubAcctName", "SubAcctName");
            tableMapping.ColumnMappings.Add("TradeVolume", "TradeVolume");
            tableMapping.ColumnMappings.Add("OpeningTradeDate", "OpeningTradeDate");
            tableMapping.ColumnMappings.Add("OpeningTradeId", "OpeningTradeId");
            tableMapping.ColumnMappings.Add("OpeningTradeTypeName", "OpeningTradeTypeName");
            tableMapping.ColumnMappings.Add("OpeningTradePrice", "OpeningTradePrice");
            tableMapping.ColumnMappings.Add("OpeningTotalPrice", "OpeningTotalPrice");
            tableMapping.ColumnMappings.Add("OpeningTradeMediumName", "OpeningTradeMediumName");
            tableMapping.ColumnMappings.Add("ClosingTradeDate", "ClosingTradeDate");
            tableMapping.ColumnMappings.Add("ClosingTradeId", "ClosingTradeId");
            tableMapping.ColumnMappings.Add("ClosingTradeTypeName", "ClosingTradeTypeName");
            tableMapping.ColumnMappings.Add("ClosingTradePrice", "ClosingTradePrice");
            tableMapping.ColumnMappings.Add("ClosingTotalPrice", "ClosingTotalPrice");
            tableMapping.ColumnMappings.Add("ClosingTradeMediumName", "ClosingTradeMediumName");
            tableMapping.ColumnMappings.Add("DaysHeld", "DaysHeld");
            tableMapping.ColumnMappings.Add("ShortTermGainLoss", "ShortTermGainLoss");
            tableMapping.ColumnMappings.Add("LongTermGainLoss", "LongTermGainLoss");
            tableMapping.ColumnMappings.Add("CostBasis", "CostBasis");
            tableMapping.ColumnMappings.Add("NetProceeds", "NetProceeds");
            tableMapping.ColumnMappings.Add("OptionId", "OptionId");
            tableMapping.ColumnMappings.Add("OptionTypeId", "OptionTypeId");
            tableMapping.ColumnMappings.Add("OpeningUnitCost", "OpeningUnitCost");
            tableMapping.ColumnMappings.Add("ClosingUnitCost", "ClosingUnitCost");
            tableMapping.ColumnMappings.Add("UnitCostBasis", "UnitCostBasis");
            tableMapping.ColumnMappings.Add("UnitNetProceeds", "UnitNetProceeds");
            tableMapping.ColumnMappings.Add("BloombergSymbol", "BloombergSymbol");
            tableMapping.ColumnMappings.Add("SharesPerContract", "SharesPerContract");
            tableMapping.ColumnMappings.Add("OpeningStrategy", "OpeningStrategy");
            tableMapping.ColumnMappings.Add("ClosingStrategy", "ClosingStrategy");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "GHV.p_get_realized_option_gains";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputAcctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputUnderlyingSymbol", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputOptionId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputOptionTypeId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputStartDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputEndDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@indexFlag", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@groupByOption", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.RealizedIndexOptionGainsDataTable dataTable, string inputAcctName, string inputUnderlyingSymbol, global::System.Nullable<int> inputOptionId, global::System.Nullable<short> inputOptionTypeId, global::System.Nullable<global::System.DateTime> inputStartDate, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<bool> indexFlag, global::System.Nullable<bool> groupByOption) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputUnderlyingSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputUnderlyingSymbol));
            }
            if ((inputOptionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(inputOptionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((inputOptionTypeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((short)(inputOptionTypeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((inputStartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(inputStartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((indexFlag.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((bool)(indexFlag.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((groupByOption.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((bool)(groupByOption.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.RealizedIndexOptionGainsDataTable GetData(string inputAcctName, string inputUnderlyingSymbol, global::System.Nullable<int> inputOptionId, global::System.Nullable<short> inputOptionTypeId, global::System.Nullable<global::System.DateTime> inputStartDate, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<bool> indexFlag, global::System.Nullable<bool> groupByOption) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputUnderlyingSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputUnderlyingSymbol));
            }
            if ((inputOptionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(inputOptionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((inputOptionTypeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((short)(inputOptionTypeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((inputStartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(inputStartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((indexFlag.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((bool)(indexFlag.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((groupByOption.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((bool)(groupByOption.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            HugoDataSet.RealizedIndexOptionGainsDataTable dataTable = new HugoDataSet.RealizedIndexOptionGainsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UnrealizedEquityOptionGainsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UnrealizedEquityOptionGainsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UnrealizedEquityOptionGains";
            tableMapping.ColumnMappings.Add("UnderlyingSymbol", "UnderlyingSymbol");
            tableMapping.ColumnMappings.Add("OptionSymbol", "OptionSymbol");
            tableMapping.ColumnMappings.Add("ExpirationDate", "ExpirationDate");
            tableMapping.ColumnMappings.Add("StrikePrice", "StrikePrice");
            tableMapping.ColumnMappings.Add("OptionTypeName", "OptionTypeName");
            tableMapping.ColumnMappings.Add("TradeNumber", "TradeNumber");
            tableMapping.ColumnMappings.Add("SubAcctName", "SubAcctName");
            tableMapping.ColumnMappings.Add("TradeVolume", "TradeVolume");
            tableMapping.ColumnMappings.Add("OpeningTradeDate", "OpeningTradeDate");
            tableMapping.ColumnMappings.Add("OpeningTradeId", "OpeningTradeId");
            tableMapping.ColumnMappings.Add("OpeningTradeTypeName", "OpeningTradeTypeName");
            tableMapping.ColumnMappings.Add("OpeningTradePrice", "OpeningTradePrice");
            tableMapping.ColumnMappings.Add("OpeningTotalPrice", "OpeningTotalPrice");
            tableMapping.ColumnMappings.Add("OpeningTradeMediumName", "OpeningTradeMediumName");
            tableMapping.ColumnMappings.Add("CurrentPrice", "CurrentPrice");
            tableMapping.ColumnMappings.Add("MarketValue", "MarketValue");
            tableMapping.ColumnMappings.Add("GainOrLoss", "GainOrLoss");
            tableMapping.ColumnMappings.Add("OptionTypeId", "OptionTypeId");
            tableMapping.ColumnMappings.Add("PriceOverrideDate", "PriceOverrideDate");
            tableMapping.ColumnMappings.Add("PriceOverrideUser", "PriceOverrideUser");
            tableMapping.ColumnMappings.Add("OriginalPrice", "OriginalPrice");
            tableMapping.ColumnMappings.Add("OptionId", "OptionId");
            tableMapping.ColumnMappings.Add("BloombergSymbol", "BloombergSymbol");
            tableMapping.ColumnMappings.Add("OpeningUnitCost", "OpeningUnitCost");
            tableMapping.ColumnMappings.Add("OpeningStrategy", "OpeningStrategy");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "GHV.p_get_unrealized_option_gains";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputAcctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputUnderlyingSymbol", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputOptionId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputOptionTypeId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputEndDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@indexFlag", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@groupByOption", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.UnrealizedEquityOptionGainsDataTable dataTable, string inputAcctName, string inputUnderlyingSymbol, global::System.Nullable<int> inputOptionId, global::System.Nullable<short> inputOptionTypeId, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<bool> indexFlag, global::System.Nullable<bool> groupByOption) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputUnderlyingSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputUnderlyingSymbol));
            }
            if ((inputOptionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(inputOptionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((inputOptionTypeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((short)(inputOptionTypeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((indexFlag.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((bool)(indexFlag.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((groupByOption.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((bool)(groupByOption.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.UnrealizedEquityOptionGainsDataTable GetData(string inputAcctName, string inputUnderlyingSymbol, global::System.Nullable<int> inputOptionId, global::System.Nullable<short> inputOptionTypeId, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<bool> indexFlag, global::System.Nullable<bool> groupByOption) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputUnderlyingSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputUnderlyingSymbol));
            }
            if ((inputOptionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(inputOptionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((inputOptionTypeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((short)(inputOptionTypeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((indexFlag.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((bool)(indexFlag.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((groupByOption.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((bool)(groupByOption.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            HugoDataSet.UnrealizedEquityOptionGainsDataTable dataTable = new HugoDataSet.UnrealizedEquityOptionGainsDataTable(true);
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UnrealizedIndexOptionGainsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UnrealizedIndexOptionGainsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UnrealizedIndexOptionGains";
            tableMapping.ColumnMappings.Add("UnderlyingSymbol", "UnderlyingSymbol");
            tableMapping.ColumnMappings.Add("OptionSymbol", "OptionSymbol");
            tableMapping.ColumnMappings.Add("ExpirationDate", "ExpirationDate");
            tableMapping.ColumnMappings.Add("StrikePrice", "StrikePrice");
            tableMapping.ColumnMappings.Add("OptionTypeName", "OptionTypeName");
            tableMapping.ColumnMappings.Add("TradeNumber", "TradeNumber");
            tableMapping.ColumnMappings.Add("SubAcctName", "SubAcctName");
            tableMapping.ColumnMappings.Add("TradeVolume", "TradeVolume");
            tableMapping.ColumnMappings.Add("OpeningTradeDate", "OpeningTradeDate");
            tableMapping.ColumnMappings.Add("OpeningTradeId", "OpeningTradeId");
            tableMapping.ColumnMappings.Add("OpeningTradeTypeName", "OpeningTradeTypeName");
            tableMapping.ColumnMappings.Add("OpeningTradePrice", "OpeningTradePrice");
            tableMapping.ColumnMappings.Add("OpeningTotalPrice", "OpeningTotalPrice");
            tableMapping.ColumnMappings.Add("OpeningTradeMediumName", "OpeningTradeMediumName");
            tableMapping.ColumnMappings.Add("CurrentPrice", "CurrentPrice");
            tableMapping.ColumnMappings.Add("MarketValue", "MarketValue");
            tableMapping.ColumnMappings.Add("GainOrLoss", "GainOrLoss");
            tableMapping.ColumnMappings.Add("OptionTypeId", "OptionTypeId");
            tableMapping.ColumnMappings.Add("PriceOverrideDate", "PriceOverrideDate");
            tableMapping.ColumnMappings.Add("PriceOverrideUser", "PriceOverrideUser");
            tableMapping.ColumnMappings.Add("OriginalPrice", "OriginalPrice");
            tableMapping.ColumnMappings.Add("OptionId", "OptionId");
            tableMapping.ColumnMappings.Add("BloombergSymbol", "BloombergSymbol");
            tableMapping.ColumnMappings.Add("OpeningUnitCost", "OpeningUnitCost");
            tableMapping.ColumnMappings.Add("OpeningStrategy", "OpeningStrategy");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "GHV.p_get_unrealized_option_gains";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputAcctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputUnderlyingSymbol", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputOptionId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputOptionTypeId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputEndDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@indexFlag", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@groupByOption", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.UnrealizedIndexOptionGainsDataTable dataTable, string inputAcctName, string inputUnderlyingSymbol, global::System.Nullable<int> inputOptionId, global::System.Nullable<short> inputOptionTypeId, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<bool> indexFlag, global::System.Nullable<bool> groupByOption) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputUnderlyingSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputUnderlyingSymbol));
            }
            if ((inputOptionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(inputOptionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((inputOptionTypeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((short)(inputOptionTypeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((indexFlag.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((bool)(indexFlag.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((groupByOption.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((bool)(groupByOption.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.UnrealizedIndexOptionGainsDataTable GetData(string inputAcctName, string inputUnderlyingSymbol, global::System.Nullable<int> inputOptionId, global::System.Nullable<short> inputOptionTypeId, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<bool> indexFlag, global::System.Nullable<bool> groupByOption) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputUnderlyingSymbol == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(inputUnderlyingSymbol));
            }
            if ((inputOptionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(inputOptionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((inputOptionTypeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((short)(inputOptionTypeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((indexFlag.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((bool)(indexFlag.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((groupByOption.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((bool)(groupByOption.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            HugoDataSet.UnrealizedIndexOptionGainsDataTable dataTable = new HugoDataSet.UnrealizedIndexOptionGainsDataTable(true);
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TaxlotSummaryReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TaxlotSummaryReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TaxlotSummaryReport";
            tableMapping.ColumnMappings.Add("InstrumentType", "InstrumentType");
            tableMapping.ColumnMappings.Add("SubAcctName", "SubAcctName");
            tableMapping.ColumnMappings.Add("Symbol", "Symbol");
            tableMapping.ColumnMappings.Add("ExpirationDate", "ExpirationDate");
            tableMapping.ColumnMappings.Add("StrikePrice", "StrikePrice");
            tableMapping.ColumnMappings.Add("OptionTypeName", "OptionTypeName");
            tableMapping.ColumnMappings.Add("StartingUnrealizedGainLoss", "StartingUnrealizedGainLoss");
            tableMapping.ColumnMappings.Add("EndingUnrealizedGainLoss", "EndingUnrealizedGainLoss");
            tableMapping.ColumnMappings.Add("ChangeInUnrealizedGainLoss", "ChangeInUnrealizedGainLoss");
            tableMapping.ColumnMappings.Add("RealizedGainLoss", "RealizedGainLoss");
            tableMapping.ColumnMappings.Add("TotalGainLoss", "TotalGainLoss");
            tableMapping.ColumnMappings.Add("ExpirationDateString", "ExpirationDateString");
            tableMapping.ColumnMappings.Add("StrikePriceString", "StrikePriceString");
            tableMapping.ColumnMappings.Add("Underlying", "Underlying");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "GHV.p_get_taxlot_summary_report";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputAcctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputStartDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputEndDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.TaxlotSummaryReportDataTable dataTable, string inputAcctName, global::System.Nullable<global::System.DateTime> inputStartDate, global::System.Nullable<global::System.DateTime> inputEndDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputStartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(inputStartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.TaxlotSummaryReportDataTable GetData(string inputAcctName, global::System.Nullable<global::System.DateTime> inputStartDate, global::System.Nullable<global::System.DateTime> inputEndDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputStartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(inputStartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            HugoDataSet.TaxlotSummaryReportDataTable dataTable = new HugoDataSet.TaxlotSummaryReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class p_get_importable_trademediaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public p_get_importable_trademediaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "p_get_importable_trademedia";
            tableMapping.ColumnMappings.Add("TradeMediumName", "TradeMediumName");
            tableMapping.ColumnMappings.Add("TicketChargeApplied", "TicketChargeApplied");
            tableMapping.ColumnMappings.Add("CommissionPerShare", "CommissionPerShare");
            tableMapping.ColumnMappings.Add("SECFeePerDollar", "SECFeePerDollar");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "GHV.p_get_importable_trademedia";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.p_get_importable_trademediaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.p_get_importable_trademediaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            HugoDataSet.p_get_importable_trademediaDataTable dataTable = new HugoDataSet.p_get_importable_trademediaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class p_generate_stock_daily_returns_reportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public p_generate_stock_daily_returns_reportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "p_generate_stock_daily_returns_report";
            tableMapping.ColumnMappings.Add("TRADE DATE", "TRADE DATE");
            tableMapping.ColumnMappings.Add("Column1", "Column1");
            tableMapping.ColumnMappings.Add("STARTING STOCK PORTFOLIO MARKET VALUE", "STARTING STOCK PORTFOLIO MARKET VALUE");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO PURCHASES (INCL. COMM)", "STOCK PORTFOLIO PURCHASES (INCL_ COMM)");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO GAIN(LOSS) TOTAL", "STOCK PORTFOLIO GAIN(LOSS) TOTAL");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO SALES (INCL. COMM)", "STOCK PORTFOLIO SALES (INCL_ COMM)");
            tableMapping.ColumnMappings.Add("ENDING STOCK PORTFOLIO MARKET VALUE", "ENDING STOCK PORTFOLIO MARKET VALUE");
            tableMapping.ColumnMappings.Add("Column2", "Column2");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO RETURN", "STOCK PORTFOLIO RETURN");
            tableMapping.ColumnMappings.Add("Column3", "Column3");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO GAIN(LOSS) SHORT-TERM", "STOCK PORTFOLIO GAIN(LOSS) SHORT-TERM");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO GAIN(LOSS) LONG-TERM", "STOCK PORTFOLIO GAIN(LOSS) LONG-TERM");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO GAIN(LOSS) UNREALIZED", "STOCK PORTFOLIO GAIN(LOSS) UNREALIZED");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO GAIN(LOSS) TOTAL ", "STOCK PORTFOLIO GAIN(LOSS) TOTAL ");
            tableMapping.ColumnMappings.Add("DIVIDENDS", "DIVIDENDS");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "Audit.p_generate_stock_daily_returns_report";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctname", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@enddate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.p_generate_stock_daily_returns_reportDataTable dataTable, string acctname, global::System.Nullable<global::System.DateTime> startdate, global::System.Nullable<global::System.DateTime> enddate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((acctname == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(acctname));
            }
            if ((startdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(startdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((enddate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(enddate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.p_generate_stock_daily_returns_reportDataTable GetData(string acctname, global::System.Nullable<global::System.DateTime> startdate, global::System.Nullable<global::System.DateTime> enddate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((acctname == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(acctname));
            }
            if ((startdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(startdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((enddate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(enddate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            HugoDataSet.p_generate_stock_daily_returns_reportDataTable dataTable = new HugoDataSet.p_generate_stock_daily_returns_reportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class p_generate_stock_monthly_returns_reportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public p_generate_stock_monthly_returns_reportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "p_generate_stock_monthly_returns_report";
            tableMapping.ColumnMappings.Add("MONTH", "MONTH");
            tableMapping.ColumnMappings.Add("YEAR", "YEAR");
            tableMapping.ColumnMappings.Add("STARTING STOCK PORTFOLIO MARKET VALUE", "STARTING STOCK PORTFOLIO MARKET VALUE");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO PURCHASES (INCL. COMM)", "STOCK PORTFOLIO PURCHASES (INCL_ COMM)");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO GAIN(LOSS) TOTAL", "STOCK PORTFOLIO GAIN(LOSS) TOTAL");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO SALES (INCL. COMM)", "STOCK PORTFOLIO SALES (INCL_ COMM)");
            tableMapping.ColumnMappings.Add("ENDING STOCK PORTFOLIO MARKET VALUE", "ENDING STOCK PORTFOLIO MARKET VALUE");
            tableMapping.ColumnMappings.Add("Column1", "Column1");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO RETURN", "STOCK PORTFOLIO RETURN");
            tableMapping.ColumnMappings.Add("Column2", "Column2");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO GAIN(LOSS) SHORT-TERM", "STOCK PORTFOLIO GAIN(LOSS) SHORT-TERM");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO GAIN(LOSS) LONG-TERM", "STOCK PORTFOLIO GAIN(LOSS) LONG-TERM");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO GAIN(LOSS) UNREALIZED", "STOCK PORTFOLIO GAIN(LOSS) UNREALIZED");
            tableMapping.ColumnMappings.Add("STOCK PORTFOLIO GAIN(LOSS) TOTAL ", "STOCK PORTFOLIO GAIN(LOSS) TOTAL ");
            tableMapping.ColumnMappings.Add("DIVIDENDS", "DIVIDENDS");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "Audit.p_generate_stock_monthly_returns_report";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctname", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@enddate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.p_generate_stock_monthly_returns_reportDataTable dataTable, string acctname, global::System.Nullable<global::System.DateTime> startdate, global::System.Nullable<global::System.DateTime> enddate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((acctname == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(acctname));
            }
            if ((startdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(startdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((enddate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(enddate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.p_generate_stock_monthly_returns_reportDataTable GetData(string acctname, global::System.Nullable<global::System.DateTime> startdate, global::System.Nullable<global::System.DateTime> enddate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((acctname == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(acctname));
            }
            if ((startdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(startdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((enddate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(enddate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            HugoDataSet.p_generate_stock_monthly_returns_reportDataTable dataTable = new HugoDataSet.p_generate_stock_monthly_returns_reportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UnrealizedFuturesGainsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UnrealizedFuturesGainsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UnrealizedFuturesGains";
            tableMapping.ColumnMappings.Add("FuturesSymbol", "FuturesSymbol");
            tableMapping.ColumnMappings.Add("Month", "Month");
            tableMapping.ColumnMappings.Add("Year", "Year");
            tableMapping.ColumnMappings.Add("FuturesId", "FuturesId");
            tableMapping.ColumnMappings.Add("TradeNumber", "TradeNumber");
            tableMapping.ColumnMappings.Add("SubAcctName", "SubAcctName");
            tableMapping.ColumnMappings.Add("TradeVolume", "TradeVolume");
            tableMapping.ColumnMappings.Add("OpeningTradeDate", "OpeningTradeDate");
            tableMapping.ColumnMappings.Add("OpeningTradeId", "OpeningTradeId");
            tableMapping.ColumnMappings.Add("OpeningTradeTypeName", "OpeningTradeTypeName");
            tableMapping.ColumnMappings.Add("OpeningTradePrice", "OpeningTradePrice");
            tableMapping.ColumnMappings.Add("OpeningUnitCost", "OpeningUnitCost");
            tableMapping.ColumnMappings.Add("OpeningTotalPrice", "OpeningTotalPrice");
            tableMapping.ColumnMappings.Add("OpeningTradeMediumName", "OpeningTradeMediumName");
            tableMapping.ColumnMappings.Add("CurrentPrice", "CurrentPrice");
            tableMapping.ColumnMappings.Add("MarketValue", "MarketValue");
            tableMapping.ColumnMappings.Add("GainOrLoss", "GainOrLoss");
            tableMapping.ColumnMappings.Add("PriceOverrideDate", "PriceOverrideDate");
            tableMapping.ColumnMappings.Add("PriceOverrideUser", "PriceOverrideUser");
            tableMapping.ColumnMappings.Add("OriginalPrice", "OriginalPrice");
            tableMapping.ColumnMappings.Add("OpeningStrategy", "OpeningStrategy");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "GHV.p_get_unrealized_futures_gains";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputAcctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputFuturesId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputEndDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@groupByFuture", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.UnrealizedFuturesGainsDataTable dataTable, string inputAcctName, global::System.Nullable<short> inputFuturesId, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<bool> groupByFuture) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputFuturesId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((short)(inputFuturesId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((groupByFuture.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((bool)(groupByFuture.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.UnrealizedFuturesGainsDataTable GetData(string inputAcctName, global::System.Nullable<short> inputFuturesId, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<bool> groupByFuture) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputFuturesId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((short)(inputFuturesId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((groupByFuture.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((bool)(groupByFuture.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            HugoDataSet.UnrealizedFuturesGainsDataTable dataTable = new HugoDataSet.UnrealizedFuturesGainsDataTable(true);
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RealizedFuturesGainsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RealizedFuturesGainsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RealizedFuturesGains";
            tableMapping.ColumnMappings.Add("FuturesId", "FuturesId");
            tableMapping.ColumnMappings.Add("FuturesSymbol", "FuturesSymbol");
            tableMapping.ColumnMappings.Add("Month", "Month");
            tableMapping.ColumnMappings.Add("Year", "Year");
            tableMapping.ColumnMappings.Add("Multiplier", "Multiplier");
            tableMapping.ColumnMappings.Add("TradeNumber", "TradeNumber");
            tableMapping.ColumnMappings.Add("SubAcctName", "SubAcctName");
            tableMapping.ColumnMappings.Add("TradeVolume", "TradeVolume");
            tableMapping.ColumnMappings.Add("OpeningTradeDate", "OpeningTradeDate");
            tableMapping.ColumnMappings.Add("OpeningTradeId", "OpeningTradeId");
            tableMapping.ColumnMappings.Add("OpeningTradeTypeName", "OpeningTradeTypeName");
            tableMapping.ColumnMappings.Add("OpeningTradePrice", "OpeningTradePrice");
            tableMapping.ColumnMappings.Add("OpeningUnitCost", "OpeningUnitCost");
            tableMapping.ColumnMappings.Add("OpeningTotalPrice", "OpeningTotalPrice");
            tableMapping.ColumnMappings.Add("OpeningTradeMediumName", "OpeningTradeMediumName");
            tableMapping.ColumnMappings.Add("ClosingTradeDate", "ClosingTradeDate");
            tableMapping.ColumnMappings.Add("ClosingTradeId", "ClosingTradeId");
            tableMapping.ColumnMappings.Add("ClosingTradeTypeName", "ClosingTradeTypeName");
            tableMapping.ColumnMappings.Add("ClosingTradePrice", "ClosingTradePrice");
            tableMapping.ColumnMappings.Add("ClosingUnitCost", "ClosingUnitCost");
            tableMapping.ColumnMappings.Add("ClosingTotalPrice", "ClosingTotalPrice");
            tableMapping.ColumnMappings.Add("ClosingTradeMediumName", "ClosingTradeMediumName");
            tableMapping.ColumnMappings.Add("DaysHeld", "DaysHeld");
            tableMapping.ColumnMappings.Add("ShortTermGainLoss", "ShortTermGainLoss");
            tableMapping.ColumnMappings.Add("LongTermGainLoss", "LongTermGainLoss");
            tableMapping.ColumnMappings.Add("CostBasis", "CostBasis");
            tableMapping.ColumnMappings.Add("NetProceeds", "NetProceeds");
            tableMapping.ColumnMappings.Add("UnitCostBasis", "UnitCostBasis");
            tableMapping.ColumnMappings.Add("UnitNetProceeds", "UnitNetProceeds");
            tableMapping.ColumnMappings.Add("OpeningStrategy", "OpeningStrategy");
            tableMapping.ColumnMappings.Add("ClosingStrategy", "ClosingStrategy");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "GHV.p_get_realized_futures_gains";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputAcctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputfuturesId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputStartDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputEndDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@groupByfutures", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HugoDataSet.RealizedFuturesGainsDataTable dataTable, string inputAcctName, global::System.Nullable<int> inputfuturesId, global::System.Nullable<global::System.DateTime> inputStartDate, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<bool> groupByfutures) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputfuturesId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(inputfuturesId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((inputStartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(inputStartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((groupByfutures.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((bool)(groupByfutures.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HugoDataSet.RealizedFuturesGainsDataTable GetData(string inputAcctName, global::System.Nullable<int> inputfuturesId, global::System.Nullable<global::System.DateTime> inputStartDate, global::System.Nullable<global::System.DateTime> inputEndDate, global::System.Nullable<bool> groupByfutures) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inputAcctName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(inputAcctName));
            }
            if ((inputfuturesId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(inputfuturesId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((inputStartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(inputStartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((inputEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(inputEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((groupByfutures.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((bool)(groupByfutures.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            HugoDataSet.RealizedFuturesGainsDataTable dataTable = new HugoDataSet.RealizedFuturesGainsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QueriesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.IDbCommand[] _commandCollection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.IDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.IDbCommand[15];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Connection = new global::System.Data.SqlClient.SqlConnection(global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandText = "dbo.delete_trade";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Connection = new global::System.Data.SqlClient.SqlConnection(global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).CommandText = "dbo.add_stocktrade";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tradeid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.InputOutput, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tradetype", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@volume", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@symbol", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@price", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subacctname", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@medium", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contra", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reason", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@broker", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@exchange", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tradenote", global::System.Data.SqlDbType.Text, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sname", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sexchange", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sgroup", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@archiveflag", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trader", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billingtypedescr", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@specrate", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@traderid", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tradedate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@optiontradeid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shortflag", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@taxLotId", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalCost", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fractionalRemainder", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@linkedTaxlotId", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Connection = new global::System.Data.SqlClient.SqlConnection(global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).CommandText = "GHV.p_insert_taxlot_score";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@taxLotId", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@scoredate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@currentPrice", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@score", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Connection = new global::System.Data.SqlClient.SqlConnection(global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).CommandText = "GHV.p_calculate_taxlot_score";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@taxLotId", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@scoredate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@currentPrice", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unitCostBasis", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@openDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Connection = new global::System.Data.SqlClient.SqlConnection(global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).CommandText = "GHV.p_adjustCostBasis";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@taxLotId", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@newTotalCostBasis", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@newPerShareCostBasis", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@adjustmentDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tradeNote", global::System.Data.SqlDbType.Text, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Connection = new global::System.Data.SqlClient.SqlConnection(global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).CommandText = "GHV.p_adjustSpinoff";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@spinoffSymbol", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@newSpinoffCostBasis", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@newOriginalCostBasis", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@newSpinoffVolume", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[5])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@spinoffDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Connection = new global::System.Data.SqlClient.SqlConnection(global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).CommandText = "dbo.p_get_start_of_year";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@currDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[6])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startDate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.InputOutput, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Connection = new global::System.Data.SqlClient.SqlConnection(global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).CommandText = "GHV.p_update_taxlot_price";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@underlyingId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@scoredate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[7])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@currentPrice", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Connection = new global::System.Data.SqlClient.SqlConnection(global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).CommandText = "GHV.p_update_option_taxlot_price";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@optionId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@optionTypeId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@scoredate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[8])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@currentPrice", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).Connection = new global::System.Data.SqlClient.SqlConnection(global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).CommandText = "GHV.p_delete_taxlot_price";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@underlyingId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[9])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@scoredate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).Connection = new global::System.Data.SqlClient.SqlConnection(global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).CommandText = "GHV.p_delete_option_taxlot_price";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@optionId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@optionTypeId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[10])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@scoredate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[11] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Connection = new global::System.Data.SqlClient.SqlConnection(global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).CommandText = "GHV.p_update_taxlot_strategy";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@taxlotId", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[11])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strategy", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[12] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Connection = new global::System.Data.SqlClient.SqlConnection(global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).CommandText = "GHV.p_update_futures_taxlot_price";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@futuresId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@scoredate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[12])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@currentPrice", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[13] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).Connection = new global::System.Data.SqlClient.SqlConnection(global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).CommandText = "GHV.p_delete_futures_taxlot_price";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctName", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acctId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@futuresId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[13])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@scoredate", global::System.Data.SqlDbType.SmallDateTime, 4, global::System.Data.ParameterDirection.Input, 16, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[14] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).Connection = new global::System.Data.SqlClient.SqlConnection(global::GHVHugoLib.Properties.Settings.Default.HugoConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).CommandText = "GHV.p_update_taxlot_strategy_by_tradeId";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tradeId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[14])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strategy", global::System.Data.SqlDbType.VarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int p_delete_trade(global::System.Nullable<int> id) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[0]));
            if ((id.HasValue == true)) {
                command.Parameters[1].Value = ((int)(id.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int add_stocktrade(
                    ref global::System.Nullable<int> tradeid, 
                    string tradetype, 
                    global::System.Nullable<int> volume, 
                    string symbol, 
                    global::System.Nullable<decimal> price, 
                    string subacctname, 
                    string medium, 
                    string contra, 
                    string reason, 
                    string broker, 
                    string exchange, 
                    string tradenote, 
                    string sname, 
                    string sexchange, 
                    string sgroup, 
                    global::System.Nullable<bool> archiveflag, 
                    string trader, 
                    string billingtypedescr, 
                    global::System.Nullable<decimal> specrate, 
                    global::System.Nullable<short> traderid, 
                    global::System.Nullable<global::System.DateTime> tradedate, 
                    global::System.Nullable<int> optiontradeid, 
                    global::System.Nullable<bool> shortflag, 
                    string taxLotId, 
                    global::System.Nullable<double> totalCost, 
                    global::System.Nullable<double> fractionalRemainder, 
                    string linkedTaxlotId) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[1]));
            if ((tradeid.HasValue == true)) {
                command.Parameters[1].Value = ((int)(tradeid.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((tradetype == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(tradetype));
            }
            if ((volume.HasValue == true)) {
                command.Parameters[3].Value = ((int)(volume.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((symbol == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(symbol));
            }
            if ((price.HasValue == true)) {
                command.Parameters[5].Value = ((decimal)(price.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((subacctname == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(subacctname));
            }
            if ((medium == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(medium));
            }
            if ((contra == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(contra));
            }
            if ((reason == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(reason));
            }
            if ((broker == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(broker));
            }
            if ((exchange == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(exchange));
            }
            if ((tradenote == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(tradenote));
            }
            if ((sname == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(sname));
            }
            if ((sexchange == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(sexchange));
            }
            if ((sgroup == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(sgroup));
            }
            if ((archiveflag.HasValue == true)) {
                command.Parameters[16].Value = ((bool)(archiveflag.Value));
            }
            else {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((trader == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(trader));
            }
            if ((billingtypedescr == null)) {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[18].Value = ((string)(billingtypedescr));
            }
            if ((specrate.HasValue == true)) {
                command.Parameters[19].Value = ((decimal)(specrate.Value));
            }
            else {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((traderid.HasValue == true)) {
                command.Parameters[20].Value = ((short)(traderid.Value));
            }
            else {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((tradedate.HasValue == true)) {
                command.Parameters[21].Value = ((System.DateTime)(tradedate.Value));
            }
            else {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((optiontradeid.HasValue == true)) {
                command.Parameters[22].Value = ((int)(optiontradeid.Value));
            }
            else {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((shortflag.HasValue == true)) {
                command.Parameters[23].Value = ((bool)(shortflag.Value));
            }
            else {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((taxLotId == null)) {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[24].Value = ((string)(taxLotId));
            }
            if ((totalCost.HasValue == true)) {
                command.Parameters[25].Value = ((double)(totalCost.Value));
            }
            else {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((fractionalRemainder.HasValue == true)) {
                command.Parameters[26].Value = ((double)(fractionalRemainder.Value));
            }
            else {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((linkedTaxlotId == null)) {
                command.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[27].Value = ((string)(linkedTaxlotId));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((command.Parameters[1].Value == null) 
                        || (command.Parameters[1].Value.GetType() == typeof(global::System.DBNull)))) {
                tradeid = new global::System.Nullable<int>();
            }
            else {
                tradeid = new global::System.Nullable<int>(((int)(command.Parameters[1].Value)));
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int p_insert_taxlot_score(string acctName, string taxLotId, global::System.Nullable<global::System.DateTime> scoredate, global::System.Nullable<double> currentPrice, global::System.Nullable<int> score) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[2]));
            if ((acctName == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(acctName));
            }
            if ((taxLotId == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(taxLotId));
            }
            if ((scoredate.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(scoredate.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((currentPrice.HasValue == true)) {
                command.Parameters[4].Value = ((double)(currentPrice.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((score.HasValue == true)) {
                command.Parameters[5].Value = ((int)(score.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int p_calculate_taxlot_score(global::System.Nullable<short> acctId, string taxLotId, global::System.Nullable<global::System.DateTime> scoredate, global::System.Nullable<double> currentPrice, global::System.Nullable<double> unitCostBasis, global::System.Nullable<global::System.DateTime> openDate) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[3]));
            if ((acctId.HasValue == true)) {
                command.Parameters[1].Value = ((short)(acctId.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((taxLotId == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(taxLotId));
            }
            if ((scoredate.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(scoredate.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((currentPrice.HasValue == true)) {
                command.Parameters[4].Value = ((double)(currentPrice.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((unitCostBasis.HasValue == true)) {
                command.Parameters[5].Value = ((double)(unitCostBasis.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((openDate.HasValue == true)) {
                command.Parameters[6].Value = ((System.DateTime)(openDate.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int p_adjustCostBasis(string acctName, string taxLotId, global::System.Nullable<double> newTotalCostBasis, global::System.Nullable<double> newPerShareCostBasis, global::System.Nullable<global::System.DateTime> adjustmentDate, string tradeNote) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[4]));
            if ((acctName == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(acctName));
            }
            if ((taxLotId == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(taxLotId));
            }
            if ((newTotalCostBasis.HasValue == true)) {
                command.Parameters[3].Value = ((double)(newTotalCostBasis.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((newPerShareCostBasis.HasValue == true)) {
                command.Parameters[4].Value = ((double)(newPerShareCostBasis.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((adjustmentDate.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(adjustmentDate.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((tradeNote == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(tradeNote));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int p_adjustSpinoff(string acctName, string spinoffSymbol, global::System.Nullable<double> newSpinoffCostBasis, global::System.Nullable<double> newOriginalCostBasis, global::System.Nullable<double> newSpinoffVolume, global::System.Nullable<global::System.DateTime> spinoffDate) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[5]));
            if ((acctName == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(acctName));
            }
            if ((spinoffSymbol == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(spinoffSymbol));
            }
            if ((newSpinoffCostBasis.HasValue == true)) {
                command.Parameters[3].Value = ((double)(newSpinoffCostBasis.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((newOriginalCostBasis.HasValue == true)) {
                command.Parameters[4].Value = ((double)(newOriginalCostBasis.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((newSpinoffVolume.HasValue == true)) {
                command.Parameters[5].Value = ((double)(newSpinoffVolume.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((spinoffDate.HasValue == true)) {
                command.Parameters[6].Value = ((System.DateTime)(spinoffDate.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int p_get_start_of_year(global::System.Nullable<global::System.DateTime> currDate, ref global::System.Nullable<global::System.DateTime> startDate) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[6]));
            if ((currDate.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(currDate.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((startDate.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(startDate.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((command.Parameters[2].Value == null) 
                        || (command.Parameters[2].Value.GetType() == typeof(global::System.DBNull)))) {
                startDate = new global::System.Nullable<global::System.DateTime>();
            }
            else {
                startDate = new global::System.Nullable<global::System.DateTime>(((global::System.DateTime)(command.Parameters[2].Value)));
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int p_update_taxlot_price(string acctName, global::System.Nullable<short> acctId, global::System.Nullable<short> underlyingId, global::System.Nullable<global::System.DateTime> scoredate, global::System.Nullable<double> currentPrice) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[7]));
            if ((acctName == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(acctName));
            }
            if ((acctId.HasValue == true)) {
                command.Parameters[2].Value = ((short)(acctId.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((underlyingId.HasValue == true)) {
                command.Parameters[3].Value = ((short)(underlyingId.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((scoredate.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(scoredate.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((currentPrice.HasValue == true)) {
                command.Parameters[5].Value = ((double)(currentPrice.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int p_update_option_taxlot_price(string acctName, global::System.Nullable<short> acctId, global::System.Nullable<int> optionId, global::System.Nullable<short> optionTypeId, global::System.Nullable<global::System.DateTime> scoredate, global::System.Nullable<double> currentPrice) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[8]));
            if ((acctName == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(acctName));
            }
            if ((acctId.HasValue == true)) {
                command.Parameters[2].Value = ((short)(acctId.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((optionId.HasValue == true)) {
                command.Parameters[3].Value = ((int)(optionId.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((optionTypeId.HasValue == true)) {
                command.Parameters[4].Value = ((short)(optionTypeId.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((scoredate.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(scoredate.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((currentPrice.HasValue == true)) {
                command.Parameters[6].Value = ((double)(currentPrice.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int p_delete_taxlot_price(string acctName, global::System.Nullable<short> acctId, global::System.Nullable<short> underlyingId, global::System.Nullable<global::System.DateTime> scoredate) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[9]));
            if ((acctName == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(acctName));
            }
            if ((acctId.HasValue == true)) {
                command.Parameters[2].Value = ((short)(acctId.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((underlyingId.HasValue == true)) {
                command.Parameters[3].Value = ((short)(underlyingId.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((scoredate.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(scoredate.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int p_delete_option_taxlot_price(string acctName, global::System.Nullable<short> acctId, global::System.Nullable<int> optionId, global::System.Nullable<short> optionTypeId, global::System.Nullable<global::System.DateTime> scoredate) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[10]));
            if ((acctName == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(acctName));
            }
            if ((acctId.HasValue == true)) {
                command.Parameters[2].Value = ((short)(acctId.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((optionId.HasValue == true)) {
                command.Parameters[3].Value = ((int)(optionId.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((optionTypeId.HasValue == true)) {
                command.Parameters[4].Value = ((short)(optionTypeId.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((scoredate.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(scoredate.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int p_update_taxlot_strategy(global::System.Nullable<short> acctId, string taxlotId, string strategy) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[11]));
            if ((acctId.HasValue == true)) {
                command.Parameters[1].Value = ((short)(acctId.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((taxlotId == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(taxlotId));
            }
            if ((strategy == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(strategy));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int p_update_futures_taxlot_price(string acctName, global::System.Nullable<short> acctId, global::System.Nullable<int> futuresId, global::System.Nullable<global::System.DateTime> scoredate, global::System.Nullable<double> currentPrice) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[12]));
            if ((acctName == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(acctName));
            }
            if ((acctId.HasValue == true)) {
                command.Parameters[2].Value = ((short)(acctId.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((futuresId.HasValue == true)) {
                command.Parameters[3].Value = ((int)(futuresId.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((scoredate.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(scoredate.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((currentPrice.HasValue == true)) {
                command.Parameters[5].Value = ((double)(currentPrice.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int p_delete_futures_taxlot_price(string acctName, global::System.Nullable<short> acctId, global::System.Nullable<int> futuresId, global::System.Nullable<global::System.DateTime> scoredate) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[13]));
            if ((acctName == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(acctName));
            }
            if ((acctId.HasValue == true)) {
                command.Parameters[2].Value = ((short)(acctId.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((futuresId.HasValue == true)) {
                command.Parameters[3].Value = ((int)(futuresId.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((scoredate.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(scoredate.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int p_update_taxlot_strategy_by_tradeId(global::System.Nullable<int> tradeId, string strategy) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[14]));
            if ((tradeId.HasValue == true)) {
                command.Parameters[1].Value = ((int)(tradeId.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((strategy == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(strategy));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TradersTableAdapter _tradersTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TradersTableAdapter TradersTableAdapter {
            get {
                return this._tradersTableAdapter;
            }
            set {
                this._tradersTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tradersTableAdapter != null) 
                            && (this._tradersTableAdapter.Connection != null))) {
                    return this._tradersTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tradersTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(HugoDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tradersTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Traders.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tradersTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(HugoDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tradersTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Traders.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tradersTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(HugoDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tradersTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Traders.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tradersTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(HugoDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tradersTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tradersTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tradersTableAdapter != null)) {
                    revertConnections.Add(this._tradersTableAdapter, this._tradersTableAdapter.Connection);
                    this._tradersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tradersTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tradersTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tradersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tradersTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tradersTableAdapter != null)) {
                    this._tradersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tradersTableAdapter]));
                    this._tradersTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591